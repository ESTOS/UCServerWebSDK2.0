{
	"openapi": "3.1.0",
	"info": {
		"title": "ENetUC_Journal",
		"version": "0.0.1",
		"summary": "Journal interface\n\n",
		"description": "## Module description\n\nThis Module defines structures and operations for accessing the journal database of the UCServer.\n\n\n\n## Features\n\n- Get journal entries from the database (asnGetJournalEntries).\n\n- Update journal entries in the database.\n\n- Notify CRUD interface for getting events from the journal database.\n\n\n\nNew journal entries where only generated by the UCServer if the corresponding events happend (Calls, Chats etc.) and cannot be generated by this client API.\n\n"
	},
	"paths": {
		"/asnGetOfflineJournal": {
			"post": {
				"tags": ["Journal"],
				"summary": "Fetch and optionally delete offline journal entries.\n\n",
				"description": "The UCServer saves journal entries of missed calls additionally in an offline database, if the owner of the line\n\nwhere the call was happening was not logged into the UCServer.\n\nWith this function it is possible to read (and delete) such entries.\n\n",
				"deprecated": false,
				"operationId": "2104",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnGetOfflineJournalArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnGetOfflineJournalResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnGetJournalEntriesV2": {
			"post": {
				"tags": ["Journal"],
				"summary": "Search for journal entries of the users conversations.\n\n",
				"description": "asnGetJournalEntries makes it possible to search in the journal database of the user. The search is limited to the journal entries of the logged in user himself (public and private)\n\nand to the journal entries of users where permissions are granted for the logged in user.\n\n\n\nWith AsnGetJournalEntriesV2Argument.findOptions it is possible to give more search criterias.\n\n",
				"deprecated": false,
				"operationId": "2172",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnGetJournalEntriesV2Argument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnGetJournalEntriesResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnUpdateCallAndJournalContactAndNumber": {
			"post": {
				"tags": ["Journal"],
				"summary": "Update the contact information of a current active call or a journal entry.\n\n",
				"description": "A Client can update the contact information for a call. This function updates the information is currently active or, if already disconnected, the corresponding journal entry.\n\n\n\nIf neither the active call was found nor the journal entry, an error will be returned.\n\n",
				"deprecated": false,
				"operationId": "2108",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnUpdateCallAndJournalContactAndNumberArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnUpdateCallAndJournalContactAndNumberResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnUpdateCallLocalContact": {
			"post": {
				"tags": ["Journal"],
				"summary": "Update the contact data of the local contact of a journal entry (\"Mandantenkontakt\").\n\n",
				"description": "A client can search and update the called contact of a call (\"Mandanten\").\n\n",
				"deprecated": false,
				"operationId": "2140",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnUpdateCallLocalContactArgument"
							}
						}
					}
				}
			}
		},
		"/asnUpdateJournalMemo": {
			"post": {
				"tags": ["Journal"],
				"summary": "Update Journal memo text\n\n",
				"description": "A client can update a memo text of a journal entry without transferring the whole journal entry.\n\n",
				"deprecated": false,
				"operationId": "2112",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnUpdateJournalMemoArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnUpdateJournalMemoResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnUpdateJournalProject": {
			"post": {
				"tags": ["Journal"],
				"summary": "Change the project information of a journal entry\n\n",
				"description": "A client can change the project information\/rules of an journal entry independently of the other journal entry data.\n\n",
				"deprecated": false,
				"operationId": "2113",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnUpdateJournalProjectArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnUpdateJournalProjectResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnUpdateJournalReadFlag": {
			"post": {
				"tags": ["Journal"],
				"summary": "Set the 'read' flag of journal entries\n\n",
				"description": "A Client can change the 'read' flag of journal entries in the database independently of the other fields of the entries.\n\n",
				"deprecated": false,
				"operationId": "2114",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnUpdateJournalReadFlagArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnUpdateJournalReadFlagResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnUpdateJournalSubject": {
			"post": {
				"tags": ["Journal"],
				"summary": "Change the subject text of a journal entry.\n\n",
				"description": "A client can change the subject text of a journal entry independently of the other fields.\n\n",
				"deprecated": false,
				"operationId": "2115",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnUpdateJournalSubjectArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnUpdateJournalSubjectResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnGetJournalEntriesCountV2": {
			"post": {
				"tags": ["Journal"],
				"summary": "Count journal entries in the database ang get the result.\n\n",
				"description": "A client can get the count of journal entries from the server in the database for a given filter named 'findOptions' in the argument.\n\n\n\nThis can be used for displaying the count of such journal entries without transferring a lot of journal data via the network.\n\nPopups or pins with the count of unread entries are examples for this.\n\n",
				"deprecated": false,
				"operationId": "2173",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnGetJournalEntriesCountV2Argument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnGetJournalEntriesCountResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnJournalEntryGet": {
			"post": {
				"tags": ["Journal"],
				"summary": "Get the journal entryof a call from the server.\n\n",
				"description": "A client can retrieve a journal entry from a server by its connection id. The entry can be from the database (if the call was finished earlier), from the pending\n\nwrite list (when the call was finished, but not yet written to the database) or if the call is still ongoing will be generated from its CallInformation data.\n\n",
				"deprecated": false,
				"operationId": "2117",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnJournalEntryGetArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnJournalEntryGetResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnJournalEntryChanged": {
			"post": {
				"tags": ["Journal"],
				"summary": "Journal update event from the server.\n\n",
				"deprecated": false,
				"operationId": "2109",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnJournalEntryChangedArgument"
							}
						}
					}
				}
			}
		},
		"/asnJournalEntryListChanged": {
			"post": {
				"tags": ["Journal"],
				"summary": "Event from the server if journal entries where changed (new version of asnJournalEntryChanged, which only supports a single entry)\n\n",
				"deprecated": false,
				"operationId": "2170",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnJournalEntryChangedListArgument"
							}
						}
					}
				}
			}
		},
		"/asnJournalSubscribeEvents": {
			"post": {
				"tags": ["Journal"],
				"summary": "Subscribe for events of journal database changes\n\n",
				"description": "Clients can subscribe for events from the journal database when changes occure.&lt;br \/&gt;\n\nThe server will then send events if there were entries added, deleted or changed.&lt;br \/&gt;\n\nWith the subscription, the client can set a more detailed description, which entries it is interested in the direct result\n\nof the call. It is possible to set a last known transaction id to start from, the maximum number of entries to reply or if\n\nthe client is only interested in the users own journal entries or additional of the groups the user is in (and is allowed to see the journal entries).&lt;br \/&gt;\n\n&lt;br \/&gt;\n\nTo unsubscribe from the jornal events, call this function with bReceiveJournalEvents set to false. This will stop the server to send events.\n\n",
				"deprecated": false,
				"operationId": "2171",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnJournalSubscribeEventsArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnJournalSubscribeEventsResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnJournalGetSettings": {
			"post": {
				"tags": ["Journal"],
				"summary": "Get the current Journal settings from the server\n\n",
				"description": "A client can get the current journal settings, in particular the privacy settings, which describes the handling of private calls on the server.\n\n",
				"deprecated": false,
				"operationId": "2118",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnJournalGetSettingsArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnJournalGetSettingsResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnUpdateJournal": {
			"post": {
				"tags": ["Journal"],
				"summary": "Event sent to the server to update journal entries ansynchronously. The Result will be received from the server as asnJournalEntryChanged event.\n\n",
				"deprecated": false,
				"operationId": "2119",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnUpdateJournalArgument"
							}
						}
					}
				}
			}
		},
		"/asnDeleteJournalEntries": {
			"post": {
				"tags": ["Journal"],
				"summary": "Delete journal entries form the database.\n\n",
				"description": "Depending on the persmissions, a client can delete journal entries of the user or from the groups. If the call fails, AsnRequestError will be used instead of the result.\n\n",
				"deprecated": false,
				"operationId": "2128",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnDeleteJournalEntriesArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnDeleteJournalEntriesResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		},
		"/asnMarkAllJournalEntriesAsRead": {
			"post": {
				"tags": ["Journal"],
				"summary": "Mark all journal entries opf the current user as 'read'.\n\n",
				"description": "To make it a client simpler, this function marks all journal entries of the current user as 'read' in the database.\n\n",
				"deprecated": false,
				"operationId": "2129",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AsnMarkAllJournalEntriesAsReadArgument"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnMarkAllJournalEntriesAsReadResult"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsnRequestError"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"AsnOptionalParameters": {
				"$ref": "ENetUC_Common.json#/components/schemas/AsnOptionalParameters"
			},
			"UTF8StringList": {
				"$ref": "ENetUC_Common.json#/components/schemas/UTF8StringList"
			},
			"AsnRequestError": {
				"$ref": "ENetUC_Common.json#/components/schemas/AsnRequestError"
			},
			"AsnSystemTime": {
				"$ref": "ENetUC_Common.json#/components/schemas/AsnSystemTime"
			},
			"AsnNetDatabaseContact": {
				"$ref": "ENetUC_Common.json#/components/schemas/AsnNetDatabaseContact"
			},
			"AsnProjectPinRule": {
				"$ref": "ENetUC_Common_SIPCTI.json#/components/schemas/AsnProjectPinRule"
			},
			"AsnNetDatabaseJournalCallType": {
				"type": "integer",
				"oneOf": [
					{
						"title": "eJOURNALCALLTYPEPBX",
						"const": 0
					},
					{
						"title": "eJOURNALCALLTYPEVIDEOCHAT",
						"const": 1
					},
					{
						"title": "eJOURNALCALLTYPEAUDIOCHAT",
						"const": 2
					},
					{
						"title": "eJOURNALCALLTYPEAUDIOVIDEOCHAT",
						"const": 3
					},
					{
						"title": "eJOURNALCALLTYPEIM",
						"const": 4
					},
					{
						"title": "eJOURNALCALLTYPEBLUETOOTHMOBILE",
						"const": 5
					},
					{
						"title": "eJOURNALCALLTYPEBLUETOOTHMOBILEUNKNOWNDURATION",
						"const": 6
					},
					{
						"title": "eJOURNALCALLTYPESIPAVCALL",
						"const": 7
					},
					{
						"title": "eJOURNALCALLTYPESMS",
						"const": 8
					},
					{
						"title": "eJOURNALCALLTYPESCREENSHARING",
						"const": 9
					},
					{
						"title": "eJOURNALCALLTYPERSCREENSHARING",
						"const": 10
					}]},
			"AsnNetDatabaseJournalFilterEnumeration": {
				"type": "integer",
				"oneOf": [
					{
						"title": "flagIntern",
						"const": 1
					},
					{
						"title": "flagExtern",
						"const": 2
					},
					{
						"title": "flagInbound",
						"const": 4
					},
					{
						"title": "flagOutbound",
						"const": 8
					},
					{
						"title": "flagConnected",
						"const": 16
					},
					{
						"title": "flagNotConnected",
						"const": 32
					},
					{
						"title": "flagHasMemo",
						"const": 64
					},
					{
						"title": "flagHasNoMemo",
						"const": 128
					},
					{
						"title": "flagUnreadOnly",
						"const": 256
					},
					{
						"title": "flagNoUnknown",
						"const": 512
					},
					{
						"title": "flagTextChats",
						"const": 1024
					},
					{
						"title": "flagAudioChats",
						"const": 2048
					},
					{
						"title": "flagVideoChats",
						"const": 4096
					},
					{
						"title": "flagPhoneCalls",
						"const": 8192
					},
					{
						"title": "flagDeskShare",
						"const": 16384
					},
					{
						"title": "flagIncludeAllPublic",
						"const": 65536
					}]},
			"AsnJournalSubscribeFlags": {
				"type": "integer",
				"oneOf": [
					{
						"title": "eDEFAULT",
						"const": 0
					},
					{
						"title": "eGROUPJOURNAL",
						"const": 1
					}]},
			"AsnJournalPrivateCallOptions": {
				"type": "integer",
				"oneOf": [
					{
						"title": "eNORMAL",
						"const": 0
					},
					{
						"title": "eSHORTENNUMBERS",
						"const": 1
					},
					{
						"title": "eNONUMBERS",
						"const": 2
					}]},
			"AsnUpdateJournalUpdateFlags": {
				"type": "integer",
				"oneOf": [
					{
						"title": "eUpdateFlagRead",
						"const": 1
					},
					{
						"title": "eUpdateFlagContact",
						"const": 2
					},
					{
						"title": "eUpdateFlagProject",
						"const": 4
					},
					{
						"title": "eUpdateFlagMemo",
						"const": 8
					},
					{
						"title": "eUpdateFlagSubject",
						"const": 16
					},
					{
						"title": "eUpdateFlagAcceptor",
						"const": 32
					},
					{
						"title": "eUpdateFlagPhoneNumber",
						"const": 64
					},
					{
						"title": "eUpdateFlagTrackerLastCall",
						"const": 128
					},
					{
						"title": "eUpdateFlagNoStatistic",
						"const": 256
					},
					{
						"title": "eUpdateFlagCallType",
						"const": 512
					},
					{
						"title": "eUpdateFlagLabel",
						"const": 1024
					},
					{
						"title": "eUpdateFlagDeleted",
						"const": 2048
					},
					{
						"title": "eUpdateFlagTrackerCallFlow",
						"const": 4096
					},
					{
						"title": "eUpdateFlagContactName",
						"const": 8192
					}]},
			"AsnGetOfflineJournalArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnGetOfflineJournal.\n\n### Private \n0",
				"properties": {
					"iMaxDays": {
						"type": "integer"
					},
					"iMarkRead": {
						"type": "integer"
					}
				},
				"required": [
					"iMaxDays",
					"iMarkRead"
				]
			},
			"AsnNetDatabaseJournal": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nThe structure of a journal entry of conversations on the UCServer.\n\n### Long \nThis sequence describes a call or other conversation when it is stored in the history database called \"journal\".\n\nWith this structure it it possible to see when an conversation or event has happend and other meta information about it.\nThe API provides operations to alter or add information of that entry.\nNew entries can only be generated by the UCServer.\n\n### Private \n0",
				"properties": {
					"u8sConnectionID": {
						"type": "string"
					},
					"stStartTime": {
						"$ref": "#/components/schemas/AsnSystemTime"
					},
					"stStopTime": {
						"$ref": "#/components/schemas/AsnSystemTime"
					},
					"iDurationTotal": {
						"type": "integer"
					},
					"stConnectTime": {
						"$ref": "#/components/schemas/AsnSystemTime"
					},
					"stDisconnectTime": {
						"$ref": "#/components/schemas/AsnSystemTime"
					},
					"iDurationConnected": {
						"type": "integer"
					},
					"iOrigin": {
						"type": "integer"
					},
					"iInternal": {
						"type": "integer"
					},
					"u8sLineNumber": {
						"type": "string"
					},
					"u8sLineName": {
						"type": "string"
					},
					"u8sLineUserName": {
						"type": "string"
					},
					"iLineUserOffline": {
						"type": "integer"
					},
					"u8sLocalNumber": {
						"type": "string"
					},
					"u8sPhoneNumber": {
						"type": "string"
					},
					"u8sRedirectingNumber": {
						"type": "string"
					},
					"u8sContactName": {
						"type": "string"
					},
					"u8sContactCompany": {
						"type": "string"
					},
					"u8sContactEntryID": {
						"type": "string"
					},
					"u8sContactEntryStoreID": {
						"type": "string"
					},
					"u8sContactEntryDBID": {
						"type": "string"
					},
					"u8sCtiServerUserName": {
						"type": "string"
					},
					"u8sProviderNumber": {
						"type": "string"
					},
					"iSucessState": {
						"type": "integer"
					},
					"u8sSubject": {
						"type": "string"
					},
					"u8sMemo": {
						"type": "string"
					},
					"iReadFlag": {
						"type": "integer"
					},
					"projectPinRule": {
						"$ref": "#/components/schemas/AsnProjectPinRule"
					},
					"u8sTrackerID": {
						"type": "string"
					},
					"u8sAcceptorName": {
						"type": "string"
					},
					"u8sAcceptorCtiServerUserName": {
						"type": "string"
					},
					"u8sAcceptorConnectionID": {
						"type": "string"
					},
					"optionalParams": {
						"$ref": "#/components/schemas/AsnOptionalParameters"
					}
				},
				"required": [
					"u8sConnectionID",
					"stStartTime",
					"stStopTime",
					"iDurationTotal",
					"stConnectTime",
					"stDisconnectTime",
					"iDurationConnected",
					"iOrigin",
					"iInternal",
					"u8sLineNumber",
					"u8sLineName",
					"u8sLineUserName",
					"iLineUserOffline",
					"u8sLocalNumber",
					"u8sPhoneNumber",
					"u8sRedirectingNumber",
					"u8sContactName",
					"u8sContactCompany",
					"u8sContactEntryID",
					"u8sContactEntryStoreID",
					"u8sContactEntryDBID",
					"u8sCtiServerUserName",
					"u8sProviderNumber",
					"iSucessState",
					"u8sSubject",
					"u8sMemo",
					"iReadFlag",
					"projectPinRule",
					"u8sTrackerID",
					"u8sAcceptorName",
					"u8sAcceptorCtiServerUserName",
					"u8sAcceptorConnectionID"
				]
			},
			"AsnNetDatabaseJournalFindOptionsV2": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nFilter options for finding more specific journal entries.\n\n### Long \nThe find options are use to give more details about the journal entries which should be in the result list.\nBy default, the search is limited to the journal entries of the logged in user (public and private). Deleted ones are never listed.\n\nIf there are user names given in u8slistLineUserNames, the search can be expanded on users, where access rights were granted (public only).\n\n### Private \n0",
				"properties": {
					"stStartTimeFrom": {
						"$ref": "#/components/schemas/AsnSystemTime"
					},
					"stStartTimeTo": {
						"$ref": "#/components/schemas/AsnSystemTime"
					},
					"u8slistLineUserNames": {
						"$ref": "#/components/schemas/UTF8StringList"
					},
					"u8slistPhoneNumber": {
						"$ref": "#/components/schemas/UTF8StringList"
					},
					"u8sContactName": {
						"type": "string"
					},
					"u8sCompanyName": {
						"type": "string"
					},
					"u8sFilterText": {
						"type": "string"
					},
					"iMaxNumEntries": {
						"type": "integer"
					},
					"iFilter": {
						"type": "integer"
					},
					"iLastKnownGlobTransactionID": {
						"type": "integer"
					}
				},
				"required": [
					"stStartTimeFrom",
					"stStartTimeTo",
					"u8slistLineUserNames",
					"u8slistPhoneNumber",
					"u8sContactName",
					"u8sCompanyName",
					"u8sFilterText",
					"iMaxNumEntries",
					"iFilter"
				]
			},
			"AsnUpdateCallAndJournalContactAndNumberArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnUpdateCallAndJournalContactAndNumber.\n\n### Private \n0",
				"properties": {
					"u8sConnectionID": {
						"type": "string"
					},
					"u8sRemoteNumberSC": {
						"type": "string"
					},
					"remoteContact": {
						"$ref": "#/components/schemas/AsnNetDatabaseContact"
					}
				},
				"required": [
					"u8sConnectionID",
					"u8sRemoteNumberSC",
					"remoteContact"
				]
			},
			"AsnUpdateCallAndJournalContactAndNumberResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nThe result of asnUpdateCallAndJournalContactAndNumber.\n\n### Private \n0",
				"properties": {
					"bResultCallInfoUpdate": {
						"type": "boolean"
					},
					"bResultJournalUpdate": {
						"type": "boolean"
					}
				},
				"required": [
					"bResultCallInfoUpdate",
					"bResultJournalUpdate"
				]
			},
			"AsnUpdateCallLocalContactArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnUpdateCallLocalContact event to the server\n\n### Private \n0",
				"properties": {
					"u8sConnectionID": {
						"type": "string"
					},
					"localContact": {
						"$ref": "#/components/schemas/AsnNetDatabaseContact"
					}
				},
				"required": [
					"u8sConnectionID",
					"localContact"
				]
			},
			"AsnUpdateJournalMemoArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnUpdateJournalMemo\n\n### Private \n0",
				"properties": {
					"u8sConnectionIDList": {
						"$ref": "#/components/schemas/UTF8StringList"
					},
					"u8sMemo": {
						"type": "string"
					}
				},
				"required": [
					"u8sConnectionIDList",
					"u8sMemo"
				]
			},
			"AsnUpdateJournalMemoResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnUpdateJournalMemo\n\n### Private \n0",
				"properties": {
					"bSuccess": {
						"type": "boolean"
					}
				},
				"required": [
					"bSuccess"
				]
			},
			"AsnUpdateJournalProjectArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnUpdateJournalProject\n\n### Private \n0",
				"properties": {
					"u8sConnectionIDList": {
						"$ref": "#/components/schemas/UTF8StringList"
					},
					"projectPinRule": {
						"$ref": "#/components/schemas/AsnProjectPinRule"
					}
				},
				"required": [
					"u8sConnectionIDList",
					"projectPinRule"
				]
			},
			"AsnUpdateJournalProjectResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnUpdateJournalProject\n\n### Private \n0",
				"properties": {
					"bSuccess": {
						"type": "boolean"
					}
				},
				"required": [
					"bSuccess"
				]
			},
			"AsnUpdateJournalReadFlagArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnUpdateJournalReadFlag\n\n### Private \n0",
				"properties": {
					"u8sConnectionIDList": {
						"$ref": "#/components/schemas/UTF8StringList"
					},
					"bReadFlag": {
						"type": "boolean"
					}
				},
				"required": [
					"u8sConnectionIDList",
					"bReadFlag"
				]
			},
			"AsnUpdateJournalReadFlagResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnUpdateJournalReadFlag\n\n### Private \n0",
				"properties": {
					"bSuccess": {
						"type": "boolean"
					}
				},
				"required": [
					"bSuccess"
				]
			},
			"AsnUpdateJournalSubjectArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnUpdateJournalSubject\n\n### Private \n0",
				"properties": {
					"u8sConnectionIDList": {
						"$ref": "#/components/schemas/UTF8StringList"
					},
					"u8sSubject": {
						"type": "string"
					}
				},
				"required": [
					"u8sConnectionIDList",
					"u8sSubject"
				]
			},
			"AsnUpdateJournalSubjectResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnUpdateJournalSubject\n\n### Private \n0",
				"properties": {
					"bSuccess": {
						"type": "boolean"
					}
				},
				"required": [
					"bSuccess"
				]
			},
			"AsnGetJournalEntriesCountResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnGetJournalEntriesCount and asnGetJournalEntriesCountV2 method\n\n### Private \n0",
				"properties": {
					"iCount": {
						"type": "integer"
					}
				},
				"required": [
					"iCount"
				]
			},
			"AsnJournalEntryGetArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnJournalEntryGet\n\n### Private \n0",
				"properties": {
					"u8sConnectionID": {
						"type": "string"
					}
				},
				"required": [
					"u8sConnectionID"
				]
			},
			"AsnJournalSubscribeEventsArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnJournalSubscribeEvents\n\n### Private \n0",
				"properties": {
					"bReceiveJournalEvents": {
						"type": "boolean"
					},
					"iLastKnownGlobTransactionID": {
						"type": "integer"
					},
					"iMaxEntries": {
						"type": "integer"
					},
					"iFlags": {
						"type": "integer"
					}
				},
				"required": [
					"bReceiveJournalEvents"
				]
			},
			"AsnJournalSubscribeEventsResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnJournalSubscribeEvents if the call is successful. If an error occured, the AsnRequestError will be returned\n\n### Private \n0",
				"properties": {
					"iResult": {
						"type": "integer"
					},
					"optionalParams": {
						"$ref": "#/components/schemas/AsnOptionalParameters"
					}
				},
				"required": [
					"iResult"
				]
			},
			"AsnJournalGetSettingsArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnJournalGetSettings - there are no parameters needed, but the call needs an argument.\n\n### Private \n0"
			},
			"AsnDeleteJournalEntriesArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnDeleteJournalEntries\n\n### Private \n0",
				"properties": {
					"u8sConnectionIDList": {
						"$ref": "#/components/schemas/UTF8StringList"
					}
				},
				"required": [
					"u8sConnectionIDList"
				]
			},
			"AsnDeleteJournalEntriesResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnDeleteJournalEntries\n\n### Private \n0",
				"properties": {
					"iResult": {
						"type": "integer"
					}
				},
				"required": [
					"iResult"
				]
			},
			"AsnMarkAllJournalEntriesAsReadArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnMarkAllJournalEntriesAsRead\n\n### Private \n0"
			},
			"AsnMarkAllJournalEntriesAsReadResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnMarkAllJournalEntriesAsRead\n\n### Private \n0",
				"properties": {
					"iResult": {
						"type": "integer"
					}
				},
				"required": [
					"iResult"
				]
			},
			"AsnNetDatabaseJournalList": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/AsnNetDatabaseJournal"
				}
			},
			"AsnGetJournalEntriesResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnGetJournalEntries and asnGetJournalEntriesV2 operation\n\n### Private \n0",
				"properties": {
					"journalList": {
						"$ref": "#/components/schemas/AsnNetDatabaseJournalList"
					}
				},
				"required": [
					"journalList"
				]
			},
			"AsnGetJournalEntriesV2Argument": {
				"type": "object",
				"description": "### Category \nJournal\n### Private \n0",
				"properties": {
					"findOptions": {
						"$ref": "#/components/schemas/AsnNetDatabaseJournalFindOptionsV2"
					}
				},
				"required": [
					"findOptions"
				]
			},
			"AsnGetJournalEntriesCountV2Argument": {
				"type": "object",
				"description": "### Category \nJournal\n### Private \n0",
				"properties": {
					"findOptions": {
						"$ref": "#/components/schemas/AsnNetDatabaseJournalFindOptionsV2"
					}
				},
				"required": [
					"findOptions"
				]
			},
			"AsnJournalEntryGetResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnJournalEntryGet\n\n### Private \n0",
				"properties": {
					"journalEntry": {
						"$ref": "#/components/schemas/AsnNetDatabaseJournal"
					}
				},
				"required": [
					"journalEntry"
				]
			},
			"AsnJournalEntryChangedArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for the asnJournalEntryChanged event\n\n### Private \n0",
				"properties": {
					"iFlags": {
						"type": "integer"
					},
					"journalEntry": {
						"$ref": "#/components/schemas/AsnNetDatabaseJournal"
					},
					"optionalParams": {
						"$ref": "#/components/schemas/AsnOptionalParameters"
					}
				},
				"required": [
					"iFlags",
					"journalEntry"
				]
			},
			"AsnJournalEntryChangedList": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/AsnJournalEntryChangedArgument"
				}
			},
			"AsnJournalEntryChangedListArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument of asnJournalEntryListChanged from the server\n\n### Private \n0",
				"properties": {
					"iLastTransactionID": {
						"type": "integer"
					},
					"journalEntryChangedList": {
						"$ref": "#/components/schemas/AsnJournalEntryChangedList"
					}
				},
				"required": [
					"iLastTransactionID",
					"journalEntryChangedList"
				]
			},
			"AsnJournalGetSettingsResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnJournalGetSettings\n\n### Private \n0",
				"properties": {
					"ePrivacyLevel": {
						"$ref": "#/components/schemas/AsnJournalPrivateCallOptions"
					},
					"bUseOfflineJournal": {
						"type": "boolean"
					},
					"bOfflineDeleteOldEntries": {
						"type": "boolean"
					},
					"iOfflineDaysNoDelete": {
						"type": "integer"
					}
				},
				"required": [
					"ePrivacyLevel",
					"bUseOfflineJournal",
					"bOfflineDeleteOldEntries",
					"iOfflineDaysNoDelete"
				]
			},
			"AsnUpdateJournalArgument": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nArgument for asnUpdateJournal, event to the server.\n\n### Private \n0",
				"properties": {
					"journalList": {
						"$ref": "#/components/schemas/AsnNetDatabaseJournalList"
					},
					"iFlags": {
						"type": "integer"
					},
					"optionalParams": {
						"$ref": "#/components/schemas/AsnOptionalParameters"
					}
				},
				"required": [
					"journalList",
					"iFlags"
				]
			},
			"AsnGetOfflineJournalResult": {
				"type": "object",
				"description": "### Category \nJournal\n### Short \nResult of asnGetOfflineJournal.\n\n### Private \n0",
				"properties": {
					"journalList": {
						"$ref": "#/components/schemas/AsnNetDatabaseJournalList"
					}
				},
				"required": [
					"journalList"
				]
			}
		}
	}
}
