// [PrintTSCodeOne]
// [PrintTSComments]
/*
 * ENetUC_Mgmt.ts
 * "UC-Server-Access-Protocol-Management" ASN.1 stubs.
 * This file was generated by estos esnacc (V6.0.19, 20.09.2024)
 * based on Coral WinSnacc written by Deepak Gupta
 * NOTE: This is a machine generated file - editing not recommended
 */

// prettier-ignore
/* eslint-disable */
/**
 * Administration interface (UCServer administration)
 * ## Module description
 * This module defines the structures and operations operationsfor the UCServer management software.
 * It should be used by the UCServer Administrator, Web based administration tools or automatic provisioning applications.
 * Several operations are a copy of operations in ENetUC_Admin.asn1 and renamed \"asnAdmin...\" -&gt; \"asnMgmt...\"
 * (for having a clearer separation of the interfaces)
 *
 * ## Versioning
 * It is important to increment the version of the protocol, whenever there are incompatible changes.
 * The admin and the server must have an equal version to communicate.
 * The protocol version defined with the field named AsnManagementProtocolVersion
 *
 * ##        Management operations
 */
// [PrintTSImports]
import * as asn1ts from "@estos/asn1ts";
import * as ENetUC_Common from "./ENetUC_Common";
import * as ENetUC_Common_SIPCTI from "./ENetUC_Common_SIPCTI";
import * as ENetUC_Common_AsnContact from "./ENetUC_Common_AsnContact";
import * as ENetUC_ClientCapabilities from "./ENetUC_ClientCapabilities";
import * as ENetUC_BinaryTransfer from "./ENetUC_BinaryTransfer";
import * as ENetUC_Admin from "./ENetUC_Admin";
import * as ENetUC_CTI from "./ENetUC_CTI";
import * as ENetUC_Common_Auth from "./ENetUC_Common_Auth";
import * as ENetUC_Transport from "./ENetUC_Transport";
import * as ENetROSEInterface from "./ENetROSEInterface";
// [PrintTSRootTypes]
export const MODULE_NAME = "ENetUC_Mgmt";
export const MODULE_LASTCHANGE = "2024-07-15T00:00:00Z";
export const MODULE_MAJOR_VERSION = 8;
export const MODULE_MINOR_VERSION = 20240715;
export const MODULE_VERSION = "8.0.20240715";

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnManagementProtocolVersion {
	/**
	 * This is the protocol interface version. Increment whenever there are incompatible changes.
	 * just increment the number, do not add additional members.
	 */
	current = 3
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtGetUserProfilesErrorEnum {
	success = 0,
	nouserfound = 1,
	accessdenied = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtSMSSenderAddressType {
	eSMSSenderAddressUserConfigured = 0,
	eSMSSenderAddressUserConfiguredIfAvailable = 1,
	eSMSSenderAddressServerConfigured = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtACUBROADCASTSENUM {
	eACUBROADCASTUPDATE = 1,
	eACUBROADCASTUPDATEALL = 2,
	eACUBROADCASTREPORTSTATUS = 3
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnUpdateAVBehaviour {
	/** Warten bis der Client Idle ist */
	waitForIdle = 0,
	/** Upate immer sofort ausführen */
	immediate = 1,
	/** Warten bis der Client Idle ist, maximal iMaxWaitTimeForIdleMinutes Minuten */
	waitForIdleTimed = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtTapiLineSINGALCALLSONADDRESSEnum {
	eSINGALCALLSONADDRESSALL = 0,
	eSINGALCALLSONADDRESS0 = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnSIPAVResponseCodes {
	rcdefault = 0,
	rcbusy = 1,
	rctmpavailable = 2,
	rcdecline = 3,
	rcringing = 4
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtEnumLineType {
	/** Unbekannter Leitungstype */
	unknown = 0,
	/** TAPI CTI Leitung */
	cti = 1,
	/** Bluetooth Leitung */
	mobile = 2,
	/** SIP AV Leitung */
	sipav = 3,
	/** AV Client Leitung */
	clientav = 4
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtDeskShareAccess {
	/** Benutzer dürfen gar kein Desktop Sharing verwenden. */
	eDeskShareAccessNone = 0,
	/** Benutzer dürfen nur Anfragen\/Aufforderungen beantworten. */
	eDeskShareAccessAccept = 1,
	/** Benutzer dürfen alles, also insb. auch Desktop Sharing selbst initiieren. */
	eDeskShareAccessFull = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtEnumUMSecurity {
	eUMSECURITYINDIVIDUAL = 0,
	eUMSECURITYWINUSERNAME = 1,
	eUMSECURITYDOMAIN = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtEnumUMSelfInstall {
	eUMSELFINSTALLFULL = 0,
	eUMSELFINSTALLSIMPLE = 1,
	eUMSELFINSTALLNONE = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnEUserReplicatorType {
	eNONE = 0,
	eENTRAID = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtSchemaExtensionVersion {
	eSCHEMAEXTENSIONVERSIONNOTDETECTABLE = -1,
	eSCHEMAEXTENSIONVERSIONNONE = 0,
	eSCHEMAEXTENSIONVERSION3 = 1,
	eSCHEMAEXTENSIONVERSION4 = 2,
	eSCHEMAEXTENSIONVERSION6 = 3
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtPhoneNumberFormats {
	/** Supercanonisch -&gt; +49815136856116 */
	ePHONENUMBERFORMATPLAIN = 0,
	/** Supercanonisch, intern gekürzt -&gt; 116 */
	ePHONENUMBERFORMATPLAININTERNAL = 1,
	/** Lesbar, ungekürzt -&gt; +49 (8151) 36856-116 */
	ePHONENUMBERFORMATREADABLE = 2,
	/** Lesbar, intern gekürzt -&gt; 116 */
	ePHONENUMBERFORMATREADABLEINTERNAL = 3,
	/** Wählbar -&gt; 0049815136856116 */
	ePHONENUMBERFORMATDIALABLE = 4,
	/** entsprechend DIN 5008:2005 -&gt; +49 8151 36856-116 */
	ePHONENUMBERFORMATDIN = 5,
	/** entsprechend DIN 5008:2005, intern gekürzt -&gt; 116 */
	ePHONENUMBERFORMATDININTERNAL = 6,
	/** Supercanonisch '-' erlaubt -&gt; +49815136856-116 */
	ePHONENUMBERFORMATPLAINWEXT = 7,
	/** Supercanonisch '-' erlaubt -&gt; 116 */
	ePHONENUMBERFORMATPLAINWEXTINTERNAL = 8,
	/** Übergebener String wird nicht formatiert */
	ePHONENUMBERFORMATUNFORMATTED = 9
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtUserManagerInterfaceType {
	eUSERMANAGERINTERFACETYPEUNKNOWN = 0,
	eUSERMANAGERINTERFACETYPEBUILTIN = 1,
	eUSERMANAGERINTERFACETYPEACTIVEDIRECTORY = 2,
	eUSERMANAGERINTERFACETYPELDAP = 3,
	eUSERMANAGERINTERFACETYPEBUILTINDB = 4
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtELICENSEFEATURE {
	eELICENSEFEATUREUSERS = 1,
	eELICENSEFEATURELINES = 2,
	eELICENSEFEATURECLIENTS = 3,
	eELICENSEFEATUREUMREPLICATOR = 4,
	eELICENSEFEATUREANALYTICS = 5,
	eELICENSEFEATUREINSTANCES = 6,
	eELICENSEFEATURESERVERLINES = 7,
	eELICENSEFEATURECHALLENGEPBX = 8,
	eELICENSEFEATURECSTACONNECTIONS = 9,
	eELICENSEFEATURECHANNELS = 10
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtECOMPROMISESTATUS {
	/** Kein Missbrauch bekannt */
	eECOMPROMISESTATUSVALID = 0,
	/** Blacklistet in der WaWi (auf Basis ProduktID Seriennummer) */
	eECOMPROMISESTATUSBLACKLISTEDINVALID = 1,
	/** Blacklistet in der WaWi (auf Basis ProduktID Seriennummer in Verbindung mit dem letzten Bindungsdatum (alle die aelter sind sind ungueltig)) */
	eECOMPROMISESTATUSREBOUNDINVALID = 2,
	/** Wie ECOMPROMISESTATUSBLACKLISTEDINVALID aber temporaer gueltig (Uebergangslizenz) (Ob wirklich gueltig steht im expired Flag) */
	eECOMPROMISESTATUSBLACKLISTEDTEMPORARY = 3,
	/** Wie ECOMPROMISESTATUSREBOUNDINVALID aber temporaer gueltig (Ueergangslizenz) (Ob wirklich gueltig steht im expired Flag) */
	eECOMPROMISESTATUSREBOUNDTEMPORARY = 4
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtGetLicenseErrorEnum {
	eLICENSEERREXISTS = -23,
	eLICENSEERRINVALIDLICENSE = -25,
	eLICENSEERRDEPENDENCIES = -26,
	eLICENSEERRREQUIRESHARDWAREID = -27,
	eLICENSEERRFORBIDDENCOMBINATION = -28,
	eLICENSEERRLICENSEEXPIRED = -29,
	eLICENSEERRBLACKLISTEDINVALID = -30,
	eLICENSEERRREBOUNDINVALID = -31
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtVerifyUCWebServicesConfigError {
	eUCWSSERVERSTATUSCONNECTED = 0,
	eUCWSSERVERSTATUSUNKNOWN = 1,
	eUCWSSERVERSTATUSINVALIDUCSID = 2,
	eUCWSSERVERSTATUSLOGINFAILED = 3,
	eUCWSSERVERSTATUSFAILED = 4,
	eUCWSSERVERSTATUSREDIRECT = 5
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtMobileAccessOption {
	eNONE = 0,
	eUCCONNECT = 1,
	eOWNSERVERS = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnDatabaseManagerAuthModeEnum {
	eAuthImplicitWindows = 0,
	eAuthExplicitSQL = 1,
	eAuthExplicitWindows = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtGetDatabaseManagerSettingsErrorEnum {
	/** Wird in AsnRequestError als Error-Nummer verwendet */
	success = 0,
	accessdenied = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtSetDatabaseManagerSettingsErrorEnum {
	/** Wird in AsnRequestError als Error-Nummer verwendet */
	success = 0,
	accessdenied = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnInterfaceTypeEnum {
	eINTERFACETYPEUNDEF = -1,
	/** Interface für die Administration */
	eINTERFACETYPEADMIN = 0,
	/** Interface für Clients */
	eINTERFACETYPECLIENT = 1,
	/** Interface für TSPs */
	eINTERFACETYPETSP = 2,
	/** Interface für WebService (HTTP) */
	eINTERFACETYPEHTTP = 3,
	/** Interface für WebService (HTTPS) */
	eINTERFACETYPEHTTPS = 4,
	/** Interface für LDAP */
	eINTERFACETYPELDAP = 5,
	/** Interface für LDAPs */
	eINTERFACETYPELDAPS = 6,
	/** Interface für WebService via nodejs (HTTP) */
	eINTERFACETYPEHTTPNODEJS = 7,
	/** Interface für WebService via nodejs (HTTPS) */
	eINTERFACETYPEHTTPSNODEJS = 8,
	/** Interface für SIP Client Registrierungen (Server ist ein Registrar) */
	eINTERFACETYPESIPREGISTRAR = 9,
	/** Interface für SIP Federation Verbindungen */
	eINTERFACETYPESIPFEDERATION = 10,
	/** Interface für XMPP Federation Verbindungen */
	eINTERFACETYPEXMPPFEDERATION = 11
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnInterfaceProtocolEnum {
	ePROTOCOLUNDEF = -1,
	/** TCP unverschlüsselt */
	ePROTOCOLTCP = 0,
	/** STARTTLS optional - Socket initial TCP (Zertifikat im Store) */
	ePROTOCOLSTARTTLSOPTIONAL = 1,
	/** STARTTLS verpflichtend - Socket initial TCP (Zertifikat im Store) */
	ePROTOCOLSTARTTLSMANDATORY = 2,
	/** TLS verschlüsselt - Socket initial TLS (Zertifikat im Store) */
	ePROTOCOLTLS = 3,
	/** TLS verschlüsselt (Zertifikat in einem File) */
	ePROTOCOLTLSFILECERT = 4,
	/** UDP unverschlüsselt */
	ePROTOCOLUDP = 5,
	/** MTLS verschlüsselt */
	ePROTOCOLMTLS = 6
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnInterfaceStatusEnum {
	/** Status bzw. Interface unbekannt */
	eINTERFACESTATUSUNDEF = -1,
	/** Nicht initialisiert */
	eINTERFACESTATUSNOTINITIALIZED = 0,
	/** Fehlgeschlagen (Port in use, IPV6 nicht verfügbar) */
	eINTERFACESTATUSFAILED = 1,
	/** Fehlgeschlagen, Zertifikats Fehler */
	eINTERFACESTATUSCERTERROR = 2,
	/** Initialisiert und offen */
	eINTERFACESTATUSOPEN = 5
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnEConnectedIdDealing {
	/** ConnectedID nach den eingegebenen Regeln formatieren */
	eCONNECTEDIDDEALINGNORMAL = 0,
	/** ConnectedID ignorieren */
	eCONNECTEDIDDEALINGIGNORE = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnAVSTUNANDTURNSERVERTYPE {
	/** Not used */
	eUNDEF = -1,
	/** Stun Server */
	eSTUN = 0,
	/** Turn Server mit Username und Password (momentan unbenutzt) */
	eTURNUSERPASSWD = 1,
	/** Turn Server mit Shared Secret (UCServer Intern) */
	eTURNSHAREDSECRET = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnAVSTUNANDTURNPROVIDERTYPE {
	/** Use own Servers */
	eTURNPROVIDERTYPEOWNSERVERS = 0,
	/** Turn Provider */
	eTURNPROVIDERTYPEEXTERNAL = 1,
	/** UCConnect */
	eTURNPROVIDERTYPEUCCONNECT = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnGatewayModelEnum {
	gwmodelgeneral = 0,
	gwmodelunifyopenscapebusiness = 100,
	gwmodelmitelmivoiceoffice400 = 200,
	gwmodelmitelmivoiceofficemxone = 201,
	gwmodelferrariofficemastergate = 300,
	gwmodelavmfritzbox7490 = 400,
	gwmodelasteriskpbx = 500,
	gwmodelpanasonicns1000 = 600,
	gwmodelpanasonicnsx = 601
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnGatewayTypesEnum {
	/** call to\/from a gateway with using a mediaserver */
	gatewaystdsipwsipmediagw = 0,
	/** call to\/from a gateway without using a mediaserver */
	gatewaystdsipwomediagw = 4,
	/** call to\/from mediagateway callleg that speaks rtp */
	mediagatewayrtp = 1,
	/** call to\/from mediagateway callleg that speaks dtls */
	mediagatewaydtls = 2,
	/** call is a federation call */
	federationstdsip = 3,
	/** call to\/from a gateway with using a kurento mediaserver */
	gatewaystdsipwkurentomediagw = 5
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMediaModesEnum {
	/** \"Legacy\" mode without using encryption */
	mediastdlegacy = 0,
	/** \"Legacy\" mode with encryption (SRTP) */
	mediastdlegacysrtp = 1,
	/** webRTC mode */
	mediastdwebrtc = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnSIPConnectionTypeEnum {
	eSIPUDP = 1,
	eSIPTCP = 2,
	eSIPTLS = 3,
	eSIPMTLS = 6
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnAudioCodesEnum {
	audiocodecg711ulaw = 0,
	audiocodecg711alaw = 1,
	audiocodecg722 = 2,
	audiocodecopus = 3
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtLoginError {
	eNETLOGININTERNALSERVERERROR = 100,
	eNETLOGININVALUSERNAME = 101,
	eNETLOGININVALIDPASS = 102,
	eNETLOGINNOMOREUSERS = 103,
	eNETLOGININVALIDVERSION = 104,
	eNETLOGINNEGOTIATIONREQUIRED = 105,
	eNETLOGININVALIDAUTHENTICATIONMETHOD = 106,
	eNETLOGINUSERNOTENABLED = 107,
	eNETLOGININVALIDCOMPUTERNAME = 108,
	eNETLOGINDOMAINAUTHFAILED = 109,
	eNETLOGINMISSINGRIGHTS = 110,
	eNETLOGINMISSINGRIGHTSTS = 111,
	eNETLOGINSERVERNOTCOMPATIBLE = 112,
	eNETLOGINALREADYAUTHENTICATED = 113,
	eNETLOGINTLSREQUIRED = 114,
	/** eNETLOGINACCOUNTPASSWORDLOCKED(129), */
	eNETLOGINTOKENEXIRED = 130
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtUCServerType {
	enterprise = 0,
	one = 1,
	business = 2,
	datacenter = 3,
	ucaas = 4
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtUCServerFeatures {
	/** no features at all */
	none = 0,
	/** server is built with federation and federation is enabled (no matter if it is properly configured) */
	federation = 1,
	/** server is built with xmpp federation and federation (not necessarily xmpp) is enabled (no matter if it is properly configured) */
	xmpp_federation = 2,
	/** server is built with csta server support and the server is active */
	cstaserver = 4,
	/** there is a EUCWEb.exe next to the ucserver, no matter if the webserver is actually running */
	webserver = 8,
	/** server is build with ucoonnect, no matter if ucconnect is enabled properly configured or connected */
	ucconnect = 16,
	/** the server holds a voice service license (no matter if voiceservices is configured) */
	voiceservices = 32
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtLineForwardModeEnum {
	eLINEFORWARDMODEUNCOND = 1,
	eLINEFORWARDMODEUNCONDINTERNAL = 2,
	eLINEFORWARDMODEUNCONDEXTERNAL = 4,
	eLINEFORWARDMODEUNCONDSPECIFIC = 8,
	eLINEFORWARDMODEBUSY = 16,
	eLINEFORWARDMODEBUSYINTERNAL = 32,
	eLINEFORWARDMODEBUSYEXTERNAL = 64,
	eLINEFORWARDMODEBUSYSPECIFIC = 128,
	eLINEFORWARDMODENOANSW = 256,
	eLINEFORWARDMODENOANSWINTERNAL = 512,
	eLINEFORWARDMODENOANSWEXTERNAL = 1024,
	eLINEFORWARDMODENOANSWSPECIFIC = 2048,
	eLINEFORWARDMODEBUSYNA = 4096,
	eLINEFORWARDMODEBUSYNAINTERNAL = 8192,
	eLINEFORWARDMODEBUSYNAEXTERNAL = 16384,
	eLINEFORWARDMODEBUSYNASPECIFIC = 32768,
	/** TAPI v1.4 */
	eLINEFORWARDMODEUNKNOWN = 65536,
	/** TAPI v1.4 */
	eLINEFORWARDMODEUNAVAIL = 131072
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtForwardControllerEnum {
	/**
	 * ForwardController Konstanten
	 * Die Rufumleitung wird in der PBX gesetzt
	 */
	eCTIFORWARDCONTROLLERPBX = 1,
	/** Die Rufumleitung wird im TapiServer gesetzt (Administrative Umleitung) */
	eCTIFORWARDCONTROLLERTAPISERVERADMIN = 2,
	/** Die Rufumleitung wird im TapiServer gesetzt (User Umleitung) */
	eCTIFORWARDCONTROLLERTAPISERVERUSER = 4
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtForwardMode {
	/** Forward unknown */
	eCTIFORWARDUNKNWON = 0,
	/** Forward Immediate */
	eCTIFORWARDIMMEDIATE = 1,
	/** Forward on Busy */
	eCTIFORWARDBUSY = 2,
	/** Forward on No Answer */
	eCTIFORWARDNOANSW = 4,
	/** Forward on Busy for internal callers */
	eCTIFORWARDBUSYINT = 8,
	/** Forward on Busy for external callers */
	eCTIFORWARDBUSYEXT = 16,
	/** Forward on No answer for internal callers */
	eCTIFORWARDNOANSINT = 32,
	/** Forward on No answer for external callers */
	eCTIFORWARDNOANSEXT = 64,
	/** Forward immediate for internal callers */
	eCTIFORWARDIMMINT = 128,
	/** Forward immediate for external callers */
	eCTIFORWARDIMMEXT = 256,
	/**
	 * Backend specific forwarding entry
	 * Vormals 2147483648 0x80000000
	 */
	eCTIBACKENDSPECIFIC = 32768,
	/**
	 * Alle Weiterleitungsmethoden
	 * Vormals 2147484159 0x800001FF
	 */
	eCTIFORWARDALLMODES = 524799
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtUpgradeStartResultEnum {
	eUPGRADESTARTOK = 0,
	/** Server is not running adminstrative */
	eUPGRADESTARTNOTADMIN = 1,
	/** Database Conversion already done */
	eUPGRADESTARTDBALREADYCONVERTED = 2,
	/** V6 Database is not empty -&gt; Conversion not possible */
	eUPGRADESTARTDBNOTEMPTY = 3
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtPushServiceDevicesChangedArgumentEnum {
	eAdded = 0,
	eChanged = 1,
	eDeleted = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtPhoneJournalUnansweredEnum {
	never = 0,
	all = 1,
	first = 2,
	last = 3
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtPhoneJournalPrivateCallOptionsEnum {
	enPrivateCallsNormal = 0,
	enPrivateCallsShortenNumbers = 1,
	enPrivateCallsNoNumber = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtUnansweredOptionEnum {
	eUnansweredOptionNever = 0,
	eUnansweredOptionAll = 1,
	eUnansweredOptionFirst = 2,
	eUnansweredOptionLast = 3
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtGetPhoneJournalSettingsErrorEnum {
	success = 0,
	accessdenied = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtSetPhoneJournalSettingsErrorEnum {
	success = 0,
	accessdenied = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtSetGroupProfileFilter {
	/** Spezifischer Gruppenname */
	groupName = 0,
	/** Spezifische  ObjectGUID */
	objectGUID = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtSetGroupProfileErrorEnum {
	success = 0,
	accessdenied = 1,
	groupnotfound = 2,
	wrongprofileversion = 3,
	errorsavingprofile = 4,
	nosearchparameter = 5
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtChatSettingsErrorEnum {
	success = 0,
	accessdenied = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtMeshNodeConnectionStatusEnum {
	/** Status unknown */
	unknown = 0,
	/** We are connected */
	connected = 1,
	/** Connection was dropped */
	connectiondropped = 2,
	/** Connect failed, reason unkonwn */
	connectfailedunknown = 3,
	/** Connect failed, unreachable */
	connectfailedunreachable = 4,
	/** Connect failed, differeten mesh id */
	connectfailedinvalidmeshid = 5,
	/** Connect failed, invalid password */
	connectfailedinvalidpassword = 6,
	/** Connect failed, no licenses on the server side */
	connectfailednomorelicensesonserver = 7,
	/** Connect failed, mesh disabled on the server side */
	connectfaileddisabledonserver = 8,
	/** Connect failed, no meshid on the server side */
	connectfailednomeshidonserver = 9,
	/** Connect failed, partner node not known and autoadd is disabled on the server side */
	connectfailednoautoaddonserver = 10,
	/** Connect failed, partner node is known, but disabled */
	connectfailednodedisabledonserver = 11,
	/** Connect failed, partner node is known, but requires TLS */
	connectfailednodetlsforcedonserver = 12,
	/** Connect failed, no licenses on our side */
	connectfailednolicensesonclient = 20,
	/** Connect failed, mesh disabled on our side */
	connectfaileddisabledonclient = 21,
	/** Connect failed, no meshid on our side */
	connectfailednomeshidonclient = 22,
	/** Connect failed, node disabled on our side */
	connectfailednodedisabledonclient = 23,
	/** Connect failed, no TLS on the server side network interface */
	connectfailedtlsforcedonclient = 24,
	/** Connect failed, another node already connected with same remote ip address */
	connectfailedalreadyconnected = 29,
	/** Connect failed, some error in certificate chain */
	connectfailedtlscerterror = 30
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtGDPREraseErrorEnum {
	success = 0,
	accessdenied = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtSetPresenceDomainResultEnum {
	eDone = 0,
	eNotDoneCauseOtherDatacenterServersRunning = 1,
	eNotDoneCauseConfigDBNotConnected = 2
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtAdminUserManagerType {
	eNONE = 0,
	eACTIVEDIRECTORY = 1
}

// [PrintTSTypeDefCode]
// [PrintTSEnumDefCode]
export enum AsnMgmtAdminUserRightEnum {
	/** AsnMgmtAdminUserRightExecute rights: */
	common_DataImport = 1,
	common_DataExport = 2,
	common_RestartServer = 3,
	common_NetworkInterfaces = 4,
	common_CoreServices = 5,
	common_SynchronizeContactData = 6,
	common_ChangePassword = 7,
	/** AsnMgmtAdminUserRightReadWrite rights: */
	general_Licenses = 100,
	general_PresenceDomain = 101,
	general_UserDatabase = 102,
	general_UserAuthentication = 103,
	general_UserAdminAccess = 104,
	general_Database = 105,
	general_MultiServerDatabase = 106,
	general_Events = 107,
	general_Redis = 108,
	telephony_Lines = 200,
	telephony_LinesDetails_LineGroups = 201,
	telephony_Location = 210,
	telephony_Journal = 211,
	telephony_UnansweredCalls = 212,
	telephony_Problems = 213,
	usermgmt_User = 300,
	usermgmt_Groups = 301,
	usermgmt_Computer = 302,
	usermgmt_Profiles = 303,
	usermgmt_GlobalSettings = 304,
	services_UpdateServer = 400,
	services_ExternalServer = 401,
	services_EmailDelivery = 402,
	services_Notifications = 403,
	services_SMSDispatch = 404,
	services_CallRecording = 405,
	services_ShareContents = 406,
	services_OnlineServices = 407,
	services_StunTurn = 408,
	services_PushNotifications = 409,
	services_TeamsIntegration = 410,
	federation_SIPFederation = 500,
	federation_SIPServer = 501,
	federation_SIPStaticRouting = 502,
	federation_XMPPFederation = 503,
	federation_DomainsAuthorization = 504,
	federation_BlockDomain = 505,
	federation_Diagnostics = 506,
	database_MetaDirectory = 600,
	database_Google = 601,
	allsettings_ServerSettings = 700,
	status_StatusMonitor = 800,
	status_ServerEvents = 801
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Empty argument\/result
 * this type is used as argument or result type when we have no members inside
 */
export class AsnMgmtEmpty {
	public constructor(that?: AsnMgmtEmpty) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEmpty {
		return new AsnMgmtEmpty();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtEmpty";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEmpty",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * get all user profiles
 * Create a new GUID and send it as parameter u8sCrossRefId
 * UCServer will then send Events asnMgmtGetUserProfilesResult with this GUID
 */
export class AsnMgmtGetUserProfilesArgument {
	public constructor(that: AsnMgmtGetUserProfilesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserProfilesArgument {
		return new AsnMgmtGetUserProfilesArgument({
			iActiveUsersOnly: 0,
			iFilterOnlineState: 0,
			u8sCrossRefId: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iActiveUsersOnly",
			"iFilterOnlineState",
			"u8sCrossRefId"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserProfilesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserProfilesArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iActiveUsersOnly" }),
				new asn1ts.Integer({ name: "iFilterOnlineState" }),
				new asn1ts.Utf8String({ name: "u8sCrossRefId" }),
				new asn1ts.Extension()
			]
		});
	}

	/** CTI-Enabled users only */
	public iActiveUsersOnly!: number;
	/** Filter with actual onlinestate -&gt; AsnAdminUserOnlineStateFilter */
	public iFilterOnlineState!: number;
	public u8sCrossRefId!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUserProfilesResult {
	public constructor(that: AsnMgmtGetUserProfilesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserProfilesResult {
		return new AsnMgmtGetUserProfilesResult({
			userProfiles: new ENetUC_Admin.AsnUserProfileList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"userProfiles"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserProfilesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserProfilesResult",
			...params,
			value: [
				ENetUC_Admin.AsnUserProfileList.getASN1Schema({ name: "userProfiles" }),
				new asn1ts.Extension()
			]
		});
	}

	public userProfiles!: ENetUC_Admin.AsnUserProfileList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * bLastSegment is true if this is the last deliver of user profiles
 */
export class AsnMgmtGetUserProfilesResultArgument {
	public constructor(that: AsnMgmtGetUserProfilesResultArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserProfilesResultArgument {
		return new AsnMgmtGetUserProfilesResultArgument({
			listUserProfiles: new ENetUC_Admin.AsnUserProfileList(),
			u8sCrossRefID: "",
			bLastSegment: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"listUserProfiles",
			"u8sCrossRefID",
			"bLastSegment"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserProfilesResultArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserProfilesResultArgument",
			...params,
			value: [
				ENetUC_Admin.AsnUserProfileList.getASN1Schema({ name: "listUserProfiles" }),
				new asn1ts.Utf8String({ name: "u8sCrossRefID" }),
				new asn1ts.Boolean({ name: "bLastSegment" }),
				new asn1ts.Extension()
			]
		});
	}

	/** List of user profiles (max 50 in one segment) */
	public listUserProfiles!: ENetUC_Admin.AsnUserProfileList;
	/** CrossrefID from AsnMgmtGetPushServiceDevicesResult. */
	public u8sCrossRefID!: string;
	/** last Segment for this u8sCrossRefID, TRUE, wenn dieses Segment das Ende der Liste ist. */
	public bLastSegment!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUsersArgument {
	public constructor(that?: AsnMgmtGetUsersArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUsersArgument {
		return new AsnMgmtGetUsersArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		if (bIncludeOptionals)
			p.push("bResultAsList");
		return p;
	}

	public static type = "AsnMgmtGetUsersArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUsersArgument",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bResultAsList", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/**
	 * if true the users will be sent bundled with asnMgmtGetUserListEvent
	 * (if false or omitted the users will be sent individually with asnMgmtGetUsersEvent)
	 */
	public bResultAsList?: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUsersResult {
	public constructor(that: AsnMgmtGetUsersResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUsersResult {
		return new AsnMgmtGetUsersResult({
			iNumberOfUsers: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iNumberOfUsers"
		];
		return p;
	}

	public static type = "AsnMgmtGetUsersResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUsersResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iNumberOfUsers" }),
				new asn1ts.Extension()
			]
		});
	}

	public iNumberOfUsers!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnClientConnectionDescription {
	public constructor(that: AsnClientConnectionDescription) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnClientConnectionDescription {
		return new AsnClientConnectionDescription({
			u8sContactID: "",
			u8sAnonymousUserName: "",
			u8sHintData: "",
			u8sConnectionGUID: "",
			u8sDeviceName: "",
			u8sDeviceID: "",
			iClientAppID: 0,
			bIsIdle: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sContactID",
			"u8sAnonymousUserName",
			"u8sHintData",
			"u8sConnectionGUID",
			"u8sDeviceName",
			"u8sDeviceID",
			"iClientAppID",
			"bIsIdle"
		];
		return p;
	}

	public static type = "AsnClientConnectionDescription";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnClientConnectionDescription",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sContactID" }),
				new asn1ts.Utf8String({ name: "u8sAnonymousUserName" }),
				new asn1ts.Utf8String({ name: "u8sHintData" }),
				new asn1ts.Utf8String({ name: "u8sConnectionGUID" }),
				new asn1ts.Utf8String({ name: "u8sDeviceName" }),
				new asn1ts.Utf8String({ name: "u8sDeviceID" }),
				new asn1ts.Integer({ name: "iClientAppID" }),
				new asn1ts.Boolean({ name: "bIsIdle" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sContactID!: string;
	public u8sAnonymousUserName!: string;
	public u8sHintData!: string;
	public u8sConnectionGUID!: string;
	public u8sDeviceName!: string;
	public u8sDeviceID!: string;
	/** (see AsnClientAppID) */
	public iClientAppID!: number;
	public bIsIdle!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUMModeResult {
	public constructor(that: AsnMgmtGetUMModeResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUMModeResult {
		return new AsnMgmtGetUMModeResult({
			iType: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iType"
		];
		return p;
	}

	public static type = "AsnMgmtGetUMModeResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUMModeResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iType" }),
				new asn1ts.Extension()
			]
		});
	}

	public iType!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetUMModeArgument {
	public constructor(that: AsnMgmtSetUMModeArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetUMModeArgument {
		return new AsnMgmtSetUMModeArgument({
			iType: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iType"
		];
		return p;
	}

	public static type = "AsnMgmtSetUMModeArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetUMModeArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iType" }),
				new asn1ts.Extension()
			]
		});
	}

	public iType!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtTestUMInterfaceArgument {
	public constructor(that: AsnMgmtTestUMInterfaceArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtTestUMInterfaceArgument {
		return new AsnMgmtTestUMInterfaceArgument({
			iType: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iType"
		];
		return p;
	}

	public static type = "AsnMgmtTestUMInterfaceArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtTestUMInterfaceArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iType" }),
				new asn1ts.Extension()
			]
		});
	}

	public iType!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUserProfileGetLargeImageArgument {
	public constructor(that: AsnMgmtUserProfileGetLargeImageArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUserProfileGetLargeImageArgument {
		return new AsnMgmtUserProfileGetLargeImageArgument({
			u8sUsername: "",
			u8sImgHash: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sUsername",
			"u8sImgHash"
		];
		return p;
	}

	public static type = "AsnMgmtUserProfileGetLargeImageArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUserProfileGetLargeImageArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sUsername" }),
				new asn1ts.Utf8String({ name: "u8sImgHash" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sUsername!: string;
	public u8sImgHash!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUserProfileGetLargeImageResult {
	public constructor(that: AsnMgmtUserProfileGetLargeImageResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUserProfileGetLargeImageResult {
		return new AsnMgmtUserProfileGetLargeImageResult({
			binImageData: new Uint8Array(0),
			u8sImgHash: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"binImageData",
			"u8sImgHash"
		];
		return p;
	}

	public static type = "AsnMgmtUserProfileGetLargeImageResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUserProfileGetLargeImageResult",
			...params,
			value: [
				new asn1ts.OctetString({ name: "binImageData" }),
				new asn1ts.Utf8String({ name: "u8sImgHash" }),
				new asn1ts.Extension()
			]
		});
	}

	public binImageData!: Uint8Array;
	public u8sImgHash!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetGroupsResult {
	public constructor(that: AsnMgmtGetGroupsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetGroupsResult {
		return new AsnMgmtGetGroupsResult({
			iNumberOfGroups: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iNumberOfGroups"
		];
		return p;
	}

	public static type = "AsnMgmtGetGroupsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetGroupsResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iNumberOfGroups" }),
				new asn1ts.Extension()
			]
		});
	}

	public iNumberOfGroups!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRemoveGroupArgument {
	public constructor(that: AsnMgmtRemoveGroupArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRemoveGroupArgument {
		return new AsnMgmtRemoveGroupArgument({
			u8sGroupName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sGroupName"
		];
		return p;
	}

	public static type = "AsnMgmtRemoveGroupArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRemoveGroupArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sGroupName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sGroupName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetGroupsEventArgument {
	public constructor(that: AsnMgmtGetGroupsEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetGroupsEventArgument {
		return new AsnMgmtGetGroupsEventArgument({
			groupProfile: ENetUC_Admin.AsnGroupProfile["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"groupProfile"
		];
		return p;
	}

	public static type = "AsnMgmtGetGroupsEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetGroupsEventArgument",
			...params,
			value: [
				ENetUC_Admin.AsnGroupProfile.getASN1Schema({ name: "groupProfile" }),
				new asn1ts.Extension()
			]
		});
	}

	public groupProfile!: ENetUC_Admin.AsnGroupProfile;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtAgentPublicPresenceItem {
	public constructor(that: AsnMgmtAgentPublicPresenceItem) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAgentPublicPresenceItem {
		return new AsnMgmtAgentPublicPresenceItem({
			u8sAgentURI: "",
			iPublicAgentPresence: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sAgentURI",
			"iPublicAgentPresence"
		];
		return p;
	}

	public static type = "AsnMgmtAgentPublicPresenceItem";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtAgentPublicPresenceItem",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sAgentURI" }),
				new asn1ts.Integer({ name: "iPublicAgentPresence" }),
				new asn1ts.Extension()
			]
		});
	}

	/** URI des Agenten */
	public u8sAgentURI!: string;
	/** aktuelle öffentliche Präsenz des Agenten */
	/** (see AsnRankingAgentPublicPresenceEnum) */
	public iPublicAgentPresence!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetGroupAgentPublicPresenceArgument {
	public constructor(that: AsnMgmtGetGroupAgentPublicPresenceArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetGroupAgentPublicPresenceArgument {
		return new AsnMgmtGetGroupAgentPublicPresenceArgument({
			u8sGroupName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sGroupName"
		];
		return p;
	}

	public static type = "AsnMgmtGetGroupAgentPublicPresenceArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetGroupAgentPublicPresenceArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sGroupName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sGroupName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetComputersResult {
	public constructor(that: AsnMgmtGetComputersResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetComputersResult {
		return new AsnMgmtGetComputersResult({
			iNumberOfComputers: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iNumberOfComputers"
		];
		return p;
	}

	public static type = "AsnMgmtGetComputersResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetComputersResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iNumberOfComputers" }),
				new asn1ts.Extension()
			]
		});
	}

	public iNumberOfComputers!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRefreshComputerStatusArgument {
	public constructor(that: AsnMgmtRefreshComputerStatusArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRefreshComputerStatusArgument {
		return new AsnMgmtRefreshComputerStatusArgument({
			u8slistComputers: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistComputers"
		];
		return p;
	}

	public static type = "AsnMgmtRefreshComputerStatusArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRefreshComputerStatusArgument",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistComputers" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistComputers!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClearComputerStatusArgument {
	public constructor(that: AsnMgmtClearComputerStatusArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClearComputerStatusArgument {
		return new AsnMgmtClearComputerStatusArgument({
			u8slistComputers: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistComputers"
		];
		return p;
	}

	public static type = "AsnMgmtClearComputerStatusArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClearComputerStatusArgument",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistComputers" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistComputers!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRemoveComputerArgument {
	public constructor(that: AsnMgmtRemoveComputerArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRemoveComputerArgument {
		return new AsnMgmtRemoveComputerArgument({
			u8sComputerName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sComputerName"
		];
		return p;
	}

	public static type = "AsnMgmtRemoveComputerArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRemoveComputerArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sComputerName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sComputerName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSMSManagerSettings {
	public constructor(that: AsnMgmtSMSManagerSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSMSManagerSettings {
		return new AsnMgmtSMSManagerSettings({
			bIsActivated: false,
			u8sConfiguredProvider: "",
			u8sLoginName: "",
			u8sLoginPassword: "",
			u8sServerSenderAddress: "",
			iSenderAddressType: 0,
			u8sConfiguredService: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bIsActivated",
			"u8sConfiguredProvider",
			"u8sLoginName",
			"u8sLoginPassword",
			"u8sServerSenderAddress",
			"iSenderAddressType",
			"u8sConfiguredService"
		];
		return p;
	}

	public static type = "AsnMgmtSMSManagerSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSMSManagerSettings",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bIsActivated" }),
				new asn1ts.Utf8String({ name: "u8sConfiguredProvider" }),
				new asn1ts.Utf8String({ name: "u8sLoginName" }),
				new asn1ts.Utf8String({ name: "u8sLoginPassword" }),
				new asn1ts.Utf8String({ name: "u8sServerSenderAddress" }),
				new asn1ts.Integer({ name: "iSenderAddressType" }),
				new asn1ts.Utf8String({ name: "u8sConfiguredService" }),
				new asn1ts.Extension()
			]
		});
	}

	public bIsActivated!: boolean;
	public u8sConfiguredProvider!: string;
	public u8sLoginName!: string;
	public u8sLoginPassword!: string;
	public u8sServerSenderAddress!: string;
	/** (see AsnMgmtSMSSenderAddressType) */
	public iSenderAddressType!: number;
	public u8sConfiguredService!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtWebSMSProviderList {
	public constructor(that: AsnMgmtWebSMSProviderList) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtWebSMSProviderList {
		return new AsnMgmtWebSMSProviderList({
			u8sProviderListAsXML: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sProviderListAsXML"
		];
		return p;
	}

	public static type = "AsnMgmtWebSMSProviderList";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtWebSMSProviderList",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sProviderListAsXML" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sProviderListAsXML!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSendSMSArgument {
	public constructor(that: AsnMgmtSendSMSArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSendSMSArgument {
		return new AsnMgmtSendSMSArgument({
			u8sFrom: "",
			u8sTo: "",
			u8sBody: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sFrom",
			"u8sTo",
			"u8sBody"
		];
		return p;
	}

	public static type = "AsnMgmtSendSMSArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSendSMSArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sFrom" }),
				new asn1ts.Utf8String({ name: "u8sTo" }),
				new asn1ts.Utf8String({ name: "u8sBody" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sFrom!: string;
	public u8sTo!: string;
	public u8sBody!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSendSMSResult {
	public constructor(that: AsnMgmtSendSMSResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSendSMSResult {
		return new AsnMgmtSendSMSResult({
			u8sResultInfo: "",
			bResultWasError: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sResultInfo",
			"bResultWasError"
		];
		return p;
	}

	public static type = "AsnMgmtSendSMSResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSendSMSResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sResultInfo" }),
				new asn1ts.Boolean({ name: "bResultWasError" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sResultInfo!: string;
	public bResultWasError!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGoogleClientID {
	public constructor(that: AsnMgmtGoogleClientID) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGoogleClientID {
		return new AsnMgmtGoogleClientID({
			bEnabled: false,
			u8sClientID: "",
			u8sClientSecret: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bEnabled",
			"u8sClientID",
			"u8sClientSecret"
		];
		return p;
	}

	public static type = "AsnMgmtGoogleClientID";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGoogleClientID",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bEnabled" }),
				new asn1ts.Utf8String({ name: "u8sClientID" }),
				new asn1ts.Utf8String({ name: "u8sClientSecret" }),
				new asn1ts.Extension()
			]
		});
	}

	public bEnabled!: boolean;
	public u8sClientID!: string;
	public u8sClientSecret!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetClientInstallProfileComputerNamesResult {
	public constructor(that: AsnMgmtGetClientInstallProfileComputerNamesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetClientInstallProfileComputerNamesResult {
		return new AsnMgmtGetClientInstallProfileComputerNamesResult({
			u8slistComputers: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistComputers"
		];
		return p;
	}

	public static type = "AsnMgmtGetClientInstallProfileComputerNamesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetClientInstallProfileComputerNamesResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistComputers" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistComputers!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSendBroadcastArgument {
	public constructor(that: AsnMgmtSendBroadcastArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSendBroadcastArgument {
		return new AsnMgmtSendBroadcastArgument({
			iType: 0,
			u8slistComputers: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iType",
			"u8slistComputers"
		];
		return p;
	}

	public static type = "AsnMgmtSendBroadcastArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSendBroadcastArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iType" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistComputers" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnMgmtACUBROADCASTSENUM) */
	public iType!: number;
	public u8slistComputers!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientInstallProfileAction {
	public constructor(that: AsnMgmtClientInstallProfileAction) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientInstallProfileAction {
		return new AsnMgmtClientInstallProfileAction({
			u8sPacketIdentifier: "",
			iAction: 0,
			iClientTspInstallOption: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sPacketIdentifier",
			"iAction",
			"iClientTspInstallOption"
		];
		return p;
	}

	public static type = "AsnMgmtClientInstallProfileAction";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientInstallProfileAction",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sPacketIdentifier" }),
				new asn1ts.Integer({ name: "iAction" }),
				new asn1ts.Integer({ name: "iClientTspInstallOption" }),
				new asn1ts.Extension()
			]
		});
	}

	/**
	 * Identifier des Installationspaketes.
	 * Immer verfuegbares vordefiniertes Paket ist: \"EACUSRV\" - der update service
	 * (ACUFileForUpdate::strIdentifier **\/
	 */
	public u8sPacketIdentifier!: string;
	/**
	 * Auszufuehrende Aktion.
	 * einer der ACI_ACTION_NONE konstanten **\/
	 */
	public iAction!: number;
	/**
	 * MSI Optionen fuer die Installation
	 * ProCall Spezifisch
	 * Installationsoption fuer den Client TSP
	 * Konstanten aus ACI_CLIENTTSPINSTALLOPTION_NONE**\/
	 */
	public iClientTspInstallOption!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtACUFileForUpdateDescription {
	public constructor(that: AsnMgmtACUFileForUpdateDescription) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtACUFileForUpdateDescription {
		return new AsnMgmtACUFileForUpdateDescription({
			iFileID: 0,
			u8sIdentifier: "",
			u8sDescription: "",
			u8sProduct: "",
			u8sFileName: "",
			iExecuteType: 0,
			u8sExecuteCommand: "",
			u8sVersion: "",
			u8sMSIUpgradeCode: "",
			u8sValidationCode: "",
			iFileLanguage: 0,
			iLCIDsEmbedded: new ENetUC_Common.SEQInteger(),
			u8sPlatform: "",
			u8sKeyInstalled: "",
			u8sKeyVersion: "",
			u8sRegPathLanguage: "",
			iAllowUpdate: 0,
			iAllowInstall: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iFileID",
			"u8sIdentifier",
			"u8sDescription",
			"u8sProduct",
			"u8sFileName",
			"iExecuteType",
			"u8sExecuteCommand",
			"u8sVersion",
			"u8sMSIUpgradeCode",
			"u8sValidationCode",
			"iFileLanguage",
			"iLCIDsEmbedded",
			"u8sPlatform",
			"u8sKeyInstalled",
			"u8sKeyVersion",
			"u8sRegPathLanguage",
			"iAllowUpdate",
			"iAllowInstall"
		];
		if (bIncludeOptionals)
			p.push("u8sFilePath");
		return p;
	}

	public static type = "AsnMgmtACUFileForUpdateDescription";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtACUFileForUpdateDescription",
			...params,
			value: [
				new asn1ts.Integer({ name: "iFileID" }),
				new asn1ts.Utf8String({ name: "u8sIdentifier" }),
				new asn1ts.Utf8String({ name: "u8sDescription" }),
				new asn1ts.Utf8String({ name: "u8sProduct" }),
				new asn1ts.Utf8String({ name: "u8sFileName" }),
				new asn1ts.Integer({ name: "iExecuteType" }),
				new asn1ts.Utf8String({ name: "u8sExecuteCommand" }),
				new asn1ts.Utf8String({ name: "u8sVersion" }),
				new asn1ts.Utf8String({ name: "u8sMSIUpgradeCode" }),
				new asn1ts.Utf8String({ name: "u8sValidationCode" }),
				new asn1ts.Integer({ name: "iFileLanguage" }),
				ENetUC_Common.SEQInteger.getASN1Schema({ name: "iLCIDsEmbedded" }),
				new asn1ts.Utf8String({ name: "u8sPlatform" }),
				new asn1ts.Utf8String({ name: "u8sKeyInstalled" }),
				new asn1ts.Utf8String({ name: "u8sKeyVersion" }),
				new asn1ts.Utf8String({ name: "u8sRegPathLanguage" }),
				new asn1ts.Integer({ name: "iAllowUpdate" }),
				new asn1ts.Integer({ name: "iAllowInstall" }),
				new asn1ts.Utf8String({ name: "u8sFilePath", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Eindeutige Nummer welche die entsprechende Datei referenziert */
	public iFileID!: number;
	/**
	 * Identifier fuer die zum Update vorgesehene Datei
	 * Der Identifier entspricht dem im XML.
	 * Wenn das Paket ueber den MSI UpgradeCode gesucht wurde wird mit :
	 * die Sprache als Zahl angehaengt 1033 fuer English (United States)
	 */
	public u8sIdentifier!: string;
	/** Beschreibung der Datei */
	public u8sDescription!: string;
	/** Produkt zu dem das File gehoert */
	public u8sProduct!: string;
	/** Dateiname wie er auf der Platte vorliegt (Alternativ ist der MSIUpgradeCode befuellt) */
	public u8sFileName!: string;
	/**
	 * Typ wie die Datei auf dem Client ausgefuehrt wird
	 * Eine der ACU_EXECUTETYPE_PROCALLMSI Optionen
	 */
	public iExecuteType!: number;
	/**
	 * Kommando fuer execute.
	 * Das hat verschiedene Bedeutungen je nach iExecuteType
	 */
	public u8sExecuteCommand!: string;
	/**
	 * Versionsnummer der Datei auf Platte.
	 * Diese wird beim einlesen des Files in den Server bestimmt.
	 * exe: Datei version aus resourcen
	 * msi: productversion Property
	 * andere: MD5
	 */
	public u8sVersion!: string;
	/**
	 * MSI UpgradeCode des MSI auf Platte.
	 * Dieser wird beim einlesen des Files in den Server bestimmt.
	 * Dieser wird zum uninstall eines msi produktes auf dem client verwendet
	 */
	public u8sMSIUpgradeCode!: string;
	/**
	 * MD5 der Datei.
	 * Dieses wird beim einlesen der Dateio in den Server berechnet.
	 * Der MD56 dient zum validieren des Files nach dem download durch den
	 * ACI Service
	 */
	public u8sValidationCode!: string;
	/**
	 * Language des Files oder 0 fuer alle Sprachen (Neutral)
	 * Muss im xml konfiguriert sein
	 */
	public iFileLanguage!: number;
	public iLCIDsEmbedded!: ENetUC_Common.SEQInteger;
	/**
	 * Zielplatform fuer dieses File.
	 * Das ist entweder leer (alle) oder
	 * x64 fuer Windows AMD 64 Platformen oder
	 * x86 fuer Windows x86 Platformen.
	 */
	public u8sPlatform!: string;
	/**
	 * reg key oder file key ob das file installiert ist (int)
	 * reg:HKEY_LOCAL_MACHINE\\Software\\ESTOS\\UCServer4\\Client\\InstallCtiClient
	 * file:%CTICLIENTDIR%\\config\\oeminfo.bmp
	 */
	public u8sKeyInstalled!: string;
	/**
	 * reg key oder file key fuer die version.(u8sing)
	 * reg:HKEY_LOCAL_MACHINE\\Software\\ESTOS\\UCServer4\\Client\\InstallVersion
	 * file:%CTICLIENTDIR%\\config\\oeminfo.bmp
	 */
	public u8sKeyVersion!: string;
	/**
	 * HREGKEY unter dem nach der Sprache zu suchen ist (int)
	 * HKEY_LOCAL_MACHINE\\Software\\ESTOS\\UCServer4\\Client\\Language
	 */
	public u8sRegPathLanguage!: string;
	/** Dieses File darf fuer Updates verwendet werden */
	public iAllowUpdate!: number;
	/** Dieses File darf fuer Remote Installationen verwendet werden */
	public iAllowInstall!: number;
	public u8sFilePath?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetClientInstallProfileArgument {
	public constructor(that: AsnMgmtGetClientInstallProfileArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetClientInstallProfileArgument {
		return new AsnMgmtGetClientInstallProfileArgument({
			u8sComputer: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sComputer"
		];
		return p;
	}

	public static type = "AsnMgmtGetClientInstallProfileArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetClientInstallProfileArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sComputer" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sComputer!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUpdateServiceSettings {
	public constructor(that: AsnMgmtUpdateServiceSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUpdateServiceSettings {
		return new AsnMgmtUpdateServiceSettings({
			iStatusUpdateService: 0,
			iEACUServiceActive: 0,
			iEACUServiceTimeLimited: 0,
			iAllowVersionDowngrade: 0,
			iAVBehaviour: 0,
			iMaxWaitTimeForIdleMinutes: 0,
			dtTimeFrom: new Date(),
			dtTimeTo: new Date()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iStatusUpdateService",
			"iEACUServiceActive",
			"iEACUServiceTimeLimited",
			"iAllowVersionDowngrade",
			"iAVBehaviour",
			"iMaxWaitTimeForIdleMinutes",
			"dtTimeFrom",
			"dtTimeTo"
		];
		if (bIncludeOptionals)
			p.push("u8sRemoteLocation");
		return p;
	}

	public static type = "AsnMgmtUpdateServiceSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUpdateServiceSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iStatusUpdateService" }),
				new asn1ts.Integer({ name: "iEACUServiceActive" }),
				new asn1ts.Integer({ name: "iEACUServiceTimeLimited" }),
				new asn1ts.Integer({ name: "iAllowVersionDowngrade" }),
				new asn1ts.Integer({ name: "iAVBehaviour" }),
				new asn1ts.Integer({ name: "iMaxWaitTimeForIdleMinutes" }),
				new asn1ts.Real({ name: "dtTimeFrom" }),
				new asn1ts.Real({ name: "dtTimeTo" }),
				new asn1ts.Utf8String({ name: "u8sRemoteLocation", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Status des Update Service. Verfuegbar oder nicht verfuegbar. 0 oder 1 */
	public iStatusUpdateService!: number;
	/** Aktiv Status des Update Service.	Fuer Updates eingeschaltet oder nicht. 0 oder 1 */
	public iEACUServiceActive!: number;
	/** Zeit Limitierung fuer Updates eingeschaltet. 0 oder 1. */
	public iEACUServiceTimeLimited!: number;
	/** Version downgrade erlaubt 0 oder 1. */
	public iAllowVersionDowngrade!: number;
	/** Verhalten bei auf dem Client aktiver Medien Verbindungen */
	/** (see AsnUpdateAVBehaviour) */
	public iAVBehaviour!: number;
	/** Maximale Wartezeit bis der Client Idle ist */
	public iMaxWaitTimeForIdleMinutes!: number;
	/** Zeitliche Einschraenkung von bis */
	public dtTimeFrom!: Date;
	public dtTimeTo!: Date;
	public u8sRemoteLocation?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientInstallProfilePacket {
	public constructor(that: AsnMgmtClientInstallProfilePacket) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientInstallProfilePacket {
		return new AsnMgmtClientInstallProfilePacket({
			u8sPacketIdentifier: "",
			u8sVersion: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sPacketIdentifier",
			"u8sVersion"
		];
		return p;
	}

	public static type = "AsnMgmtClientInstallProfilePacket";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientInstallProfilePacket",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sPacketIdentifier" }),
				new asn1ts.Utf8String({ name: "u8sVersion" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sPacketIdentifier!: string;
	public u8sVersion!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtConResetLineArgument {
	public constructor(that: AsnMgmtConResetLineArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConResetLineArgument {
		return new AsnMgmtConResetLineArgument({
			u8sLineID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineID"
		];
		return p;
	}

	public static type = "AsnMgmtConResetLineArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConResetLineArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineSourcesResult {
	public constructor(that: AsnMgmtGetLineSourcesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineSourcesResult {
		return new AsnMgmtGetLineSourcesResult({
			u8slistSources: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistSources"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineSourcesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineSourcesResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistSources" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistSources!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * ProCall DataCenter only - The line status of one line at a specific server
 *
 * @added 15.07.2024
 */
export class AsnMgmtLineStatus {
	public constructor(that: AsnMgmtLineStatus) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLineStatus {
		return new AsnMgmtLineStatus({
			u8sLineID: "",
			eOpenState: ENetUC_CTI.AsnCtiLineOpenStatus.lineStatusDisconnected,
			iNumCalls: 0,
			iSipResponseCode: 0,
			u8sReasonPhrase: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineID",
			"eOpenState",
			"iNumCalls",
			"iSipResponseCode",
			"u8sReasonPhrase"
		];
		if (bIncludeOptionals)
			p.push("u8sAffectedServer");
		return p;
	}

	public static type = "AsnMgmtLineStatus";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLineStatus",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Enumerated({ name: "eOpenState" }),
				new asn1ts.Integer({ name: "iNumCalls" }),
				new asn1ts.Integer({ name: "iSipResponseCode" }),
				new asn1ts.Utf8String({ name: "u8sReasonPhrase" }),
				new asn1ts.Utf8String({ name: "u8sAffectedServer", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineID!: string;
	public eOpenState!: ENetUC_CTI.AsnCtiLineOpenStatus;
	public iNumCalls!: number;
	public iSipResponseCode!: number;
	public u8sReasonPhrase!: string;
	/** The server identification for the UCServer that reported this line status */
	public u8sAffectedServer?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineSourceDeviceIDsArgument {
	public constructor(that: AsnMgmtGetLineSourceDeviceIDsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineSourceDeviceIDsArgument {
		return new AsnMgmtGetLineSourceDeviceIDsArgument({
			u8sLineSource: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSource"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineSourceDeviceIDsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineSourceDeviceIDsArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSource" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSource!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineSourceDeviceIDsResult {
	public constructor(that: AsnMgmtGetLineSourceDeviceIDsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineSourceDeviceIDsResult {
		return new AsnMgmtGetLineSourceDeviceIDsResult({
			iListDeviceIDs: new ENetUC_Common.SEQInteger()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iListDeviceIDs"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineSourceDeviceIDsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineSourceDeviceIDsResult",
			...params,
			value: [
				ENetUC_Common.SEQInteger.getASN1Schema({ name: "iListDeviceIDs" }),
				new asn1ts.Extension()
			]
		});
	}

	public iListDeviceIDs!: ENetUC_Common.SEQInteger;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLinesForSourceArgument {
	public constructor(that: AsnMgmtGetLinesForSourceArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLinesForSourceArgument {
		return new AsnMgmtGetLinesForSourceArgument({
			u8sLineSource: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSource"
		];
		return p;
	}

	public static type = "AsnMgmtGetLinesForSourceArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLinesForSourceArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSource" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSource!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineStatesArgument {
	public constructor(that: AsnMgmtGetLineStatesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineStatesArgument {
		return new AsnMgmtGetLineStatesArgument({
			iType: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iType"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineStatesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineStatesArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iType" }),
				new asn1ts.Extension()
			]
		});
	}

	public iType!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtTapiLineConfiguration {
	public constructor(that: AsnMgmtTapiLineConfiguration) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtTapiLineConfiguration {
		return new AsnMgmtTapiLineConfiguration({
			iEnabled: 0,
			iJournal: 0,
			iDummyWirelessPhone: 0,
			iUseAutomaticPhoneNumber: 0,
			u8sManualPhoneNumber: "",
			iUseTapiLineName: 0,
			u8sLocationID: "",
			iPrivatePhone: 0,
			iTrunk: 0,
			customProps: new ENetUC_Common.AsnStringPairList(),
			iSignalCallsOnAddress: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iEnabled",
			"iJournal",
			"iDummyWirelessPhone",
			"iUseAutomaticPhoneNumber",
			"u8sManualPhoneNumber",
			"iUseTapiLineName",
			"u8sLocationID",
			"iPrivatePhone",
			"iTrunk",
			"customProps",
			"iSignalCallsOnAddress"
		];
		if (bIncludeOptionals)
			p.push("u8sHomeServer");
		return p;
	}

	public static type = "AsnMgmtTapiLineConfiguration";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtTapiLineConfiguration",
			...params,
			value: [
				new asn1ts.Integer({ name: "iEnabled" }),
				new asn1ts.Integer({ name: "iJournal" }),
				new asn1ts.Integer({ name: "iDummyWirelessPhone" }),
				new asn1ts.Integer({ name: "iUseAutomaticPhoneNumber" }),
				new asn1ts.Utf8String({ name: "u8sManualPhoneNumber" }),
				new asn1ts.Integer({ name: "iUseTapiLineName" }),
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Integer({ name: "iPrivatePhone" }),
				new asn1ts.Integer({ name: "iTrunk" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "customProps" }),
				new asn1ts.Integer({ name: "iSignalCallsOnAddress" }),
				new asn1ts.Utf8String({ name: "u8sHomeServer", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Enabled to be used by the Server **\/ */
	public iEnabled!: number;
	/** Journal für die Leitung wird geschrieben **\/ */
	public iJournal!: number;
	/** nicht verwendet */
	public iDummyWirelessPhone!: number;
	/**
	 * Rufnummer automatisch bestimmen - aus Address bzw. linename
	 * Dies ist keine gespeicherte Einstellung. Dies wird immer nur aus der Gruppe bestimmt. **\/
	 */
	public iUseAutomaticPhoneNumber!: number;
	/** Phone Number Manuell */
	public u8sManualPhoneNumber!: string;
	/** Leitungsname aus Tapi verwenden **\/ */
	public iUseTapiLineName!: number;
	/** LocationID **\/ */
	public u8sLocationID!: string;
	/** Privates Telefon */
	public iPrivatePhone!: number;
	/** Dies ist eine Amtsleitung **\/ */
	public iTrunk!: number;
	/**
	 * Custom Properties for individual Line Sources
	 * Property strings are defined as ELINEPROP_XXX ies **\/
	 */
	public customProps!: ENetUC_Common.AsnStringPairList;
	/** Call auf den folgenden Adressen signalisieren */
	/** (see AsnMgmtTapiLineSINGALCALLSONADDRESSEnum) */
	public iSignalCallsOnAddress!: number;
	/** Für DataCenter: Konfigurierter HomeServer, der für diese Leitung zuständig ist */
	public u8sHomeServer?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtTapiLineConfig4Admin {
	public constructor(that: AsnMgmtTapiLineConfig4Admin) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtTapiLineConfig4Admin {
		return new AsnMgmtTapiLineConfig4Admin({
			iEnabled: 0,
			iJournal: 0,
			iDummyWirelessPhone: 0,
			iUseAutomaticPhoneNumber: 0,
			u8sManualPhoneNumber: "",
			iUseTapiLineName: 0,
			u8sLocationID: "",
			iTapiDeviceID: 0,
			u8sLineID: "",
			u8sAutomaticPhoneNumber: "",
			u8sTapiLineName: "",
			u8sPBXGroupName: "",
			iAdminForwardingEnabled: 0,
			adminForwarding: new ENetUC_Common_SIPCTI.AsnLineForwards(),
			iUserForwardingEnabled: 0,
			userForwarding: new ENetUC_Common_SIPCTI.AsnLineForwards(),
			iPrivatePhone: 0,
			u8sLineSourceName: "",
			customProps: new ENetUC_Common.AsnStringPairList(),
			iAutoActivate: 0,
			u8sPhysicalDeviceID: "",
			u8sLineURI: "",
			iTrunk: 0,
			iSignalCallsOnAddress: 0,
			u8slistAddressNames: new ENetUC_Common.UTF8StringList(),
			u8sLineConfigIdentifier: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iEnabled",
			"iJournal",
			"iDummyWirelessPhone",
			"iUseAutomaticPhoneNumber",
			"u8sManualPhoneNumber",
			"iUseTapiLineName",
			"u8sLocationID",
			"iTapiDeviceID",
			"u8sLineID",
			"u8sAutomaticPhoneNumber",
			"u8sTapiLineName",
			"u8sPBXGroupName",
			"iAdminForwardingEnabled",
			"adminForwarding",
			"iUserForwardingEnabled",
			"userForwarding",
			"iPrivatePhone",
			"u8sLineSourceName",
			"customProps",
			"iAutoActivate",
			"u8sPhysicalDeviceID",
			"u8sLineURI",
			"iTrunk",
			"iSignalCallsOnAddress",
			"u8slistAddressNames",
			"u8sLineConfigIdentifier"
		];
		if (bIncludeOptionals)
			p.push("u8sHomeServer");
		return p;
	}

	public static type = "AsnMgmtTapiLineConfig4Admin";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtTapiLineConfig4Admin",
			...params,
			value: [
				new asn1ts.Integer({ name: "iEnabled" }),
				new asn1ts.Integer({ name: "iJournal" }),
				new asn1ts.Integer({ name: "iDummyWirelessPhone" }),
				new asn1ts.Integer({ name: "iUseAutomaticPhoneNumber" }),
				new asn1ts.Utf8String({ name: "u8sManualPhoneNumber" }),
				new asn1ts.Integer({ name: "iUseTapiLineName" }),
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Integer({ name: "iTapiDeviceID" }),
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Utf8String({ name: "u8sAutomaticPhoneNumber" }),
				new asn1ts.Utf8String({ name: "u8sTapiLineName" }),
				new asn1ts.Utf8String({ name: "u8sPBXGroupName" }),
				new asn1ts.Integer({ name: "iAdminForwardingEnabled" }),
				ENetUC_Common_SIPCTI.AsnLineForwards.getASN1Schema({ name: "adminForwarding" }),
				new asn1ts.Integer({ name: "iUserForwardingEnabled" }),
				ENetUC_Common_SIPCTI.AsnLineForwards.getASN1Schema({ name: "userForwarding" }),
				new asn1ts.Integer({ name: "iPrivatePhone" }),
				new asn1ts.Utf8String({ name: "u8sLineSourceName" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "customProps" }),
				new asn1ts.Integer({ name: "iAutoActivate" }),
				new asn1ts.Utf8String({ name: "u8sPhysicalDeviceID" }),
				new asn1ts.Utf8String({ name: "u8sLineURI" }),
				new asn1ts.Integer({ name: "iTrunk" }),
				new asn1ts.Integer({ name: "iSignalCallsOnAddress" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistAddressNames" }),
				new asn1ts.Utf8String({ name: "u8sLineConfigIdentifier" }),
				new asn1ts.Utf8String({ name: "u8sHomeServer", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Enabled to be used by the Server **\/ */
	public iEnabled!: number;
	/** Journal für die Leitung wird geschrieben **\/ */
	public iJournal!: number;
	/** nicht verwendet */
	public iDummyWirelessPhone!: number;
	/**
	 * Rufnummer automatisch bestimmen - aus Address bzw. linename
	 * Dies ist keine gespeicherte Einstellung. Dies wird immer nur aus der Gruppe bestimmt. **\/
	 */
	public iUseAutomaticPhoneNumber!: number;
	/** Phone Number Manuell */
	public u8sManualPhoneNumber!: string;
	/** Leitungsname aus Tapi verwenden **\/ */
	public iUseTapiLineName!: number;
	/** LocationID **\/ */
	public u8sLocationID!: string;
	/** Tapi DeviceID ist nur während der Laufzeit konstant, nicht nach einem Neustart */
	public iTapiDeviceID!: number;
	/** LineID */
	public u8sLineID!: string;
	/** Phone Number Automatisch */
	public u8sAutomaticPhoneNumber!: string;
	/** Tapi Line Name */
	public u8sTapiLineName!: string;
	/** Tapi Gruppen Name */
	public u8sPBXGroupName!: string;
	/** Administrative CtiServer Rufumleitungen eingeschaltet */
	public iAdminForwardingEnabled!: number;
	/** Administrative CtiServer Rufumleitungen für die Line */
	public adminForwarding!: ENetUC_Common_SIPCTI.AsnLineForwards;
	/** User CtiServer Rufumleitungen eingeschaltet */
	public iUserForwardingEnabled!: number;
	/** User CtiServer Rufumleitungen für die Line */
	public userForwarding!: ENetUC_Common_SIPCTI.AsnLineForwards;
	public iPrivatePhone!: number;
	/** Leitungsquelle Name (z.B. Tapi) */
	public u8sLineSourceName!: string;
	/**
	 * Custom Properties for individual Line Sources
	 * Property strings are defined as ELINEPROP_XXX ies **\/
	 */
	public customProps!: ENetUC_Common.AsnStringPairList;
	/**
	 * Dynamic enable - Group setting
	 * Diese Leitung kann dynamisch enabled werden, wenn benötigt **\/
	 */
	public iAutoActivate!: number;
	/** PhysicalDeviceID */
	public u8sPhysicalDeviceID!: string;
	/** LineUri */
	public u8sLineURI!: string;
	/** Dies ist eine Amtsleitung **\/ */
	public iTrunk!: number;
	/** Call auf den folgenden Adressen signalisieren */
	/** (see AsnMgmtTapiLineSINGALCALLSONADDRESSEnum) */
	public iSignalCallsOnAddress!: number;
	/** Addressen auf der Leitung */
	public u8slistAddressNames!: ENetUC_Common.UTF8StringList;
	/** LineConfigIdentifier */
	public u8sLineConfigIdentifier!: string;
	/** Für DataCenter: Konfigurierter HomeServer, der für diese Leitung zuständig ist */
	public u8sHomeServer?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineGroupRemovedArgument {
	public constructor(that: AsnMgmtOnLineGroupRemovedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineGroupRemovedArgument {
		return new AsnMgmtOnLineGroupRemovedArgument({
			u8sLineSourceName: "",
			u8sPBXGroupName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSourceName",
			"u8sPBXGroupName"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineGroupRemovedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineGroupRemovedArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSourceName" }),
				new asn1ts.Utf8String({ name: "u8sPBXGroupName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSourceName!: string;
	public u8sPBXGroupName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineGroupsArgument {
	public constructor(that: AsnMgmtGetLineGroupsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineGroupsArgument {
		return new AsnMgmtGetLineGroupsArgument({
			u8sLineSourceName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSourceName"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineGroupsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineGroupsArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSourceName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSourceName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineGroupsResult {
	public constructor(that: AsnMgmtGetLineGroupsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineGroupsResult {
		return new AsnMgmtGetLineGroupsResult({
			u8slistLineGroups: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistLineGroups"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineGroupsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineGroupsResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistLineGroups" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistLineGroups!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSubscribeLineEventsArgument {
	public constructor(that: AsnMgmtSubscribeLineEventsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSubscribeLineEventsArgument {
		return new AsnMgmtSubscribeLineEventsArgument({
			u8sTAPILineID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sTAPILineID"
		];
		return p;
	}

	public static type = "AsnMgmtSubscribeLineEventsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSubscribeLineEventsArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sTAPILineID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sTAPILineID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineConfigArgument {
	public constructor(that: AsnMgmtGetLineConfigArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineConfigArgument {
		return new AsnMgmtGetLineConfigArgument({
			u8sLineSource: "",
			iDeviceID: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSource",
			"iDeviceID"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineConfigArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineConfigArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSource" }),
				new asn1ts.Integer({ name: "iDeviceID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSource!: string;
	public iDeviceID!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDeleteLineArgument {
	public constructor(that: AsnMgmtDeleteLineArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDeleteLineArgument {
		return new AsnMgmtDeleteLineArgument({
			u8sLineSource: "",
			u8sLineID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSource",
			"u8sLineID"
		];
		return p;
	}

	public static type = "AsnMgmtDeleteLineArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDeleteLineArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSource" }),
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSource!: string;
	public u8sLineID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtETapiUIDllCallbackArgument {
	public constructor(that: AsnMgmtETapiUIDllCallbackArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtETapiUIDllCallbackArgument {
		return new AsnMgmtETapiUIDllCallbackArgument({
			binData: new Uint8Array(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"binData"
		];
		return p;
	}

	public static type = "AsnMgmtETapiUIDllCallbackArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtETapiUIDllCallbackArgument",
			...params,
			value: [
				new asn1ts.OctetString({ name: "binData" }),
				new asn1ts.Extension()
			]
		});
	}

	public binData!: Uint8Array;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtETapiUIDllCallbackResult {
	public constructor(that: AsnMgmtETapiUIDllCallbackResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtETapiUIDllCallbackResult {
		return new AsnMgmtETapiUIDllCallbackResult({
			binData: new Uint8Array(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"binData"
		];
		return p;
	}

	public static type = "AsnMgmtETapiUIDllCallbackResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtETapiUIDllCallbackResult",
			...params,
			value: [
				new asn1ts.OctetString({ name: "binData" }),
				new asn1ts.Extension()
			]
		});
	}

	public binData!: Uint8Array;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtCtiFeatureCode {
	public constructor(that: AsnMgmtCtiFeatureCode) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtCtiFeatureCode {
		return new AsnMgmtCtiFeatureCode({
			bEnabled: false,
			u8sFeatureName: "",
			u8sFeatureCode: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bEnabled",
			"u8sFeatureName",
			"u8sFeatureCode"
		];
		return p;
	}

	public static type = "AsnMgmtCtiFeatureCode";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtCtiFeatureCode",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bEnabled" }),
				new asn1ts.Utf8String({ name: "u8sFeatureName" }),
				new asn1ts.Utf8String({ name: "u8sFeatureCode" }),
				new asn1ts.Extension()
			]
		});
	}

	/** FeatureCode ist aktive */
	public bEnabled!: boolean;
	/** Name */
	public u8sFeatureName!: string;
	/** Code */
	public u8sFeatureCode!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineGroupConfigArgument {
	public constructor(that: AsnMgmtGetLineGroupConfigArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineGroupConfigArgument {
		return new AsnMgmtGetLineGroupConfigArgument({
			u8sLineSourceName: "",
			u8sGroupName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSourceName",
			"u8sGroupName"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineGroupConfigArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineGroupConfigArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSourceName" }),
				new asn1ts.Utf8String({ name: "u8sGroupName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSourceName!: string;
	public u8sGroupName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRequestPBXLineExistsArgument {
	public constructor(that: AsnMgmtRequestPBXLineExistsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRequestPBXLineExistsArgument {
		return new AsnMgmtRequestPBXLineExistsArgument({
			u8sPhoneNumber: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sPhoneNumber"
		];
		return p;
	}

	public static type = "AsnMgmtRequestPBXLineExistsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRequestPBXLineExistsArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sPhoneNumber" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sPhoneNumber!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRequestPBXLineExistsResult {
	public constructor(that: AsnMgmtRequestPBXLineExistsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRequestPBXLineExistsResult {
		return new AsnMgmtRequestPBXLineExistsResult({
			u8sCorrectNumberSC: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sCorrectNumberSC"
		];
		return p;
	}

	public static type = "AsnMgmtRequestPBXLineExistsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRequestPBXLineExistsResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sCorrectNumberSC" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sCorrectNumberSC!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtLineEventForAdmin {
	public constructor(that: AsnMgmtLineEventForAdmin) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLineEventForAdmin {
		return new AsnMgmtLineEventForAdmin({
			u8sTAPILineID: "",
			u8sCallerIDTAPI: "",
			u8sCalledIDTAPI: "",
			u8sConnectedIDTAPI: "",
			bOutBoundCall: false,
			iCallState: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sTAPILineID",
			"u8sCallerIDTAPI",
			"u8sCalledIDTAPI",
			"u8sConnectedIDTAPI",
			"bOutBoundCall",
			"iCallState"
		];
		return p;
	}

	public static type = "AsnMgmtLineEventForAdmin";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLineEventForAdmin",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sTAPILineID" }),
				new asn1ts.Utf8String({ name: "u8sCallerIDTAPI" }),
				new asn1ts.Utf8String({ name: "u8sCalledIDTAPI" }),
				new asn1ts.Utf8String({ name: "u8sConnectedIDTAPI" }),
				new asn1ts.Boolean({ name: "bOutBoundCall" }),
				new asn1ts.Integer({ name: "iCallState" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sTAPILineID!: string;
	public u8sCallerIDTAPI!: string;
	public u8sCalledIDTAPI!: string;
	public u8sConnectedIDTAPI!: string;
	public bOutBoundCall!: boolean;
	public iCallState!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUserManagerLDAPAttribute {
	public constructor(that: AsnMgmtUserManagerLDAPAttribute) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUserManagerLDAPAttribute {
		return new AsnMgmtUserManagerLDAPAttribute({
			u8sCtiServerAttributeName: "",
			u8sLDAPAttributeName: "",
			u8sLDAPAttributeDefaultName: "",
			bThisFieldCanQueryaPhoneLine: false,
			bQueryLinesForThisPhoneNumberField: false,
			bQueryLinesForThisPhoneNumberFieldDefault: false,
			bOptionalEnabled: false,
			bEnabled: false,
			bEnabledDefault: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sCtiServerAttributeName",
			"u8sLDAPAttributeName",
			"u8sLDAPAttributeDefaultName",
			"bThisFieldCanQueryaPhoneLine",
			"bQueryLinesForThisPhoneNumberField",
			"bQueryLinesForThisPhoneNumberFieldDefault",
			"bOptionalEnabled",
			"bEnabled",
			"bEnabledDefault"
		];
		return p;
	}

	public static type = "AsnMgmtUserManagerLDAPAttribute";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUserManagerLDAPAttribute",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sCtiServerAttributeName" }),
				new asn1ts.Utf8String({ name: "u8sLDAPAttributeName" }),
				new asn1ts.Utf8String({ name: "u8sLDAPAttributeDefaultName" }),
				new asn1ts.Boolean({ name: "bThisFieldCanQueryaPhoneLine" }),
				new asn1ts.Boolean({ name: "bQueryLinesForThisPhoneNumberField" }),
				new asn1ts.Boolean({ name: "bQueryLinesForThisPhoneNumberFieldDefault" }),
				new asn1ts.Boolean({ name: "bOptionalEnabled" }),
				new asn1ts.Boolean({ name: "bEnabled" }),
				new asn1ts.Boolean({ name: "bEnabledDefault" }),
				new asn1ts.Extension()
			]
		});
	}

	/** CtiServer Attributename (normalerweise der Feldname des NetDatabaseContact Feldes) */
	public u8sCtiServerAttributeName!: string;
	/** LDAP Attributname */
	public u8sLDAPAttributeName!: string;
	/** Default Name des Attributes (Default Mapping) */
	public u8sLDAPAttributeDefaultName!: string;
	/** Flag das definiert ob diese Feld überhaupt als Leitung gezogen werden darf */
	public bThisFieldCanQueryaPhoneLine!: boolean;
	/** Leitungen für dieses Rufnummernfeld binden */
	public bQueryLinesForThisPhoneNumberField!: boolean;
	/** Leitungen für dieses Rufnummernfeld binden */
	public bQueryLinesForThisPhoneNumberFieldDefault!: boolean;
	/** Dieses Feld darf deaktiviert werden (ist Optional aktiv) */
	public bOptionalEnabled!: boolean;
	/** Dieses Feld ist aktiv (nur gültig wenn bOptionalEnabled = true ist, ansonsten immer true) */
	public bEnabled!: boolean;
	/** Default Wert für enabled (nur gültig wenn bOptionalEnabled = true ist, ansonsten immer true) */
	public bEnabledDefault!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUMInterfaceSettingsArgument {
	public constructor(that: AsnMgmtGetUMInterfaceSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUMInterfaceSettingsArgument {
		return new AsnMgmtGetUMInterfaceSettingsArgument({
			iInterfaceType: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iInterfaceType"
		];
		return p;
	}

	public static type = "AsnMgmtGetUMInterfaceSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUMInterfaceSettingsArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iInterfaceType" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnMgmtUserManagerInterfaceType) */
	public iInterfaceType!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtAddLicenseArgument {
	public constructor(that: AsnMgmtAddLicenseArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAddLicenseArgument {
		return new AsnMgmtAddLicenseArgument({
			u8sLicense: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLicense"
		];
		return p;
	}

	public static type = "AsnMgmtAddLicenseArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtAddLicenseArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLicense" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLicense!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRemoveLicenseArgument {
	public constructor(that: AsnMgmtRemoveLicenseArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRemoveLicenseArgument {
		return new AsnMgmtRemoveLicenseArgument({
			u8sLicense: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLicense"
		];
		return p;
	}

	public static type = "AsnMgmtRemoveLicenseArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRemoveLicenseArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLicense" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLicense!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtFeatureCount {
	public constructor(that: AsnMgmtFeatureCount) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtFeatureCount {
		return new AsnMgmtFeatureCount({
			feature: 0,
			iCount: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"feature",
			"iCount"
		];
		return p;
	}

	public static type = "AsnMgmtFeatureCount";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtFeatureCount",
			...params,
			value: [
				new asn1ts.Integer({ name: "feature" }),
				new asn1ts.Integer({ name: "iCount" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnMgmtELICENSEFEATURE) */
	public feature!: number;
	public iCount!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetLicenseGenuineStatusArgument {
	public constructor(that: AsnMgmtSetLicenseGenuineStatusArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetLicenseGenuineStatusArgument {
		return new AsnMgmtSetLicenseGenuineStatusArgument({
			genuineInfos: new ENetUC_Common.AsnStringPairList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"genuineInfos"
		];
		return p;
	}

	public static type = "AsnMgmtSetLicenseGenuineStatusArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetLicenseGenuineStatusArgument",
			...params,
			value: [
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "genuineInfos" }),
				new asn1ts.Extension()
			]
		});
	}

	public genuineInfos!: ENetUC_Common.AsnStringPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetLicenseGenuineStatusResult {
	public constructor(that: AsnMgmtSetLicenseGenuineStatusResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetLicenseGenuineStatusResult {
		return new AsnMgmtSetLicenseGenuineStatusResult({
			u8slistUpdateLicenseCodes: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistUpdateLicenseCodes"
		];
		return p;
	}

	public static type = "AsnMgmtSetLicenseGenuineStatusResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetLicenseGenuineStatusResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistUpdateLicenseCodes" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistUpdateLicenseCodes!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLicenseArgument {
	public constructor(that: AsnMgmtGetLicenseArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLicenseArgument {
		return new AsnMgmtGetLicenseArgument({
			iCount: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iCount"
		];
		return p;
	}

	public static type = "AsnMgmtGetLicenseArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLicenseArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iCount" }),
				new asn1ts.Extension()
			]
		});
	}

	public iCount!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetHasCurrentVersionLicensesResult {
	public constructor(that: AsnMgmtGetHasCurrentVersionLicensesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetHasCurrentVersionLicensesResult {
		return new AsnMgmtGetHasCurrentVersionLicensesResult({
			iNumUsers: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iNumUsers"
		];
		return p;
	}

	public static type = "AsnMgmtGetHasCurrentVersionLicensesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetHasCurrentVersionLicensesResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iNumUsers" }),
				new asn1ts.Extension()
			]
		});
	}

	public iNumUsers!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetNumLicensesResult {
	public constructor(that: AsnMgmtGetNumLicensesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetNumLicensesResult {
		return new AsnMgmtGetNumLicensesResult({
			iNumLicenses: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iNumLicenses"
		];
		return p;
	}

	public static type = "AsnMgmtGetNumLicensesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetNumLicensesResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iNumLicenses" }),
				new asn1ts.Extension()
			]
		});
	}

	public iNumLicenses!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetRemainingTrialDaysResult {
	public constructor(that: AsnMgmtGetRemainingTrialDaysResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetRemainingTrialDaysResult {
		return new AsnMgmtGetRemainingTrialDaysResult({
			iRemainingTestDays: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iRemainingTestDays"
		];
		return p;
	}

	public static type = "AsnMgmtGetRemainingTrialDaysResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetRemainingTrialDaysResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iRemainingTestDays" }),
				new asn1ts.Extension()
			]
		});
	}

	public iRemainingTestDays!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetHWIDResult {
	public constructor(that: AsnMgmtGetHWIDResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetHWIDResult {
		return new AsnMgmtGetHWIDResult({
			u8sHWID: "",
			u8sSystemIdentifier: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sHWID",
			"u8sSystemIdentifier"
		];
		return p;
	}

	public static type = "AsnMgmtGetHWIDResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetHWIDResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sHWID" }),
				new asn1ts.Utf8String({ name: "u8sSystemIdentifier" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sHWID!: string;
	public u8sSystemIdentifier!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLicensesHaveChangedEventArgument {
	public constructor(that?: AsnMgmtOnLicensesHaveChangedEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLicensesHaveChangedEventArgument {
		return new AsnMgmtOnLicensesHaveChangedEventArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtOnLicensesHaveChangedEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLicensesHaveChangedEventArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtEUCWSCapabilities {
	public constructor(that: AsnMgmtEUCWSCapabilities) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEUCWSCapabilities {
		return new AsnMgmtEUCWSCapabilities({
			iCapabilities: 0,
			u8slistAliases: new ENetUC_Common.UTF8StringList(),
			u8slistLicenses: new ENetUC_Common.UTF8StringList(),
			u8slistCERObject: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iCapabilities",
			"u8slistAliases",
			"u8slistLicenses",
			"u8slistCERObject"
		];
		if (bIncludeOptionals) {
			p.push(
				"u8sVserviceDomain",
				"u8sVserviceLastImageVersion"
			);
		}
		return p;
	}

	public static type = "AsnMgmtEUCWSCapabilities";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEUCWSCapabilities",
			...params,
			value: [
				new asn1ts.Integer({ name: "iCapabilities" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistAliases" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistLicenses" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistCERObject" }),
				new asn1ts.Utf8String({ name: "u8sVserviceDomain", idBlock: { optionalID: 0 } }),
				new asn1ts.Utf8String({ name: "u8sVserviceLastImageVersion", idBlock: { optionalID: 1 } }),
				new asn1ts.Extension()
			]
		});
	}

	public iCapabilities!: number;
	public u8slistAliases!: ENetUC_Common.UTF8StringList;
	public u8slistLicenses!: ENetUC_Common.UTF8StringList;
	public u8slistCERObject!: ENetUC_Common.UTF8StringList;
	/** address of Starface PBX used for SIP Registration configuration */
	public u8sVserviceDomain?: string;
	/**
	 * Version of the newest configured PBX-Image - needed for Update trigger
	 * @added 15.05.2024
	 */
	public u8sVserviceLastImageVersion?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtEUCWebServiceConfig {
	public constructor(that: AsnMgmtEUCWebServiceConfig) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEUCWebServiceConfig {
		return new AsnMgmtEUCWebServiceConfig({
			u8sWCSID: "",
			u8sUCSID: "",
			u8sUCSPassword: "",
			u8sServerAddress: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sWCSID",
			"u8sUCSID",
			"u8sUCSPassword",
			"u8sServerAddress"
		];
		return p;
	}

	public static type = "AsnMgmtEUCWebServiceConfig";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEUCWebServiceConfig",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sWCSID" }),
				new asn1ts.Utf8String({ name: "u8sUCSID" }),
				new asn1ts.Utf8String({ name: "u8sUCSPassword" }),
				new asn1ts.Utf8String({ name: "u8sServerAddress" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sWCSID!: string;
	public u8sUCSID!: string;
	public u8sUCSPassword!: string;
	public u8sServerAddress!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtWebServiceAccessParams {
	public constructor(that: AsnMgmtWebServiceAccessParams) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtWebServiceAccessParams {
		return new AsnMgmtWebServiceAccessParams({
			u8sHost: "",
			iPort: 0,
			iSSL: 0,
			iController: 0,
			u8sUCSID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sHost",
			"iPort",
			"iSSL",
			"iController",
			"u8sUCSID"
		];
		return p;
	}

	public static type = "AsnMgmtWebServiceAccessParams";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtWebServiceAccessParams",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sHost" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Integer({ name: "iSSL" }),
				new asn1ts.Integer({ name: "iController" }),
				new asn1ts.Utf8String({ name: "u8sUCSID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sHost!: string;
	public iPort!: number;
	public iSSL!: number;
	public iController!: number;
	public u8sUCSID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSendMailArgument {
	public constructor(that: AsnMgmtSendMailArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSendMailArgument {
		return new AsnMgmtSendMailArgument({
			u8sFrom: "",
			u8sTo: "",
			u8sSubject: "",
			u8sMessage: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sFrom",
			"u8sTo",
			"u8sSubject",
			"u8sMessage"
		];
		return p;
	}

	public static type = "AsnMgmtSendMailArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSendMailArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sFrom" }),
				new asn1ts.Utf8String({ name: "u8sTo" }),
				new asn1ts.Utf8String({ name: "u8sSubject" }),
				new asn1ts.Utf8String({ name: "u8sMessage" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sFrom!: string;
	public u8sTo!: string;
	public u8sSubject!: string;
	public u8sMessage!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSendInviteMailArgument {
	public constructor(that: AsnMgmtSendInviteMailArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSendInviteMailArgument {
		return new AsnMgmtSendInviteMailArgument({
			u8slistAddresses: new ENetUC_Common.UTF8StringList(),
			u8sMessage: "",
			u8sUserURL: "",
			u8sAppConfigURL: "",
			iWaitForSend: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistAddresses",
			"u8sMessage",
			"u8sUserURL",
			"u8sAppConfigURL",
			"iWaitForSend"
		];
		return p;
	}

	public static type = "AsnMgmtSendInviteMailArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSendInviteMailArgument",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistAddresses" }),
				new asn1ts.Utf8String({ name: "u8sMessage" }),
				new asn1ts.Utf8String({ name: "u8sUserURL" }),
				new asn1ts.Utf8String({ name: "u8sAppConfigURL" }),
				new asn1ts.Integer({ name: "iWaitForSend" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistAddresses!: ENetUC_Common.UTF8StringList;
	public u8sMessage!: string;
	public u8sUserURL!: string;
	public u8sAppConfigURL!: string;
	public iWaitForSend!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtEMailConnectorSettings {
	public constructor(that: AsnMgmtEMailConnectorSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEMailConnectorSettings {
		return new AsnMgmtEMailConnectorSettings({
			u8sSMTPServer: "",
			u8sLoginName: "",
			u8sLoginPassword: "",
			u8sAdminMailAddr: "",
			u8sMailFromAddr: "",
			u8sMailFromName: "",
			iSMTPPort: 0,
			iAllowUTF8Encoding: 0,
			iRequireTLS: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sSMTPServer",
			"u8sLoginName",
			"u8sLoginPassword",
			"u8sAdminMailAddr",
			"u8sMailFromAddr",
			"u8sMailFromName",
			"iSMTPPort",
			"iAllowUTF8Encoding",
			"iRequireTLS"
		];
		return p;
	}

	public static type = "AsnMgmtEMailConnectorSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEMailConnectorSettings",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sSMTPServer" }),
				new asn1ts.Utf8String({ name: "u8sLoginName" }),
				new asn1ts.Utf8String({ name: "u8sLoginPassword" }),
				new asn1ts.Utf8String({ name: "u8sAdminMailAddr" }),
				new asn1ts.Utf8String({ name: "u8sMailFromAddr" }),
				new asn1ts.Utf8String({ name: "u8sMailFromName" }),
				new asn1ts.Integer({ name: "iSMTPPort" }),
				new asn1ts.Integer({ name: "iAllowUTF8Encoding" }),
				new asn1ts.Integer({ name: "iRequireTLS" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sSMTPServer!: string;
	public u8sLoginName!: string;
	public u8sLoginPassword!: string;
	public u8sAdminMailAddr!: string;
	public u8sMailFromAddr!: string;
	public u8sMailFromName!: string;
	public iSMTPPort!: number;
	public iAllowUTF8Encoding!: number;
	public iRequireTLS!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtTapiProblemSettings {
	public constructor(that: AsnMgmtTapiProblemSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtTapiProblemSettings {
		return new AsnMgmtTapiProblemSettings({
			iReinitAutorestart: 0,
			iLineOpenFailedAction: 0,
			iLineOpenDelayTime: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iReinitAutorestart",
			"iLineOpenFailedAction",
			"iLineOpenDelayTime"
		];
		return p;
	}

	public static type = "AsnMgmtTapiProblemSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtTapiProblemSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iReinitAutorestart" }),
				new asn1ts.Integer({ name: "iLineOpenFailedAction" }),
				new asn1ts.Integer({ name: "iLineOpenDelayTime" }),
				new asn1ts.Extension()
			]
		});
	}

	public iReinitAutorestart!: number;
	public iLineOpenFailedAction!: number;
	public iLineOpenDelayTime!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Get DatabaseManager Settings
 * return: success(0), accessdenied(1)
 * Attention: this type is momentarily not used by asnMgmtGetDatabaseManagerSettings()
 */
export class AsnMgmtDatabaseManagerSettings {
	public constructor(that: AsnMgmtDatabaseManagerSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDatabaseManagerSettings {
		return new AsnMgmtDatabaseManagerSettings({
			iAuthMode: 0,
			u8sEngine: "",
			u8sServer: "",
			u8sFilePath: "",
			u8sLoginName: "",
			u8sPassword: "",
			u8sDatabaseName: "",
			u8sOfflineTable: "",
			u8sJournalTable: "",
			u8sTrackerTable: "",
			u8sConversationTable: "",
			u8sAppointmentTable: "",
			u8sTaskTable: "",
			u8sODBCConfiguredDriver: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iAuthMode",
			"u8sEngine",
			"u8sServer",
			"u8sFilePath",
			"u8sLoginName",
			"u8sPassword",
			"u8sDatabaseName",
			"u8sOfflineTable",
			"u8sJournalTable",
			"u8sTrackerTable",
			"u8sConversationTable",
			"u8sAppointmentTable",
			"u8sTaskTable",
			"u8sODBCConfiguredDriver"
		];
		if (bIncludeOptionals) {
			p.push(
				"u8sODBCAvailableDrivers",
				"bJetDBsExist"
			);
		}
		return p;
	}

	public static type = "AsnMgmtDatabaseManagerSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDatabaseManagerSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iAuthMode" }),
				new asn1ts.Utf8String({ name: "u8sEngine" }),
				new asn1ts.Utf8String({ name: "u8sServer" }),
				new asn1ts.Utf8String({ name: "u8sFilePath" }),
				new asn1ts.Utf8String({ name: "u8sLoginName" }),
				new asn1ts.Utf8String({ name: "u8sPassword" }),
				new asn1ts.Utf8String({ name: "u8sDatabaseName" }),
				new asn1ts.Utf8String({ name: "u8sOfflineTable" }),
				new asn1ts.Utf8String({ name: "u8sJournalTable" }),
				new asn1ts.Utf8String({ name: "u8sTrackerTable" }),
				new asn1ts.Utf8String({ name: "u8sConversationTable" }),
				new asn1ts.Utf8String({ name: "u8sAppointmentTable" }),
				new asn1ts.Utf8String({ name: "u8sTaskTable" }),
				new asn1ts.Utf8String({ name: "u8sODBCConfiguredDriver" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "u8sODBCAvailableDrivers", idBlock: { optionalID: 0 } }),
				new asn1ts.Boolean({ name: "bJetDBsExist", idBlock: { optionalID: 1 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnDatabaseManagerAuthModeEnum) */
	public iAuthMode!: number;
	/** mssql_mdac, jet */
	public u8sEngine!: string;
	/** SQL-Server Name */
	public u8sServer!: string;
	/** Filepath zur Datenbank im jet\/MSAccess Fall */
	public u8sFilePath!: string;
	/** Loginname bei SQL-Server Fall; Ist der Name leer, wird der SQL-Server mit Windows-Anmeldung verwendet. Enthält der Name etwas, wird SQL-Server internes Benutzerverwaltung verwendet. */
	public u8sLoginName!: string;
	/** Passwort für den Loginname; wird nur benötigt, wenn SQL-Server Benutzerkennwörter verlangt */
	public u8sPassword!: string;
	/** Datenbanknamen-Prefix für jet-Datenbanken */
	public u8sDatabaseName!: string;
	/** Name der Offline-Journal Datenbank\/Tabelle */
	public u8sOfflineTable!: string;
	/** Name der Journal Datenbank\/Tablle */
	public u8sJournalTable!: string;
	/** Name der Call-Tracker Datenbank\/Tablle */
	public u8sTrackerTable!: string;
	/** Name der Conversation Datenbank\/Tablle (Chat) */
	public u8sConversationTable!: string;
	/** Name der Termin Datenbank\/Tabelle */
	public u8sAppointmentTable!: string;
	/** Name der Aufgaben\/geplante Anrufe Datenbank\/Tabelle */
	public u8sTaskTable!: string;
	/** Which ODBC driver shall be used (allows the user to select one) */
	public u8sODBCConfiguredDriver!: string;
	/** the list of available ODBC drivers */
	public u8sODBCAvailableDrivers?: ENetUC_Common.AsnStringPairList;
	/** true if the server has found a JETDB on disc */
	public bJetDBsExist?: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAvailableDatabasesResult {
	public constructor(that: AsnMgmtGetAvailableDatabasesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAvailableDatabasesResult {
		return new AsnMgmtGetAvailableDatabasesResult({
			u8slistDatabaseNames: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistDatabaseNames"
		];
		return p;
	}

	public static type = "AsnMgmtGetAvailableDatabasesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAvailableDatabasesResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistDatabaseNames" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistDatabaseNames!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnListeningInterface {
	public constructor(that: AsnListeningInterface) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnListeningInterface {
		return new AsnListeningInterface({
			bEnabled: false,
			u8sInterfaceGUID: "",
			iInterfaceType: 0,
			iProtocol: 0,
			u8sBindAddress: "",
			iPort: 0,
			bIsDefault: false,
			u8sCertHash: "",
			u8sCertContainerFile: "",
			u8sCertContainerContent: "",
			u8sDNSName: "",
			u8sPublicIP: "",
			iPublicPort: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bEnabled",
			"u8sInterfaceGUID",
			"iInterfaceType",
			"iProtocol",
			"u8sBindAddress",
			"iPort",
			"bIsDefault",
			"u8sCertHash",
			"u8sCertContainerFile",
			"u8sCertContainerContent",
			"u8sDNSName",
			"u8sPublicIP",
			"iPublicPort"
		];
		return p;
	}

	public static type = "AsnListeningInterface";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnListeningInterface",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bEnabled" }),
				new asn1ts.Utf8String({ name: "u8sInterfaceGUID" }),
				new asn1ts.Integer({ name: "iInterfaceType" }),
				new asn1ts.Integer({ name: "iProtocol" }),
				new asn1ts.Utf8String({ name: "u8sBindAddress" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Boolean({ name: "bIsDefault" }),
				new asn1ts.Utf8String({ name: "u8sCertHash" }),
				new asn1ts.Utf8String({ name: "u8sCertContainerFile" }),
				new asn1ts.Utf8String({ name: "u8sCertContainerContent" }),
				new asn1ts.Utf8String({ name: "u8sDNSName" }),
				new asn1ts.Utf8String({ name: "u8sPublicIP" }),
				new asn1ts.Integer({ name: "iPublicPort" }),
				new asn1ts.Extension()
			]
		});
	}

	/** interface enabled\/disabled */
	public bEnabled!: boolean;
	/** Eindeutige ID für dieses Interface */
	public u8sInterfaceGUID!: string;
	/** Dieses Interface ist für folgende Verbindungen (kann sich zur Laufzeit NICHT ändern) */
	/** (see AsnInterfaceTypeEnum) */
	public iInterfaceType!: number;
	/** Protokoll welches verwendet wird */
	/** (see AsnInterfaceProtocolEnum) */
	public iProtocol!: number;
	/** Bind Adresse */
	public u8sBindAddress!: string;
	/** Port */
	public iPort!: number;
	/** Interface ist das Default Interface */
	public bIsDefault!: boolean;
	/** Fingerprint des zu verwendenen Zertifikats */
	public u8sCertHash!: string;
	/** Certificate Container File (.ecert) */
	public u8sCertContainerFile!: string;
	/** Certificate Container Content (only for Server-&gt;Admin-&gt;Server) */
	public u8sCertContainerContent!: string;
	/** DNS Name unter dem das Interface erreichbar ist */
	public u8sDNSName!: string;
	/** Öffentliche IP-Adresse\/Port */
	public u8sPublicIP!: string;
	public iPublicPort!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnListeningInterfaceStatus {
	public constructor(that: AsnListeningInterfaceStatus) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnListeningInterfaceStatus {
		return new AsnListeningInterfaceStatus({
			u8sInterfaceGUID: "",
			iStatus: 0,
			iSocketServerIDs: new ENetUC_Common.SEQInteger(),
			iOpenConnections: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sInterfaceGUID",
			"iStatus",
			"iSocketServerIDs",
			"iOpenConnections"
		];
		return p;
	}

	public static type = "AsnListeningInterfaceStatus";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnListeningInterfaceStatus",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sInterfaceGUID" }),
				new asn1ts.Integer({ name: "iStatus" }),
				ENetUC_Common.SEQInteger.getASN1Schema({ name: "iSocketServerIDs" }),
				new asn1ts.Integer({ name: "iOpenConnections" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Eindeutige ID für dieses Interface */
	public u8sInterfaceGUID!: string;
	/** Status des Interfaces */
	/** (see AsnInterfaceStatusEnum) */
	public iStatus!: number;
	/** Liste der SocketServer SocketIDs zum Interface */
	public iSocketServerIDs!: ENetUC_Common.SEQInteger;
	/** Anzahl der aktuell verbundenen Clients */
	public iOpenConnections!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Entries to enable the Administrator to select the the logging of the Media Server
 */
export class AsnMediaServerLogFile {
	public constructor(that: AsnMediaServerLogFile) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMediaServerLogFile {
		return new AsnMediaServerLogFile({
			u8sLogLevel: "",
			u8slistLogLevel: new ENetUC_Common.UTF8StringList(),
			iRestartImmediately: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLogLevel",
			"u8slistLogLevel",
			"iRestartImmediately"
		];
		return p;
	}

	public static type = "AsnMediaServerLogFile";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMediaServerLogFile",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLogLevel" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistLogLevel" }),
				new asn1ts.Integer({ name: "iRestartImmediately" }),
				new asn1ts.Extension()
			]
		});
	}

	/** aktuell selektierter Log-Level (Alias Name) */
	public u8sLogLevel!: string;
	/** Alias Namensliste der Log-Levels */
	public u8slistLogLevel!: ENetUC_Common.UTF8StringList;
	public iRestartImmediately!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Standortinformationen mit vollstaendigem Satz fuer Uebrtragung zwischen UCServer und UCAdmin
 */
export class AsnNumberFormatRegExpressionMgmt {
	public constructor(that: AsnNumberFormatRegExpressionMgmt) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnNumberFormatRegExpressionMgmt {
		return new AsnNumberFormatRegExpressionMgmt({
			u8sSearch: "",
			u8sReplace: "",
			bMatchReplace: false,
			bAutoCreatedRule: false,
			u8sAutoRuleforLocation: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sSearch",
			"u8sReplace",
			"bMatchReplace",
			"bAutoCreatedRule",
			"u8sAutoRuleforLocation"
		];
		return p;
	}

	public static type = "AsnNumberFormatRegExpressionMgmt";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnNumberFormatRegExpressionMgmt",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sSearch" }),
				new asn1ts.Utf8String({ name: "u8sReplace" }),
				new asn1ts.Boolean({ name: "bMatchReplace" }),
				new asn1ts.Boolean({ name: "bAutoCreatedRule" }),
				new asn1ts.Utf8String({ name: "u8sAutoRuleforLocation" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sSearch!: string;
	public u8sReplace!: string;
	public bMatchReplace!: boolean;
	public bAutoCreatedRule!: boolean;
	public u8sAutoRuleforLocation!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnRuleSoftphoneEmergencyMgmt {
	public constructor(that: AsnRuleSoftphoneEmergencyMgmt) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnRuleSoftphoneEmergencyMgmt {
		return new AsnRuleSoftphoneEmergencyMgmt({
			u8sName: "",
			u8sEmergencyNumber: "",
			u8sPrefix: "",
			u8sSubnetID: "",
			iSubnetMaskLen: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sName",
			"u8sEmergencyNumber",
			"u8sPrefix",
			"u8sSubnetID",
			"iSubnetMaskLen"
		];
		return p;
	}

	public static type = "AsnRuleSoftphoneEmergencyMgmt";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnRuleSoftphoneEmergencyMgmt",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sName" }),
				new asn1ts.Utf8String({ name: "u8sEmergencyNumber" }),
				new asn1ts.Utf8String({ name: "u8sPrefix" }),
				new asn1ts.Utf8String({ name: "u8sSubnetID" }),
				new asn1ts.Integer({ name: "iSubnetMaskLen" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sName!: string;
	public u8sEmergencyNumber!: string;
	public u8sPrefix!: string;
	public u8sSubnetID!: string;
	public iSubnetMaskLen!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Vorwahl mit liste von NXX nummern,
 * die als Foreign PNA Local Calls gewählt werden.
 */
export class AsnELocalDialingRuleForeignPNALocalCallItem {
	public constructor(that: AsnELocalDialingRuleForeignPNALocalCallItem) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnELocalDialingRuleForeignPNALocalCallItem {
		return new AsnELocalDialingRuleForeignPNALocalCallItem({
			u8sAreaCode: "",
			u8slistNXXPrefixList: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sAreaCode",
			"u8slistNXXPrefixList"
		];
		return p;
	}

	public static type = "AsnELocalDialingRuleForeignPNALocalCallItem";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnELocalDialingRuleForeignPNALocalCallItem",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sAreaCode" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistNXXPrefixList" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Wie vom TAPI-Treiber gemeldet */
	public u8sAreaCode!: string;
	/** Mit Standortinformationen erweitert */
	public u8slistNXXPrefixList!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Liste der Provider
 */
export class AsnELCRProvider {
	public constructor(that: AsnELCRProvider) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnELCRProvider {
		return new AsnELCRProvider({
			u8sProviderName: "",
			u8sProviderNumber: "",
			iProviderCOLOR: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sProviderName",
			"u8sProviderNumber",
			"iProviderCOLOR"
		];
		return p;
	}

	public static type = "AsnELCRProvider";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnELCRProvider",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sProviderName" }),
				new asn1ts.Utf8String({ name: "u8sProviderNumber" }),
				new asn1ts.Integer({ name: "iProviderCOLOR" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sProviderName!: string;
	public u8sProviderNumber!: string;
	public iProviderCOLOR!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Liste der Provider nach Zeit
 */
export class AsnELCRZone {
	public constructor(that: AsnELCRZone) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnELCRZone {
		return new AsnELCRZone({
			u8sZoneName: "",
			u8slistZonePrefixList: new ENetUC_Common.UTF8StringList(),
			u8sTimeToProviderWeekDay: "",
			u8sTimeToProviderSaturday: "",
			u8sTimeToProviderSunday: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sZoneName",
			"u8slistZonePrefixList",
			"u8sTimeToProviderWeekDay",
			"u8sTimeToProviderSaturday",
			"u8sTimeToProviderSunday"
		];
		return p;
	}

	public static type = "AsnELCRZone";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnELCRZone",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sZoneName" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistZonePrefixList" }),
				new asn1ts.Utf8String({ name: "u8sTimeToProviderWeekDay" }),
				new asn1ts.Utf8String({ name: "u8sTimeToProviderSaturday" }),
				new asn1ts.Utf8String({ name: "u8sTimeToProviderSunday" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sZoneName!: string;
	public u8slistZonePrefixList!: ENetUC_Common.UTF8StringList;
	/**
	 * Jeder dieser Strings enthält 48 Zeichen (48 Halbe Stunden)
	 * Jedes dieser Zeichen zeigt auf einen Provider
	 * Die Zeichen sind 0 - 9 und A - Z
	 * 0 bedeutet kein Provider
	 */
	public u8sTimeToProviderWeekDay!: string;
	public u8sTimeToProviderSaturday!: string;
	public u8sTimeToProviderSunday!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLocationInformationMgmtArgument {
	public constructor(that: AsnMgmtGetLocationInformationMgmtArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLocationInformationMgmtArgument {
		return new AsnMgmtGetLocationInformationMgmtArgument({
			u8sLocationID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLocationID"
		];
		return p;
	}

	public static type = "AsnMgmtGetLocationInformationMgmtArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLocationInformationMgmtArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLocationID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetLocationInformationMgmtResult {
	public constructor(that?: AsnMgmtSetLocationInformationMgmtResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetLocationInformationMgmtResult {
		return new AsnMgmtSetLocationInformationMgmtResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtSetLocationInformationMgmtResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetLocationInformationMgmtResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDeleteLocationArgument {
	public constructor(that: AsnMgmtDeleteLocationArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDeleteLocationArgument {
		return new AsnMgmtDeleteLocationArgument({
			u8sLocationID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLocationID"
		];
		return p;
	}

	public static type = "AsnMgmtDeleteLocationArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDeleteLocationArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLocationID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtLocationChangedArgument {
	public constructor(that: AsnMgmtLocationChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLocationChangedArgument {
		return new AsnMgmtLocationChangedArgument({
			u8sLocationID: "",
			u8sMD5CheckSum: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLocationID",
			"u8sMD5CheckSum"
		];
		return p;
	}

	public static type = "AsnMgmtLocationChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLocationChangedArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Utf8String({ name: "u8sMD5CheckSum" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLocationID!: string;
	public u8sMD5CheckSum!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnCSTAServerSettings {
	public constructor(that: AsnCSTAServerSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnCSTAServerSettings {
		return new AsnCSTAServerSettings({
			iCSTAServerEnabled: 0,
			iCSTAServerPort: 0,
			u8sCSTAServerBindAddress: "",
			iCSTAServerSSLEnabled: 0,
			iCSTAServerSSLPort: 0,
			u8sCSTAServerSSLBindAddress: "",
			u8sCSTAServerSSLCertificateHash: "",
			u8sCSTAServerUser: "",
			u8sCSTAServerPasswd: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iCSTAServerEnabled",
			"iCSTAServerPort",
			"u8sCSTAServerBindAddress",
			"iCSTAServerSSLEnabled",
			"iCSTAServerSSLPort",
			"u8sCSTAServerSSLBindAddress",
			"u8sCSTAServerSSLCertificateHash",
			"u8sCSTAServerUser",
			"u8sCSTAServerPasswd"
		];
		return p;
	}

	public static type = "AsnCSTAServerSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnCSTAServerSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iCSTAServerEnabled" }),
				new asn1ts.Integer({ name: "iCSTAServerPort" }),
				new asn1ts.Utf8String({ name: "u8sCSTAServerBindAddress" }),
				new asn1ts.Integer({ name: "iCSTAServerSSLEnabled" }),
				new asn1ts.Integer({ name: "iCSTAServerSSLPort" }),
				new asn1ts.Utf8String({ name: "u8sCSTAServerSSLBindAddress" }),
				new asn1ts.Utf8String({ name: "u8sCSTAServerSSLCertificateHash" }),
				new asn1ts.Utf8String({ name: "u8sCSTAServerUser" }),
				new asn1ts.Utf8String({ name: "u8sCSTAServerPasswd" }),
				new asn1ts.Extension()
			]
		});
	}

	/** TCP Server enabled? */
	public iCSTAServerEnabled!: number;
	/** TCP Port */
	public iCSTAServerPort!: number;
	/** bind to tcp address */
	public u8sCSTAServerBindAddress!: string;
	/** TCP Server enabled? */
	public iCSTAServerSSLEnabled!: number;
	/** TCP Port */
	public iCSTAServerSSLPort!: number;
	/** bind to tcp address */
	public u8sCSTAServerSSLBindAddress!: string;
	/** Hash for Certificate */
	public u8sCSTAServerSSLCertificateHash!: string;
	/** User Name */
	public u8sCSTAServerUser!: string;
	/** User Password */
	public u8sCSTAServerPasswd!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnAVStunOrTurnServer {
	public constructor(that: AsnAVStunOrTurnServer) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnAVStunOrTurnServer {
		return new AsnAVStunOrTurnServer({
			iType: 0,
			u8sUsername: "",
			u8sPassword: "",
			iTTLSeconds: 0,
			u8slistStrUris: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iType",
			"u8sUsername",
			"u8sPassword",
			"iTTLSeconds",
			"u8slistStrUris"
		];
		return p;
	}

	public static type = "AsnAVStunOrTurnServer";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnAVStunOrTurnServer",
			...params,
			value: [
				new asn1ts.Integer({ name: "iType" }),
				new asn1ts.Utf8String({ name: "u8sUsername" }),
				new asn1ts.Utf8String({ name: "u8sPassword" }),
				new asn1ts.Integer({ name: "iTTLSeconds" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistStrUris" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Typ */
	/** (see AsnAVSTUNANDTURNSERVERTYPE) */
	public iType!: number;
	/** typ = TURN_USER_PASSWD: username; typ = TURN_SHARED_SECRET: Leer */
	public u8sUsername!: string;
	/** typ = TURN_USER_PASSWD: credential; typ = TURN_SHARED_SECRET: Shared Secret */
	public u8sPassword!: string;
	/** Config Value */
	public iTTLSeconds!: number;
	/** Liste der Turn Server URIs */
	public u8slistStrUris!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSTUNandTURNConsumerConfigResult {
	public constructor(that: AsnMgmtGetSTUNandTURNConsumerConfigResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSTUNandTURNConsumerConfigResult {
		return new AsnMgmtGetSTUNandTURNConsumerConfigResult({
			config: new ENetUC_Common_SIPCTI.AsnConfigSTUNandTURNList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"config"
		];
		return p;
	}

	public static type = "AsnMgmtGetSTUNandTURNConsumerConfigResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSTUNandTURNConsumerConfigResult",
			...params,
			value: [
				ENetUC_Common_SIPCTI.AsnConfigSTUNandTURNList.getASN1Schema({ name: "config" }),
				new asn1ts.Extension()
			]
		});
	}

	public config!: ENetUC_Common_SIPCTI.AsnConfigSTUNandTURNList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDBManSettings {
	public constructor(that: AsnMgmtDBManSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDBManSettings {
		return new AsnMgmtDBManSettings({
			iNetDBEnabled: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iNetDBEnabled"
		];
		return p;
	}

	public static type = "AsnMgmtDBManSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDBManSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iNetDBEnabled" }),
				new asn1ts.Extension()
			]
		});
	}

	public iNetDBEnabled!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnXMPPSettings {
	public constructor(that: AsnXMPPSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnXMPPSettings {
		return new AsnXMPPSettings({
			iXMPPEnabled: 0,
			iS2SPort: 0,
			u8sS2SBindAddress: "",
			iProxyEnabled: 0,
			iProxyPort: 0,
			u8sProxyAddress: "",
			u8sProxyPwdEncrypted: "",
			u8sintpairlistDomainsAllow: new ENetUC_Common.AsnStringIntegerPairList(),
			u8sCertificateHash: "",
			iEncryptionLevel: 0,
			u8sintpairlistDomainEncryptionLevel: new ENetUC_Common.AsnStringIntegerPairList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iXMPPEnabled",
			"iS2SPort",
			"u8sS2SBindAddress",
			"iProxyEnabled",
			"iProxyPort",
			"u8sProxyAddress",
			"u8sProxyPwdEncrypted",
			"u8sintpairlistDomainsAllow",
			"u8sCertificateHash",
			"iEncryptionLevel",
			"u8sintpairlistDomainEncryptionLevel"
		];
		return p;
	}

	public static type = "AsnXMPPSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnXMPPSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iXMPPEnabled" }),
				new asn1ts.Integer({ name: "iS2SPort" }),
				new asn1ts.Utf8String({ name: "u8sS2SBindAddress" }),
				new asn1ts.Integer({ name: "iProxyEnabled" }),
				new asn1ts.Integer({ name: "iProxyPort" }),
				new asn1ts.Utf8String({ name: "u8sProxyAddress" }),
				new asn1ts.Utf8String({ name: "u8sProxyPwdEncrypted" }),
				ENetUC_Common.AsnStringIntegerPairList.getASN1Schema({ name: "u8sintpairlistDomainsAllow" }),
				new asn1ts.Utf8String({ name: "u8sCertificateHash" }),
				new asn1ts.Integer({ name: "iEncryptionLevel" }),
				ENetUC_Common.AsnStringIntegerPairList.getASN1Schema({ name: "u8sintpairlistDomainEncryptionLevel" }),
				new asn1ts.Extension()
			]
		});
	}

	/** general */
	public iXMPPEnabled!: number;
	/** s2s port */
	public iS2SPort!: number;
	/** s2s bind address */
	public u8sS2SBindAddress!: string;
	/** proxy */
	public iProxyEnabled!: number;
	/** proxy port */
	public iProxyPort!: number;
	/** proxy address */
	public u8sProxyAddress!: string;
	/** proxy password */
	public u8sProxyPwdEncrypted!: string;
	/** Domain allow (whitelist) */
	public u8sintpairlistDomainsAllow!: ENetUC_Common.AsnStringIntegerPairList;
	/** TLS certificate hash */
	public u8sCertificateHash!: string;
	/** global tls level */
	public iEncryptionLevel!: number;
	/** per host tls level */
	public u8sintpairlistDomainEncryptionLevel!: ENetUC_Common.AsnStringIntegerPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnListenInterfaceDescription {
	public constructor(that: AsnListenInterfaceDescription) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnListenInterfaceDescription {
		return new AsnListenInterfaceDescription({
			bEnabled: false,
			u8sIPAddress: "",
			iPort: 0,
			iProtocol: 0,
			iService: 0,
			u8sGUID: "",
			iStaticRouteRefCount: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bEnabled",
			"u8sIPAddress",
			"iPort",
			"iProtocol",
			"iService",
			"u8sGUID",
			"iStaticRouteRefCount"
		];
		return p;
	}

	public static type = "AsnListenInterfaceDescription";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnListenInterfaceDescription",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bEnabled" }),
				new asn1ts.Utf8String({ name: "u8sIPAddress" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Integer({ name: "iProtocol" }),
				new asn1ts.Integer({ name: "iService" }),
				new asn1ts.Utf8String({ name: "u8sGUID" }),
				new asn1ts.Integer({ name: "iStaticRouteRefCount" }),
				new asn1ts.Extension()
			]
		});
	}

	public bEnabled!: boolean;
	public u8sIPAddress!: string;
	public iPort!: number;
	public iProtocol!: number;
	public iService!: number;
	public u8sGUID!: string;
	public iStaticRouteRefCount!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSIPFEDPubIPAdrResult {
	public constructor(that: AsnMgmtGetSIPFEDPubIPAdrResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSIPFEDPubIPAdrResult {
		return new AsnMgmtGetSIPFEDPubIPAdrResult({
			u8sPublicIPAddress: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sPublicIPAddress"
		];
		return p;
	}

	public static type = "AsnMgmtGetSIPFEDPubIPAdrResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSIPFEDPubIPAdrResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sPublicIPAddress" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sPublicIPAddress!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtStartSipFedXmppDiagnosticsArgument {
	public constructor(that: AsnMgmtStartSipFedXmppDiagnosticsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtStartSipFedXmppDiagnosticsArgument {
		return new AsnMgmtStartSipFedXmppDiagnosticsArgument({
			u8slistCommands: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistCommands"
		];
		return p;
	}

	public static type = "AsnMgmtStartSipFedXmppDiagnosticsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtStartSipFedXmppDiagnosticsArgument",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistCommands" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistCommands!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSIPFEDSrvStateResult {
	public constructor(that: AsnMgmtGetSIPFEDSrvStateResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSIPFEDSrvStateResult {
		return new AsnMgmtGetSIPFEDSrvStateResult({
			u8sServerState: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sServerState"
		];
		return p;
	}

	public static type = "AsnMgmtGetSIPFEDSrvStateResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSIPFEDSrvStateResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sServerState" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sServerState!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSIPFEDNetStateResult {
	public constructor(that: AsnMgmtGetSIPFEDNetStateResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSIPFEDNetStateResult {
		return new AsnMgmtGetSIPFEDNetStateResult({
			u8slistNetStates: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistNetStates"
		];
		return p;
	}

	public static type = "AsnMgmtGetSIPFEDNetStateResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSIPFEDNetStateResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistNetStates" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistNetStates!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnSIPGatewaySettingsRegisteredUser {
	public constructor(that: AsnSIPGatewaySettingsRegisteredUser) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnSIPGatewaySettingsRegisteredUser {
		return new AsnSIPGatewaySettingsRegisteredUser({
			u8sUserName: "",
			u8sListenUserName: "",
			u8sDisplayName: "",
			u8sAuthUserName: "",
			u8sAuthPassword: "",
			u8sManualNumber: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sUserName",
			"u8sListenUserName",
			"u8sDisplayName",
			"u8sAuthUserName",
			"u8sAuthPassword",
			"u8sManualNumber"
		];
		if (bIncludeOptionals)
			p.push("bMainTrunkUser");
		return p;
	}

	public static type = "AsnSIPGatewaySettingsRegisteredUser";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnSIPGatewaySettingsRegisteredUser",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sUserName" }),
				new asn1ts.Utf8String({ name: "u8sListenUserName" }),
				new asn1ts.Utf8String({ name: "u8sDisplayName" }),
				new asn1ts.Utf8String({ name: "u8sAuthUserName" }),
				new asn1ts.Utf8String({ name: "u8sAuthPassword" }),
				new asn1ts.Utf8String({ name: "u8sManualNumber" }),
				new asn1ts.Boolean({ name: "bMainTrunkUser", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** I.d.R. die Leitungsnummer. Wird als UserPart in der SIP-Adresse verwendet. */
	public u8sUserName!: string;
	/** Scheint überall im Code ein \"**\" zu sein. Wird das wirklich benötigt? */
	public u8sListenUserName!: string;
	/** Anzeigename (Benutzername) -&gt; das was dann typischerweise im Telefondisplay angezeigt wird. */
	public u8sDisplayName!: string;
	/** Entspricht normalerweise der Leitungsnummer. Damit wird sich angemeldet. */
	public u8sAuthUserName!: string;
	/** Passwort zum Anmelden. */
	public u8sAuthPassword!: string;
	/** um die rufnummer bis zum CreateLine durchzuschleifen. Ist bei manchen Anlagen nicht der UserName. */
	public u8sManualNumber!: string;
	/** PROCALL-2289: SIP-Trunk flag for the User that holds the Register, optional wegen kompatibilitaet */
	public bMainTrunkUser?: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetSIPGatewaySettingsV2Result {
	public constructor(that?: AsnMgmtSetSIPGatewaySettingsV2Result) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetSIPGatewaySettingsV2Result {
		return new AsnMgmtSetSIPGatewaySettingsV2Result();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtSetSIPGatewaySettingsV2Result";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetSIPGatewaySettingsV2Result",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnCallRecorderSettings {
	public constructor(that: AsnCallRecorderSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnCallRecorderSettings {
		return new AsnCallRecorderSettings({
			iEnabled: 0,
			iUseAudioCompression: 0,
			iMaxConn: 0,
			u8sMSNList: "",
			u8sLocationID: "",
			iDoNOTValidateCalledMSN: 0,
			u8sEncoderPath: "",
			u8sEncoderParams: "",
			u8sEncoderOutSuffix: "",
			u8sManagedMailbox: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iEnabled",
			"iUseAudioCompression",
			"iMaxConn",
			"u8sMSNList",
			"u8sLocationID",
			"iDoNOTValidateCalledMSN",
			"u8sEncoderPath",
			"u8sEncoderParams",
			"u8sEncoderOutSuffix",
			"u8sManagedMailbox"
		];
		return p;
	}

	public static type = "AsnCallRecorderSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnCallRecorderSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iEnabled" }),
				new asn1ts.Integer({ name: "iUseAudioCompression" }),
				new asn1ts.Integer({ name: "iMaxConn" }),
				new asn1ts.Utf8String({ name: "u8sMSNList" }),
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Integer({ name: "iDoNOTValidateCalledMSN" }),
				new asn1ts.Utf8String({ name: "u8sEncoderPath" }),
				new asn1ts.Utf8String({ name: "u8sEncoderParams" }),
				new asn1ts.Utf8String({ name: "u8sEncoderOutSuffix" }),
				new asn1ts.Utf8String({ name: "u8sManagedMailbox" }),
				new asn1ts.Extension()
			]
		});
	}

	public iEnabled!: number;
	public iUseAudioCompression!: number;
	public iMaxConn!: number;
	public u8sMSNList!: string;
	public u8sLocationID!: string;
	public iDoNOTValidateCalledMSN!: number;
	public u8sEncoderPath!: string;
	public u8sEncoderParams!: string;
	public u8sEncoderOutSuffix!: string;
	public u8sManagedMailbox!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtLoginArgument {
	public constructor(that: AsnMgmtLoginArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLoginArgument {
		return new AsnMgmtLoginArgument({
			u8sUsername: "",
			u8sPassword: "",
			iVersion: 0,
			iDuplicate: 0,
			iSIPAVLines: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sUsername",
			"u8sPassword",
			"iVersion",
			"iDuplicate",
			"iSIPAVLines"
		];
		return p;
	}

	public static type = "AsnMgmtLoginArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLoginArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sUsername" }),
				new asn1ts.Utf8String({ name: "u8sPassword" }),
				new asn1ts.Integer({ name: "iVersion" }),
				new asn1ts.Integer({ name: "iDuplicate" }),
				new asn1ts.Integer({ name: "iSIPAVLines" }),
				new asn1ts.Extension()
			]
		});
	}

	/** user login daten */
	public u8sUsername!: string;
	public u8sPassword!: string;
	public iVersion!: number;
	public iDuplicate!: number;
	public iSIPAVLines!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtLoginResult {
	public constructor(that: AsnMgmtLoginResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLoginResult {
		return new AsnMgmtLoginResult({
			iOpenState: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iOpenState"
		];
		return p;
	}

	public static type = "AsnMgmtLoginResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLoginResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iOpenState" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnCtiLineOpenStatus) */
	public iOpenState!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtChangeLoginArgument {
	public constructor(that: AsnMgmtChangeLoginArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtChangeLoginArgument {
		return new AsnMgmtChangeLoginArgument({
			u8sNewUserName: "",
			u8sNewPasswd: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sNewUserName",
			"u8sNewPasswd"
		];
		return p;
	}

	public static type = "AsnMgmtChangeLoginArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtChangeLoginArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sNewUserName" }),
				new asn1ts.Utf8String({ name: "u8sNewPasswd" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sNewUserName!: string;
	public u8sNewPasswd!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Server Status\/Statistic to Admin\/ServerMonitor
 * Licenses\/ActiveCalls\/Interfaces
 */
export class AsnMgmtServerStatistics4Admin {
	public constructor(that: AsnMgmtServerStatistics4Admin) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtServerStatistics4Admin {
		return new AsnMgmtServerStatistics4Admin({
			u8sService: "",
			u8sServiceUIName: "",
			iServiceState: 0,
			u8sActive: "",
			u8sCount: "",
			u8sLicenses: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sService",
			"u8sServiceUIName",
			"iServiceState",
			"u8sActive",
			"u8sCount",
			"u8sLicenses"
		];
		return p;
	}

	public static type = "AsnMgmtServerStatistics4Admin";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtServerStatistics4Admin",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sService" }),
				new asn1ts.Utf8String({ name: "u8sServiceUIName" }),
				new asn1ts.Integer({ name: "iServiceState" }),
				new asn1ts.Utf8String({ name: "u8sActive" }),
				new asn1ts.Utf8String({ name: "u8sCount" }),
				new asn1ts.Utf8String({ name: "u8sLicenses" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Statistics Categories (STATCAT_PROCALLUSERS, ...) */
	public u8sService!: string;
	/** Service UI Name */
	public u8sServiceUIName!: string;
	/** Stat (ESERVERSTATSTATE_UNKNOWN, ...) */
	public iServiceState!: number;
	/** active\/consumed\/used Licenses\/Calls\/Interfaces */
	public u8sActive!: string;
	/** Diverse of Interfaces Status\/IP\/Port (eg 'Port:7222', 'active') */
	public u8sCount!: string;
	/** Number of available licenses */
	public u8sLicenses!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSaveSettingsArgument {
	public constructor(that: AsnMgmtSaveSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSaveSettingsArgument {
		return new AsnMgmtSaveSettingsArgument({
			iSaveFlags: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iSaveFlags"
		];
		return p;
	}

	public static type = "AsnMgmtSaveSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSaveSettingsArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iSaveFlags" }),
				new asn1ts.Extension()
			]
		});
	}

	public iSaveFlags!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtStartTLSArgument {
	public constructor(that?: AsnMgmtStartTLSArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtStartTLSArgument {
		return new AsnMgmtStartTLSArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtStartTLSArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtStartTLSArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtStartTLSResult {
	public constructor(that?: AsnMgmtStartTLSResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtStartTLSResult {
		return new AsnMgmtStartTLSResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtStartTLSResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtStartTLSResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetServerVersionArgument {
	public constructor(that?: AsnMgmtGetServerVersionArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetServerVersionArgument {
		return new AsnMgmtGetServerVersionArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetServerVersionArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetServerVersionArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetServerVersionResult {
	public constructor(that: AsnMgmtGetServerVersionResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetServerVersionResult {
		return new AsnMgmtGetServerVersionResult({
			u8sInterfaceVersion: "",
			u8sBuildVersion: "",
			u8sOSVersionString: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sInterfaceVersion",
			"u8sBuildVersion",
			"u8sOSVersionString"
		];
		return p;
	}

	public static type = "AsnMgmtGetServerVersionResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetServerVersionResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sInterfaceVersion" }),
				new asn1ts.Utf8String({ name: "u8sBuildVersion" }),
				new asn1ts.Utf8String({ name: "u8sOSVersionString" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sInterfaceVersion!: string;
	public u8sBuildVersion!: string;
	public u8sOSVersionString!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetCtiServerTypeArgument {
	public constructor(that?: AsnMgmtGetCtiServerTypeArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetCtiServerTypeArgument {
		return new AsnMgmtGetCtiServerTypeArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetCtiServerTypeArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetCtiServerTypeArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetIPInterfaceListResult {
	public constructor(that: AsnMgmtGetIPInterfaceListResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetIPInterfaceListResult {
		return new AsnMgmtGetIPInterfaceListResult({
			u8slistIPInterfaces: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistIPInterfaces"
		];
		return p;
	}

	public static type = "AsnMgmtGetIPInterfaceListResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetIPInterfaceListResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistIPInterfaces" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistIPInterfaces!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSendPushCheckResult {
	public constructor(that: AsnMgmtSendPushCheckResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSendPushCheckResult {
		return new AsnMgmtSendPushCheckResult({
			u8sErrorString: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sErrorString"
		];
		return p;
	}

	public static type = "AsnMgmtSendPushCheckResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSendPushCheckResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sErrorString" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sErrorString!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetUCCheckServerCookieArgument {
	public constructor(that: AsnMgmtSetUCCheckServerCookieArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetUCCheckServerCookieArgument {
		return new AsnMgmtSetUCCheckServerCookieArgument({
			u8sCookie: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sCookie"
		];
		return p;
	}

	public static type = "AsnMgmtSetUCCheckServerCookieArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetUCCheckServerCookieArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sCookie" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sCookie!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtNotificationSettingsExclusions {
	public constructor(that: AsnMgmtNotificationSettingsExclusions) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtNotificationSettingsExclusions {
		return new AsnMgmtNotificationSettingsExclusions({
			bNotForInternalCalls: false,
			bNotForCallsWithoutNumber: false,
			bNotForCallsWithoutContactDetails: false,
			bNotForRecurrentCallsWhileOffline: false,
			bNotForRecurrentCallsForTimeSpan: false,
			iNotForRecurrentCallsTimeSpan: 0,
			bNotForShortRingingCall: false,
			iNotForShortRingingCallTimeSpan: 0,
			bNotForLongRingingCall: false,
			iNotForLongRingingCallTimeSpan: 0,
			bNotForCallsFromSpecificExtensions: false,
			u8sNotForCallsFromSpecificExtensions: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bNotForInternalCalls",
			"bNotForCallsWithoutNumber",
			"bNotForCallsWithoutContactDetails",
			"bNotForRecurrentCallsWhileOffline",
			"bNotForRecurrentCallsForTimeSpan",
			"iNotForRecurrentCallsTimeSpan",
			"bNotForShortRingingCall",
			"iNotForShortRingingCallTimeSpan",
			"bNotForLongRingingCall",
			"iNotForLongRingingCallTimeSpan",
			"bNotForCallsFromSpecificExtensions",
			"u8sNotForCallsFromSpecificExtensions"
		];
		return p;
	}

	public static type = "AsnMgmtNotificationSettingsExclusions";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtNotificationSettingsExclusions",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bNotForInternalCalls" }),
				new asn1ts.Boolean({ name: "bNotForCallsWithoutNumber" }),
				new asn1ts.Boolean({ name: "bNotForCallsWithoutContactDetails" }),
				new asn1ts.Boolean({ name: "bNotForRecurrentCallsWhileOffline" }),
				new asn1ts.Boolean({ name: "bNotForRecurrentCallsForTimeSpan" }),
				new asn1ts.Integer({ name: "iNotForRecurrentCallsTimeSpan" }),
				new asn1ts.Boolean({ name: "bNotForShortRingingCall" }),
				new asn1ts.Integer({ name: "iNotForShortRingingCallTimeSpan" }),
				new asn1ts.Boolean({ name: "bNotForLongRingingCall" }),
				new asn1ts.Integer({ name: "iNotForLongRingingCallTimeSpan" }),
				new asn1ts.Boolean({ name: "bNotForCallsFromSpecificExtensions" }),
				new asn1ts.Utf8String({ name: "u8sNotForCallsFromSpecificExtensions" }),
				new asn1ts.Extension()
			]
		});
	}

	public bNotForInternalCalls!: boolean;
	public bNotForCallsWithoutNumber!: boolean;
	public bNotForCallsWithoutContactDetails!: boolean;
	public bNotForRecurrentCallsWhileOffline!: boolean;
	public bNotForRecurrentCallsForTimeSpan!: boolean;
	public iNotForRecurrentCallsTimeSpan!: number;
	public bNotForShortRingingCall!: boolean;
	public iNotForShortRingingCallTimeSpan!: number;
	public bNotForLongRingingCall!: boolean;
	public iNotForLongRingingCallTimeSpan!: number;
	public bNotForCallsFromSpecificExtensions!: boolean;
	public u8sNotForCallsFromSpecificExtensions!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtFetchMetaDNsArgument {
	public constructor(that: AsnMgmtFetchMetaDNsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtFetchMetaDNsArgument {
		return new AsnMgmtFetchMetaDNsArgument({
			u8sMetaServer: "",
			iPort: 0,
			iForceSSL: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sMetaServer",
			"iPort",
			"iForceSSL"
		];
		return p;
	}

	public static type = "AsnMgmtFetchMetaDNsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtFetchMetaDNsArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sMetaServer" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Integer({ name: "iForceSSL" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sMetaServer!: string;
	public iPort!: number;
	public iForceSSL!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtFetchMetaDNsResult {
	public constructor(that: AsnMgmtFetchMetaDNsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtFetchMetaDNsResult {
		return new AsnMgmtFetchMetaDNsResult({
			u8slistDnsList: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistDnsList"
		];
		return p;
	}

	public static type = "AsnMgmtFetchMetaDNsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtFetchMetaDNsResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistDnsList" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistDnsList!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnSSLCertificateDetails {
	public constructor(that: AsnSSLCertificateDetails) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnSSLCertificateDetails {
		return new AsnSSLCertificateDetails({
			u8sCertHash: "",
			u8sIssuedTo: "",
			u8sIssuer: "",
			timValidFrom: new Date(),
			timValidTo: new Date(),
			u8sListAlternateNames: new ENetUC_Common.UTF8StringList(),
			bPrivateKeyAvail: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sCertHash",
			"u8sIssuedTo",
			"u8sIssuer",
			"timValidFrom",
			"timValidTo",
			"u8sListAlternateNames",
			"bPrivateKeyAvail"
		];
		return p;
	}

	public static type = "AsnSSLCertificateDetails";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnSSLCertificateDetails",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sCertHash" }),
				new asn1ts.Utf8String({ name: "u8sIssuedTo" }),
				new asn1ts.Utf8String({ name: "u8sIssuer" }),
				new asn1ts.Real({ name: "timValidFrom" }),
				new asn1ts.Real({ name: "timValidTo" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8sListAlternateNames" }),
				new asn1ts.Boolean({ name: "bPrivateKeyAvail" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sCertHash!: string;
	public u8sIssuedTo!: string;
	public u8sIssuer!: string;
	public timValidFrom!: Date;
	public timValidTo!: Date;
	public u8sListAlternateNames!: ENetUC_Common.UTF8StringList;
	public bPrivateKeyAvail!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSoftwareProfilesResult {
	public constructor(that: AsnMgmtGetSoftwareProfilesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSoftwareProfilesResult {
		return new AsnMgmtGetSoftwareProfilesResult({
			u8slistSoftwareProfilesAsXML: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistSoftwareProfilesAsXML"
		];
		return p;
	}

	public static type = "AsnMgmtGetSoftwareProfilesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSoftwareProfilesResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistSoftwareProfilesAsXML" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistSoftwareProfilesAsXML!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetSoftwareProfilesArgument {
	public constructor(that: AsnMgmtSetSoftwareProfilesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetSoftwareProfilesArgument {
		return new AsnMgmtSetSoftwareProfilesArgument({
			u8slistSoftwareProfilesAsXML: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistSoftwareProfilesAsXML"
		];
		return p;
	}

	public static type = "AsnMgmtSetSoftwareProfilesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetSoftwareProfilesArgument",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistSoftwareProfilesAsXML" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistSoftwareProfilesAsXML!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetGlobalGroupingAttributesResult {
	public constructor(that: AsnMgmtGetGlobalGroupingAttributesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetGlobalGroupingAttributesResult {
		return new AsnMgmtGetGlobalGroupingAttributesResult({
			u8sGroupingAttributeSetGlobal: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sGroupingAttributeSetGlobal"
		];
		return p;
	}

	public static type = "AsnMgmtGetGlobalGroupingAttributesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetGlobalGroupingAttributesResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sGroupingAttributeSetGlobal" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sGroupingAttributeSetGlobal!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetGlobalGroupingAttributesArgument {
	public constructor(that: AsnMgmtSetGlobalGroupingAttributesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetGlobalGroupingAttributesArgument {
		return new AsnMgmtSetGlobalGroupingAttributesArgument({
			u8sGroupingAttributeSetGlobal: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sGroupingAttributeSetGlobal"
		];
		return p;
	}

	public static type = "AsnMgmtSetGlobalGroupingAttributesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetGlobalGroupingAttributesArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sGroupingAttributeSetGlobal" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sGroupingAttributeSetGlobal!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUserXmlClientContentArgument {
	public constructor(that: AsnMgmtGetUserXmlClientContentArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserXmlClientContentArgument {
		return new AsnMgmtGetUserXmlClientContentArgument({
			u8sUserID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sUserID"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserXmlClientContentArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserXmlClientContentArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sUserID" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sUserID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUserXmlClientContentResult {
	public constructor(that: AsnMgmtGetUserXmlClientContentResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserXmlClientContentResult {
		return new AsnMgmtGetUserXmlClientContentResult({
			u8sClientContentAsXML: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sClientContentAsXML"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserXmlClientContentResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserXmlClientContentResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sClientContentAsXML" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sClientContentAsXML!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetUserXmlClientContentArgument {
	public constructor(that: AsnMgmtSetUserXmlClientContentArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetUserXmlClientContentArgument {
		return new AsnMgmtSetUserXmlClientContentArgument({
			u8sUserID: "",
			u8sClientContentAsXML: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sUserID",
			"u8sClientContentAsXML"
		];
		return p;
	}

	public static type = "AsnMgmtSetUserXmlClientContentArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetUserXmlClientContentArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sUserID" }),
				new asn1ts.Utf8String({ name: "u8sClientContentAsXML" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sUserID!: string;
	public u8sClientContentAsXML!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUserDefinedCustomFieldsResult {
	public constructor(that: AsnMgmtGetUserDefinedCustomFieldsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserDefinedCustomFieldsResult {
		return new AsnMgmtGetUserDefinedCustomFieldsResult({
			mapCustomFields: new ENetUC_Common.AsnStringPairList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"mapCustomFields"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserDefinedCustomFieldsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserDefinedCustomFieldsResult",
			...params,
			value: [
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "mapCustomFields" }),
				new asn1ts.Extension()
			]
		});
	}

	public mapCustomFields!: ENetUC_Common.AsnStringPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetUserDefinedCustomFieldsArgument {
	public constructor(that: AsnMgmtSetUserDefinedCustomFieldsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetUserDefinedCustomFieldsArgument {
		return new AsnMgmtSetUserDefinedCustomFieldsArgument({
			mapCustomFields: new ENetUC_Common.AsnStringPairList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"mapCustomFields"
		];
		return p;
	}

	public static type = "AsnMgmtSetUserDefinedCustomFieldsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetUserDefinedCustomFieldsArgument",
			...params,
			value: [
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "mapCustomFields" }),
				new asn1ts.Extension()
			]
		});
	}

	public mapCustomFields!: ENetUC_Common.AsnStringPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSIPFEDXmppDiagnosticResult {
	public constructor(that: AsnMgmtGetSIPFEDXmppDiagnosticResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSIPFEDXmppDiagnosticResult {
		return new AsnMgmtGetSIPFEDXmppDiagnosticResult({
			u8slistResults: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistResults"
		];
		return p;
	}

	public static type = "AsnMgmtGetSIPFEDXmppDiagnosticResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSIPFEDXmppDiagnosticResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistResults" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistResults!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtCtiForwardEntry {
	public constructor(that: AsnMgmtCtiForwardEntry) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtCtiForwardEntry {
		return new AsnMgmtCtiForwardEntry({
			iInternalID: 0,
			iForwardController: 0,
			iForwardMode: 0,
			iBackEndSpecific: 0,
			iNoAnswerTime: 0,
			u8sDestinationSC: "",
			u8slistCallerIDs: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iInternalID",
			"iForwardController",
			"iForwardMode",
			"iBackEndSpecific",
			"iNoAnswerTime",
			"u8sDestinationSC",
			"u8slistCallerIDs"
		];
		return p;
	}

	public static type = "AsnMgmtCtiForwardEntry";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtCtiForwardEntry",
			...params,
			value: [
				new asn1ts.Integer({ name: "iInternalID" }),
				new asn1ts.Integer({ name: "iForwardController" }),
				new asn1ts.Integer({ name: "iForwardMode" }),
				new asn1ts.Integer({ name: "iBackEndSpecific" }),
				new asn1ts.Integer({ name: "iNoAnswerTime" }),
				new asn1ts.Utf8String({ name: "u8sDestinationSC" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistCallerIDs" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Identifier dieses Eintrags in der Liste */
	public iInternalID!: number;
	/** Ist es eine Rufumleitung in der PBX oder im TapiServer */
	/** (see AsnMgmtForwardControllerEnum) */
	public iForwardController!: number;
	/** Forward Mode */
	/** (see AsnMgmtForwardMode) */
	public iForwardMode!: number;
	/**
	 * Backend specific Forwarding (used if m_dwForwardMode = ICTI_BACKENDSPECIFIC)
	 * Bei Tapi enthält das die eLINEFORWARDMODE_ konstanten
	 * (see AsnMgmtLineForwardModeEnum)
	 */
	public iBackEndSpecific!: number;
	/** Zeit (Sekunden) für Umleitung bei NoAnswer (Wenn 0 wird die default Zeit verwendet) */
	public iNoAnswerTime!: number;
	/** Destination Rufnummer */
	public u8sDestinationSC!: string;
	/** Liste der Anrufer CallerIDs (superkanonisch, lang), falls es sich um eine spezifische Umleitung handelt */
	public u8slistCallerIDs!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineForwardingArgument {
	public constructor(that: AsnMgmtGetLineForwardingArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineForwardingArgument {
		return new AsnMgmtGetLineForwardingArgument({
			iFWController: 0,
			u8sLineID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iFWController",
			"u8sLineID"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineForwardingArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineForwardingArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iFWController" }),
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Extension()
			]
		});
	}

	public iFWController!: number;
	public u8sLineID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtAvailableLanguage {
	public constructor(that: AsnMgmtAvailableLanguage) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAvailableLanguage {
		return new AsnMgmtAvailableLanguage({
			iLanguage: 0,
			mapTranslatedStrings: new ENetUC_Common.AsnStringIntegerPairList(),
			mapTranslatedStringToString: new ENetUC_Common.AsnStringPairList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iLanguage",
			"mapTranslatedStrings",
			"mapTranslatedStringToString"
		];
		return p;
	}

	public static type = "AsnMgmtAvailableLanguage";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtAvailableLanguage",
			...params,
			value: [
				new asn1ts.Integer({ name: "iLanguage" }),
				ENetUC_Common.AsnStringIntegerPairList.getASN1Schema({ name: "mapTranslatedStrings" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "mapTranslatedStringToString" }),
				new asn1ts.Extension()
			]
		});
	}

	public iLanguage!: number;
	public mapTranslatedStrings!: ENetUC_Common.AsnStringIntegerPairList;
	public mapTranslatedStringToString!: ENetUC_Common.AsnStringPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Database Upgrade
 */
export class AsnMgmtUpgradeProgressArgument {
	public constructor(that: AsnMgmtUpgradeProgressArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUpgradeProgressArgument {
		return new AsnMgmtUpgradeProgressArgument({
			iProgressMax: 0,
			iProgressCur: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iProgressMax",
			"iProgressCur"
		];
		return p;
	}

	public static type = "AsnMgmtUpgradeProgressArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUpgradeProgressArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iProgressMax" }),
				new asn1ts.Integer({ name: "iProgressCur" }),
				new asn1ts.Extension()
			]
		});
	}

	public iProgressMax!: number;
	public iProgressCur!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUpgradeStartArgument {
	public constructor(that?: AsnMgmtUpgradeStartArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUpgradeStartArgument {
		return new AsnMgmtUpgradeStartArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtUpgradeStartArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUpgradeStartArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUpgradeStartResult {
	public constructor(that: AsnMgmtUpgradeStartResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUpgradeStartResult {
		return new AsnMgmtUpgradeStartResult({
			iResult: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iResult"
		];
		return p;
	}

	public static type = "AsnMgmtUpgradeStartResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUpgradeStartResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iResult" }),
				new asn1ts.Extension()
			]
		});
	}

	public iResult!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Push Service Device Properties
 * This struct contains the properties of a device that has an active Push Service registration.
 */
export class AsnMgmtPushServiceDeviceProps {
	public constructor(that: AsnMgmtPushServiceDeviceProps) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtPushServiceDeviceProps {
		return new AsnMgmtPushServiceDeviceProps({
			u8sDeviceID: "",
			u8sDeviceName: "",
			u8sContactID: "",
			u8sPushID: "",
			u8sPushChannel: "",
			iOnlineState: 0,
			timlastRegisterTime: new Date(),
			iMessageTypes: 0,
			iEncryptionMode: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sDeviceID",
			"u8sDeviceName",
			"u8sContactID",
			"u8sPushID",
			"u8sPushChannel",
			"iOnlineState",
			"timlastRegisterTime",
			"iMessageTypes",
			"iEncryptionMode"
		];
		return p;
	}

	public static type = "AsnMgmtPushServiceDeviceProps";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtPushServiceDeviceProps",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sDeviceID" }),
				new asn1ts.Utf8String({ name: "u8sDeviceName" }),
				new asn1ts.Utf8String({ name: "u8sContactID" }),
				new asn1ts.Utf8String({ name: "u8sPushID" }),
				new asn1ts.Utf8String({ name: "u8sPushChannel" }),
				new asn1ts.Integer({ name: "iOnlineState" }),
				new asn1ts.Real({ name: "timlastRegisterTime" }),
				new asn1ts.Integer({ name: "iMessageTypes" }),
				new asn1ts.Integer({ name: "iEncryptionMode" }),
				new asn1ts.Extension()
			]
		});
	}

	/** DeviceID (vom Client generiert muss eindeutig sein) */
	public u8sDeviceID!: string;
	/** DeviceName (vom Client übermittelt, Freitext - Normalerweise Gerätename) */
	public u8sDeviceName!: string;
	/** UserName (Login Name) */
	public u8sContactID!: string;
	/** Push Device Token */
	public u8sPushID!: string;
	/** Push Channel (z.b. ios.estos.procall.6) */
	public u8sPushChannel!: string;
	/** Ist dieses Device gerade online? */
	public iOnlineState!: number;
	/** Letzter Register Aufruf (windows utc) */
	public timlastRegisterTime!: Date;
	/**
	 * Für welche Arten von Messages ist dieses Device angemeldet
	 * Dieser Member wird normalerweise über SetNewMessageTypes gesetzt, dann werden die Handler auch aktualisiert
	 */
	public iMessageTypes!: number;
	/** Encryption Mode for push messages */
	public iEncryptionMode!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetPushServiceDevicesArgument {
	public constructor(that?: AsnMgmtGetPushServiceDevicesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetPushServiceDevicesArgument {
		return new AsnMgmtGetPushServiceDevicesArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetPushServiceDevicesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetPushServiceDevicesArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetPushServiceDevicesResult {
	public constructor(that: AsnMgmtGetPushServiceDevicesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetPushServiceDevicesResult {
		return new AsnMgmtGetPushServiceDevicesResult({
			u8sCrossRefID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sCrossRefID"
		];
		return p;
	}

	public static type = "AsnMgmtGetPushServiceDevicesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetPushServiceDevicesResult",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sCrossRefID" }),
				new asn1ts.Extension()
			]
		});
	}

	/** CrossrefID for the Events that contain the requested data. */
	public u8sCrossRefID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDeletePushServiceDeviceArgument {
	public constructor(that: AsnMgmtDeletePushServiceDeviceArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDeletePushServiceDeviceArgument {
		return new AsnMgmtDeletePushServiceDeviceArgument({
			u8sDeviceID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sDeviceID"
		];
		return p;
	}

	public static type = "AsnMgmtDeletePushServiceDeviceArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDeletePushServiceDeviceArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sDeviceID" }),
				new asn1ts.Extension()
			]
		});
	}

	/** DeviceID of the Push Receiver */
	public u8sDeviceID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDeletePushServiceDeviceResult {
	public constructor(that?: AsnMgmtDeletePushServiceDeviceResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDeletePushServiceDeviceResult {
		return new AsnMgmtDeletePushServiceDeviceResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtDeletePushServiceDeviceResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDeletePushServiceDeviceResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtPhoneJournalSettings {
	public constructor(that: AsnMgmtPhoneJournalSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtPhoneJournalSettings {
		return new AsnMgmtPhoneJournalSettings({
			iPrivateCallOptions: 0,
			iUseOfflineJournal: 0,
			iOfflineDeleteOldEntries: 0,
			iOfflineDaysNoDelete: 0,
			bDeleteInternalJournalEntries: false,
			iDeleteInternalJournalEntriesAfterDays: 0,
			bDeleteExternalJournalEntries: false,
			iDeleteExternalJournalEntriesAfterDays: 0,
			bDeleteNoteJournalEntries: false,
			iDeleteNoteJournalEntriesAfterDays: 0,
			iUnansweredCallJournalOption: 0,
			iAnsweredRedirectedCallJournalOption: 0,
			bAutoMarkReadGroupCallsOnCallback: false,
			iHandlingMode: 0,
			iArchiveJournalEntriesAfterDays: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iPrivateCallOptions",
			"iUseOfflineJournal",
			"iOfflineDeleteOldEntries",
			"iOfflineDaysNoDelete",
			"bDeleteInternalJournalEntries",
			"iDeleteInternalJournalEntriesAfterDays",
			"bDeleteExternalJournalEntries",
			"iDeleteExternalJournalEntriesAfterDays",
			"bDeleteNoteJournalEntries",
			"iDeleteNoteJournalEntriesAfterDays",
			"iUnansweredCallJournalOption",
			"iAnsweredRedirectedCallJournalOption",
			"bAutoMarkReadGroupCallsOnCallback",
			"iHandlingMode",
			"iArchiveJournalEntriesAfterDays"
		];
		return p;
	}

	public static type = "AsnMgmtPhoneJournalSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtPhoneJournalSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iPrivateCallOptions" }),
				new asn1ts.Integer({ name: "iUseOfflineJournal" }),
				new asn1ts.Integer({ name: "iOfflineDeleteOldEntries" }),
				new asn1ts.Integer({ name: "iOfflineDaysNoDelete" }),
				new asn1ts.Boolean({ name: "bDeleteInternalJournalEntries" }),
				new asn1ts.Integer({ name: "iDeleteInternalJournalEntriesAfterDays" }),
				new asn1ts.Boolean({ name: "bDeleteExternalJournalEntries" }),
				new asn1ts.Integer({ name: "iDeleteExternalJournalEntriesAfterDays" }),
				new asn1ts.Boolean({ name: "bDeleteNoteJournalEntries" }),
				new asn1ts.Integer({ name: "iDeleteNoteJournalEntriesAfterDays" }),
				new asn1ts.Integer({ name: "iUnansweredCallJournalOption" }),
				new asn1ts.Integer({ name: "iAnsweredRedirectedCallJournalOption" }),
				new asn1ts.Boolean({ name: "bAutoMarkReadGroupCallsOnCallback" }),
				new asn1ts.Integer({ name: "iHandlingMode" }),
				new asn1ts.Integer({ name: "iArchiveJournalEntriesAfterDays" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Optionen für PrivatGespräche */
	/** (see AsnMgmtPhoneJournalPrivateCallOptionsEnum) */
	public iPrivateCallOptions!: number;
	/** Offline Journal Verwenden 1 \/ 0 */
	public iUseOfflineJournal!: number;
	/** Werden veraltete Offline Einträge gelöscht 1 \/ 0 */
	public iOfflineDeleteOldEntries!: number;
	/** Anzahl der Tage, die im Offline Journal behalten werden */
	public iOfflineDaysNoDelete!: number;
	/** Löschen der internen Journaleinträge */
	public bDeleteInternalJournalEntries!: boolean;
	public iDeleteInternalJournalEntriesAfterDays!: number;
	/** Löschen der externen Journaleinträge */
	public bDeleteExternalJournalEntries!: boolean;
	public iDeleteExternalJournalEntriesAfterDays!: number;
	/** Löschen der Journaleinträge mit Notitz */
	public bDeleteNoteJournalEntries!: boolean;
	public iDeleteNoteJournalEntriesAfterDays!: number;
	/** (see AsnMgmtPhoneJournalUnansweredEnum) */
	public iUnansweredCallJournalOption!: number;
	/** (see AsnMgmtPhoneJournalUnansweredEnum) */
	public iAnsweredRedirectedCallJournalOption!: number;
	/**
	 * Gruppenrufe die von einem Teilnehmer der Gruppe beantwortet wurden werden für alle Teilnehmer als beantwortet maskiert
	 * Automatically mark journal entries as read, if one member of the group answered the call
	 */
	public bAutoMarkReadGroupCallsOnCallback!: boolean;
	/** Was wird mit veralteten Einträgen gemacht? */
	/** (see AsnMgmtUnansweredOptionEnum) */
	public iHandlingMode!: number;
	public iArchiveJournalEntriesAfterDays!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetPhoneJournalSettingsArgument {
	public constructor(that?: AsnMgmtGetPhoneJournalSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetPhoneJournalSettingsArgument {
		return new AsnMgmtGetPhoneJournalSettingsArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetPhoneJournalSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetPhoneJournalSettingsArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetPhoneJournalSettingsResult {
	public constructor(that?: AsnMgmtSetPhoneJournalSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetPhoneJournalSettingsResult {
		return new AsnMgmtSetPhoneJournalSettingsResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtSetPhoneJournalSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetPhoneJournalSettingsResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetGroupProfileArgument {
	public constructor(that: AsnMgmtSetGroupProfileArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetGroupProfileArgument {
		return new AsnMgmtSetGroupProfileArgument({
			iSearchFilter: 0,
			groupProfile: ENetUC_Admin.AsnGroupProfile["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iSearchFilter",
			"groupProfile"
		];
		if (bIncludeOptionals)
			p.push("oldMemberListForDeltaChangeCalculation");
		return p;
	}

	public static type = "AsnMgmtSetGroupProfileArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetGroupProfileArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iSearchFilter" }),
				ENetUC_Admin.AsnGroupProfile.getASN1Schema({ name: "groupProfile" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "oldMemberListForDeltaChangeCalculation", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnMgmtSetGroupProfileFilter) */
	public iSearchFilter!: number;
	public groupProfile!: ENetUC_Admin.AsnGroupProfile;
	public oldMemberListForDeltaChangeCalculation?: ENetUC_Common.AsnStringPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetGroupProfileResult {
	public constructor(that: AsnMgmtSetGroupProfileResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetGroupProfileResult {
		return new AsnMgmtSetGroupProfileResult({
			bSuccess: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bSuccess"
		];
		return p;
	}

	public static type = "AsnMgmtSetGroupProfileResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetGroupProfileResult",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bSuccess" }),
				new asn1ts.Extension()
			]
		});
	}

	public bSuccess!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRemoveUserProfileEventArgument {
	public constructor(that: AsnMgmtRemoveUserProfileEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRemoveUserProfileEventArgument {
		return new AsnMgmtRemoveUserProfileEventArgument({
			u8sUserName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sUserName"
		];
		return p;
	}

	public static type = "AsnMgmtRemoveUserProfileEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRemoveUserProfileEventArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sUserName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sUserName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRemoveGroupProfileEventArgument {
	public constructor(that: AsnMgmtRemoveGroupProfileEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRemoveGroupProfileEventArgument {
		return new AsnMgmtRemoveGroupProfileEventArgument({
			u8sGroupName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sGroupName"
		];
		return p;
	}

	public static type = "AsnMgmtRemoveGroupProfileEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRemoveGroupProfileEventArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sGroupName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sGroupName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtRemoveComputerProfileEventArgument {
	public constructor(that: AsnMgmtRemoveComputerProfileEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtRemoveComputerProfileEventArgument {
		return new AsnMgmtRemoveComputerProfileEventArgument({
			u8sComputerName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sComputerName"
		];
		return p;
	}

	public static type = "AsnMgmtRemoveComputerProfileEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtRemoveComputerProfileEventArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sComputerName" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sComputerName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtChatSettings {
	public constructor(that: AsnMgmtChatSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtChatSettings {
		return new AsnMgmtChatSettings({
			bDeleteChatEntries: false,
			iDeleteChatEntriesAfterDays: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bDeleteChatEntries",
			"iDeleteChatEntriesAfterDays"
		];
		return p;
	}

	public static type = "AsnMgmtChatSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtChatSettings",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bDeleteChatEntries" }),
				new asn1ts.Integer({ name: "iDeleteChatEntriesAfterDays" }),
				new asn1ts.Extension()
			]
		});
	}

	public bDeleteChatEntries!: boolean;
	public iDeleteChatEntriesAfterDays!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtMeshControllerSettings {
	public constructor(that: AsnMgmtMeshControllerSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtMeshControllerSettings {
		return new AsnMgmtMeshControllerSettings({
			bMeshEnabled: false,
			bAutoAddMeshNodes: false,
			bAutoAddUseTLS: false,
			u8sMeshID: "",
			u8sMeshPassword: "",
			u8sMeshNodeID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bMeshEnabled",
			"bAutoAddMeshNodes",
			"bAutoAddUseTLS",
			"u8sMeshID",
			"u8sMeshPassword",
			"u8sMeshNodeID"
		];
		return p;
	}

	public static type = "AsnMgmtMeshControllerSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtMeshControllerSettings",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bMeshEnabled" }),
				new asn1ts.Boolean({ name: "bAutoAddMeshNodes" }),
				new asn1ts.Boolean({ name: "bAutoAddUseTLS" }),
				new asn1ts.Utf8String({ name: "u8sMeshID" }),
				new asn1ts.Utf8String({ name: "u8sMeshPassword" }),
				new asn1ts.Utf8String({ name: "u8sMeshNodeID" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Mesh operations enabled */
	public bMeshEnabled!: boolean;
	/** Auto add new mesh nodes automatically */
	public bAutoAddMeshNodes!: boolean;
	/** Auto add new mesh nodes using TLS */
	public bAutoAddUseTLS!: boolean;
	/** ID of the mesh the server wants to be part of */
	public u8sMeshID!: string;
	/** Password the server is using to authenticate against other mesh nodes and the server requires others to provide when the is contacted. */
	public u8sMeshPassword!: string;
	/** The own mesh node id */
	public u8sMeshNodeID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Settings of a node
 */
export class AsnMgmtMeshNodeConfig {
	public constructor(that: AsnMgmtMeshNodeConfig) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtMeshNodeConfig {
		return new AsnMgmtMeshNodeConfig({
			u8sComputerNameFQDN: "",
			iPort: 0,
			bForceTLS: false,
			u8sMeshNodeID: "",
			bIsDynamicMode: false,
			bNodeEnabled: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sComputerNameFQDN",
			"iPort",
			"bForceTLS",
			"u8sMeshNodeID",
			"bIsDynamicMode",
			"bNodeEnabled"
		];
		return p;
	}

	public static type = "AsnMgmtMeshNodeConfig";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtMeshNodeConfig",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sComputerNameFQDN" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Boolean({ name: "bForceTLS" }),
				new asn1ts.Utf8String({ name: "u8sMeshNodeID" }),
				new asn1ts.Boolean({ name: "bIsDynamicMode" }),
				new asn1ts.Boolean({ name: "bNodeEnabled" }),
				new asn1ts.Extension()
			]
		});
	}

	/** The nodes FQDN DNS name */
	public u8sComputerNameFQDN!: string;
	/** the node port */
	public iPort!: number;
	/** force TLS? */
	public bForceTLS!: boolean;
	/** The mesh node id */
	public u8sMeshNodeID!: string;
	/** is not configured but dynamically found? */
	public bIsDynamicMode!: boolean;
	/** This node is enabled (we try to contact the node, the node is allowed to contact us) */
	public bNodeEnabled!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * TLS status of a node
 */
export class AsnMgmtMeshNodeStatusTLS {
	public constructor(that: AsnMgmtMeshNodeStatusTLS) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtMeshNodeStatusTLS {
		return new AsnMgmtMeshNodeStatusTLS({
			bTLS: false,
			iTLSProtocol: 0,
			iCertChainVerifyReturn: 0,
			u8sIssuedTo: "",
			u8sIssuer: "",
			timValidFrom: new Date(),
			timValidTo: new Date(),
			u8sListAlternateNames: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bTLS",
			"iTLSProtocol",
			"iCertChainVerifyReturn",
			"u8sIssuedTo",
			"u8sIssuer",
			"timValidFrom",
			"timValidTo",
			"u8sListAlternateNames"
		];
		return p;
	}

	public static type = "AsnMgmtMeshNodeStatusTLS";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtMeshNodeStatusTLS",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bTLS" }),
				new asn1ts.Integer({ name: "iTLSProtocol" }),
				new asn1ts.Integer({ name: "iCertChainVerifyReturn" }),
				new asn1ts.Utf8String({ name: "u8sIssuedTo" }),
				new asn1ts.Utf8String({ name: "u8sIssuer" }),
				new asn1ts.Real({ name: "timValidFrom" }),
				new asn1ts.Real({ name: "timValidTo" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8sListAlternateNames" }),
				new asn1ts.Extension()
			]
		});
	}

	/** true if connection is TLS encrypted */
	public bTLS!: boolean;
	/** Protocol used (if no TLS: 0) google SecPkgContext_ConnectionInfo structure */
	public iTLSProtocol!: number;
	/** certificate chain error (success: 0); only valid if connection outbound and bTls = true */
	public iCertChainVerifyReturn!: number;
	/** server certificate issuedTo; only valid if connection outbound and bTls = true */
	public u8sIssuedTo!: string;
	/** server certificate issuer; only valid if connection outbound and bTls = true */
	public u8sIssuer!: string;
	/** server certificate valid from; only valid if connection outbound and bTls = true */
	public timValidFrom!: Date;
	/** server certificate valid to; only valid if connection outbound and bTls = true */
	public timValidTo!: Date;
	/** server certificate alternate names; only valid if connection outbound and bTls = true */
	public u8sListAlternateNames!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Subscribe to capability changes
 */
export class AsnMgmtSubscribeConnectionInformationChangesArgument {
	public constructor(that: AsnMgmtSubscribeConnectionInformationChangesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSubscribeConnectionInformationChangesArgument {
		return new AsnMgmtSubscribeConnectionInformationChangesArgument({
			u8sContactID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sContactID"
		];
		return p;
	}

	public static type = "AsnMgmtSubscribeConnectionInformationChangesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSubscribeConnectionInformationChangesArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sContactID" }),
				new asn1ts.Extension()
			]
		});
	}

	/**
	 * ContactID we want to subscribe Events for.
	 * If no contact id (sip:jan\@estos.de) is provided all contact capability changes are reported
	 */
	public u8sContactID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSubscribeConnectionInformationChangesResult {
	public constructor(that?: AsnMgmtSubscribeConnectionInformationChangesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSubscribeConnectionInformationChangesResult {
		return new AsnMgmtSubscribeConnectionInformationChangesResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtSubscribeConnectionInformationChangesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSubscribeConnectionInformationChangesResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUnSubscribeConnectionInformationChangesArgument {
	public constructor(that: AsnMgmtUnSubscribeConnectionInformationChangesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUnSubscribeConnectionInformationChangesArgument {
		return new AsnMgmtUnSubscribeConnectionInformationChangesArgument({
			u8sContactID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sContactID"
		];
		return p;
	}

	public static type = "AsnMgmtUnSubscribeConnectionInformationChangesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUnSubscribeConnectionInformationChangesArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sContactID" }),
				new asn1ts.Extension()
			]
		});
	}

	/**
	 * ContactID we want to unsubscribe Events for.
	 * If no contact id (sip:jan\@estos.de) is provided all contact capability changes are reported
	 */
	public u8sContactID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUnSubscribeConnectionInformationChangesResult {
	public constructor(that?: AsnMgmtUnSubscribeConnectionInformationChangesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUnSubscribeConnectionInformationChangesResult {
		return new AsnMgmtUnSubscribeConnectionInformationChangesResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtUnSubscribeConnectionInformationChangesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUnSubscribeConnectionInformationChangesResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Disconnect a spcific client connection
 */
export class AsnMgmtDisconnectClientArgument {
	public constructor(that: AsnMgmtDisconnectClientArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDisconnectClientArgument {
		return new AsnMgmtDisconnectClientArgument({
			u8sContactID: "",
			u8sConnectionID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sContactID",
			"u8sConnectionID"
		];
		return p;
	}

	public static type = "AsnMgmtDisconnectClientArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDisconnectClientArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sContactID" }),
				new asn1ts.Utf8String({ name: "u8sConnectionID" }),
				new asn1ts.Extension()
			]
		});
	}

	/** ContactID of the user the connection belongs to */
	public u8sContactID!: string;
	/** The id of the connection to disconnect */
	public u8sConnectionID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDisconnectClientResult {
	public constructor(that: AsnMgmtDisconnectClientResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDisconnectClientResult {
		return new AsnMgmtDisconnectClientResult({
			bResult: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bResult"
		];
		return p;
	}

	public static type = "AsnMgmtDisconnectClientResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDisconnectClientResult",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bResult" }),
				new asn1ts.Extension()
			]
		});
	}

	/** success or fail */
	public bResult!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * - OPID_asnMgmtGDPRFindContacts							2676
 * - OPID_asnMgmtGDPRGetData								2675
 * - OPID_asnMgmtGDPRRectify								2674
 * - OPID_asnMgmtGDPRErase									2673
 */
export class AsnMgmtGDPREraseArgument {
	public constructor(that: AsnMgmtGDPREraseArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGDPREraseArgument {
		return new AsnMgmtGDPREraseArgument({
			u8sSIPAddress: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sSIPAddress"
		];
		return p;
	}

	public static type = "AsnMgmtGDPREraseArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGDPREraseArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sSIPAddress" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sSIPAddress!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGDPREraseResult {
	public constructor(that?: AsnMgmtGDPREraseResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGDPREraseResult {
		return new AsnMgmtGDPREraseResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGDPREraseResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGDPREraseResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGDPRFindContactsArgument {
	public constructor(that: AsnMgmtGDPRFindContactsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGDPRFindContactsArgument {
		return new AsnMgmtGDPRFindContactsArgument({
			u8sFilterText: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sFilterText"
		];
		return p;
	}

	public static type = "AsnMgmtGDPRFindContactsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGDPRFindContactsArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sFilterText" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Free text which will be found in the contact name, company name, phone number or memo field. */
	public u8sFilterText!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGDPRFindContactsResult {
	public constructor(that: AsnMgmtGDPRFindContactsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGDPRFindContactsResult {
		return new AsnMgmtGDPRFindContactsResult({
			contactList: new ENetUC_Common.AsnNetDatabaseContactList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"contactList"
		];
		return p;
	}

	public static type = "AsnMgmtGDPRFindContactsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGDPRFindContactsResult",
			...params,
			value: [
				ENetUC_Common.AsnNetDatabaseContactList.getASN1Schema({ name: "contactList" }),
				new asn1ts.Extension()
			]
		});
	}

	public contactList!: ENetUC_Common.AsnNetDatabaseContactList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Database Update
 */
export class AsnMgmtUpdateDatabaseProgressArgument {
	public constructor(that: AsnMgmtUpdateDatabaseProgressArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUpdateDatabaseProgressArgument {
		return new AsnMgmtUpdateDatabaseProgressArgument({
			iProgressMax: 0,
			iProgressCur: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iProgressMax",
			"iProgressCur"
		];
		return p;
	}

	public static type = "AsnMgmtUpdateDatabaseProgressArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUpdateDatabaseProgressArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iProgressMax" }),
				new asn1ts.Integer({ name: "iProgressCur" }),
				new asn1ts.Extension()
			]
		});
	}

	public iProgressMax!: number;
	public iProgressCur!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDatabaseUpdateInProgressArgument {
	public constructor(that?: AsnMgmtDatabaseUpdateInProgressArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDatabaseUpdateInProgressArgument {
		return new AsnMgmtDatabaseUpdateInProgressArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtDatabaseUpdateInProgressArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDatabaseUpdateInProgressArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDatabaseUpdateInProgressResult {
	public constructor(that: AsnMgmtDatabaseUpdateInProgressResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDatabaseUpdateInProgressResult {
		return new AsnMgmtDatabaseUpdateInProgressResult({
			bResult: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bResult"
		];
		return p;
	}

	public static type = "AsnMgmtDatabaseUpdateInProgressResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDatabaseUpdateInProgressResult",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bResult" }),
				new asn1ts.Extension()
			]
		});
	}

	public bResult!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetBinaryTransferSettingsArgument {
	public constructor(that?: AsnMgmtGetBinaryTransferSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetBinaryTransferSettingsArgument {
		return new AsnMgmtGetBinaryTransferSettingsArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetBinaryTransferSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetBinaryTransferSettingsArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetBinaryTransferSettingsResult {
	public constructor(that: AsnMgmtGetBinaryTransferSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetBinaryTransferSettingsResult {
		return new AsnMgmtGetBinaryTransferSettingsResult({
			storageSettings: ENetUC_BinaryTransfer.AsnBinaryTransferStorageSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"storageSettings"
		];
		return p;
	}

	public static type = "AsnMgmtGetBinaryTransferSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetBinaryTransferSettingsResult",
			...params,
			value: [
				ENetUC_BinaryTransfer.AsnBinaryTransferStorageSettings.getASN1Schema({ name: "storageSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	public storageSettings!: ENetUC_BinaryTransfer.AsnBinaryTransferStorageSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetBinaryTransferSettingsArgument {
	public constructor(that: AsnMgmtSetBinaryTransferSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetBinaryTransferSettingsArgument {
		return new AsnMgmtSetBinaryTransferSettingsArgument({
			storageSettings: ENetUC_BinaryTransfer.AsnBinaryTransferStorageSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"storageSettings"
		];
		return p;
	}

	public static type = "AsnMgmtSetBinaryTransferSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetBinaryTransferSettingsArgument",
			...params,
			value: [
				ENetUC_BinaryTransfer.AsnBinaryTransferStorageSettings.getASN1Schema({ name: "storageSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	public storageSettings!: ENetUC_BinaryTransfer.AsnBinaryTransferStorageSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetBinaryTransferSettingsResult {
	public constructor(that: AsnMgmtSetBinaryTransferSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetBinaryTransferSettingsResult {
		return new AsnMgmtSetBinaryTransferSettingsResult({
			u8slistComputers: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8slistComputers"
		];
		return p;
	}

	public static type = "AsnMgmtSetBinaryTransferSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetBinaryTransferSettingsResult",
			...params,
			value: [
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistComputers" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8slistComputers!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Connection option
 */
export class AsnMgmtConnectionOption {
	public constructor(that: AsnMgmtConnectionOption) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConnectionOption {
		return new AsnMgmtConnectionOption({
			u8sHostOrIP: "",
			iPort: 0,
			bIsFromDNSRecords: false,
			iDNSWeight: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sHostOrIP",
			"iPort",
			"bIsFromDNSRecords",
			"iDNSWeight"
		];
		return p;
	}

	public static type = "AsnMgmtConnectionOption";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConnectionOption",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sHostOrIP" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Boolean({ name: "bIsFromDNSRecords" }),
				new asn1ts.Integer({ name: "iDNSWeight" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Konfigurierte Serveradresse, dies kann ein Name oder eine Adresse sein */
	public u8sHostOrIP!: string;
	/** Zielport */
	public iPort!: number;
	/** Diese Option wurde aus dem DNS System gelesen */
	public bIsFromDNSRecords!: boolean;
	/** Wenn der Eintrag aus dem DNS Kommt ein mögliches Gewicht dieses Eintrages */
	public iDNSWeight!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Get all ctiserver dns srv records
 */
export class AsnMgmtGetConnectionOptionsDNSArgument {
	public constructor(that?: AsnMgmtGetConnectionOptionsDNSArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetConnectionOptionsDNSArgument {
		return new AsnMgmtGetConnectionOptionsDNSArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetConnectionOptionsDNSArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetConnectionOptionsDNSArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtConfigurationManagerSettings {
	public constructor(that: AsnMgmtConfigurationManagerSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConfigurationManagerSettings {
		return new AsnMgmtConfigurationManagerSettings({
			bRemoteDBUse: false,
			mapRemoteDBProperties: new ENetUC_Common.AsnStringPairList(),
			u8sHomeServerName: "",
			u8sHomeServerVersion: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bRemoteDBUse",
			"mapRemoteDBProperties",
			"u8sHomeServerName",
			"u8sHomeServerVersion"
		];
		return p;
	}

	public static type = "AsnMgmtConfigurationManagerSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConfigurationManagerSettings",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bRemoteDBUse" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "mapRemoteDBProperties" }),
				new asn1ts.Utf8String({ name: "u8sHomeServerName" }),
				new asn1ts.Utf8String({ name: "u8sHomeServerVersion" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Wird die Konfigurations-Datenbank verwendet? */
	public bRemoteDBUse!: boolean;
	/** Liste der Properties für die Konfigurations-Datenbank */
	public mapRemoteDBProperties!: ENetUC_Common.AsnStringPairList;
	/** HomeServerName: identifies the UCServer with its name in the remote db */
	public u8sHomeServerName!: string;
	/** HomeServerVersion: the UCServer version for the remote db */
	public u8sHomeServerVersion!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetConfigurationManagerSettingsArgument {
	public constructor(that?: AsnMgmtGetConfigurationManagerSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetConfigurationManagerSettingsArgument {
		return new AsnMgmtGetConfigurationManagerSettingsArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetConfigurationManagerSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetConfigurationManagerSettingsArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetConfigurationManagerSettingsResult {
	public constructor(that?: AsnMgmtSetConfigurationManagerSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetConfigurationManagerSettingsResult {
		return new AsnMgmtSetConfigurationManagerSettingsResult();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtSetConfigurationManagerSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetConfigurationManagerSettingsResult",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtDirectPersistDeleteSettingArgument {
	public constructor(that: AsnMgmtDirectPersistDeleteSettingArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtDirectPersistDeleteSettingArgument {
		return new AsnMgmtDirectPersistDeleteSettingArgument({
			key: "",
			objectName: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"key",
			"objectName"
		];
		return p;
	}

	public static type = "AsnMgmtDirectPersistDeleteSettingArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtDirectPersistDeleteSettingArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "key" }),
				new asn1ts.Utf8String({ name: "objectName" }),
				new asn1ts.Extension()
			]
		});
	}

	/** The key of the setting to delete */
	public key!: string;
	/** The object name of the setting to delete (empty, if setting does not have an object name) */
	public objectName!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtTestConfigurationManagerDBArgument {
	public constructor(that?: AsnMgmtTestConfigurationManagerDBArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtTestConfigurationManagerDBArgument {
		return new AsnMgmtTestConfigurationManagerDBArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		if (bIncludeOptionals)
			p.push("mapRemoteDBProperties");
		return p;
	}

	public static type = "AsnMgmtTestConfigurationManagerDBArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtTestConfigurationManagerDBArgument",
			...params,
			value: [
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "mapRemoteDBProperties", idBlock: { optionalID: 0 } }),
				new asn1ts.Extension()
			]
		});
	}

	/**
	 * Liste der Properties für die Konfigurations-Datenbank
	 * falls nicht angegeben, werden die im UCServer hinterlegten Settings verwendet
	 */
	public mapRemoteDBProperties?: ENetUC_Common.AsnStringPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtTestConfigurationManagerDBResult {
	public constructor(that: AsnMgmtTestConfigurationManagerDBResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtTestConfigurationManagerDBResult {
		return new AsnMgmtTestConfigurationManagerDBResult({
			bFilledWithConfigurationSettings: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bFilledWithConfigurationSettings"
		];
		return p;
	}

	public static type = "AsnMgmtTestConfigurationManagerDBResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtTestConfigurationManagerDBResult",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bFilledWithConfigurationSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Ist die DB gefuellt mit Configuration Settings? */
	public bFilledWithConfigurationSettings!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * UserManager Connection status
 */
export class AsnMgmtUserManagerConnectionStatus {
	public constructor(that: AsnMgmtUserManagerConnectionStatus) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUserManagerConnectionStatus {
		return new AsnMgmtUserManagerConnectionStatus({
			bADConnected: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bADConnected"
		];
		return p;
	}

	public static type = "AsnMgmtUserManagerConnectionStatus";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUserManagerConnectionStatus",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bADConnected" }),
				new asn1ts.Extension()
			]
		});
	}

	public bADConnected!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUserManagerConnectionStatusArgument {
	public constructor(that?: AsnMgmtGetUserManagerConnectionStatusArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserManagerConnectionStatusArgument {
		return new AsnMgmtGetUserManagerConnectionStatusArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetUserManagerConnectionStatusArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserManagerConnectionStatusArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientPersistenceDeleteArgument {
	public constructor(that: AsnMgmtClientPersistenceDeleteArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientPersistenceDeleteArgument {
		return new AsnMgmtClientPersistenceDeleteArgument({
			u8sItemStore: "",
			u8sItemStoreID: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sItemStore",
			"u8sItemStoreID"
		];
		return p;
	}

	public static type = "AsnMgmtClientPersistenceDeleteArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientPersistenceDeleteArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sItemStore" }),
				new asn1ts.Utf8String({ name: "u8sItemStoreID" }),
				new asn1ts.Extension()
			]
		});
	}

	/** ItemStore des Elements */
	public u8sItemStore!: string;
	/** wenn eine StoreID angegeben ist, darf diese noch nicht existieren */
	public u8sItemStoreID!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientPersistenceDeleteResult {
	public constructor(that: AsnMgmtClientPersistenceDeleteResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientPersistenceDeleteResult {
		return new AsnMgmtClientPersistenceDeleteResult({
			iResult: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iResult"
		];
		return p;
	}

	public static type = "AsnMgmtClientPersistenceDeleteResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientPersistenceDeleteResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iResult" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnClientPersistenceResultDetailsEnum) */
	public iResult!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientPersistenceCreateArgument {
	public constructor(that: AsnMgmtClientPersistenceCreateArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientPersistenceCreateArgument {
		return new AsnMgmtClientPersistenceCreateArgument({
			u8sItemStore: "",
			data: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sItemStore",
			"data"
		];
		if (bIncludeOptionals)
			p.push("u8sItemStoreID");
		return p;
	}

	public static type = "AsnMgmtClientPersistenceCreateArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientPersistenceCreateArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sItemStore" }),
				new asn1ts.Utf8String({ name: "u8sItemStoreID", idBlock: { optionalID: 0 } }),
				new asn1ts.Utf8String({ name: "data" }),
				new asn1ts.Extension()
			]
		});
	}

	/** ItemStore des Elements */
	public u8sItemStore!: string;
	/** wenn eine StoreID angegeben ist, darf diese noch nicht existieren */
	public u8sItemStoreID?: string;
	/** Nutzdaten des Elements */
	public data!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientPersistenceCreateResult {
	public constructor(that: AsnMgmtClientPersistenceCreateResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientPersistenceCreateResult {
		return new AsnMgmtClientPersistenceCreateResult({
			iResult: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iResult"
		];
		return p;
	}

	public static type = "AsnMgmtClientPersistenceCreateResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientPersistenceCreateResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iResult" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnClientPersistenceResultDetailsEnum) */
	public iResult!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Configuration manager status
 */
export class AsnMgmtConfigurationManagerStatus {
	public constructor(that: AsnMgmtConfigurationManagerStatus) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConfigurationManagerStatus {
		return new AsnMgmtConfigurationManagerStatus({
			bRemoteDBEnabled: false,
			bRemoteDBConnected: false,
			bRemoteDBInitiallyFullSynced: false,
			bRemoteDBEmpty: false,
			u8sRemoteDBLastError: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bRemoteDBEnabled",
			"bRemoteDBConnected",
			"bRemoteDBInitiallyFullSynced",
			"bRemoteDBEmpty",
			"u8sRemoteDBLastError"
		];
		return p;
	}

	public static type = "AsnMgmtConfigurationManagerStatus";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConfigurationManagerStatus",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bRemoteDBEnabled" }),
				new asn1ts.Boolean({ name: "bRemoteDBConnected" }),
				new asn1ts.Boolean({ name: "bRemoteDBInitiallyFullSynced" }),
				new asn1ts.Boolean({ name: "bRemoteDBEmpty" }),
				new asn1ts.Utf8String({ name: "u8sRemoteDBLastError" }),
				new asn1ts.Extension()
			]
		});
	}

	public bRemoteDBEnabled!: boolean;
	public bRemoteDBConnected!: boolean;
	public bRemoteDBInitiallyFullSynced!: boolean;
	public bRemoteDBEmpty!: boolean;
	public u8sRemoteDBLastError!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetConfigurationManagerStatusArgument {
	public constructor(that?: AsnMgmtGetConfigurationManagerStatusArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetConfigurationManagerStatusArgument {
		return new AsnMgmtGetConfigurationManagerStatusArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetConfigurationManagerStatusArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetConfigurationManagerStatusArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Configuration server list
 */
export class AsnMgmtConfigurationManagerServerListItem {
	public constructor(that: AsnMgmtConfigurationManagerServerListItem) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConfigurationManagerServerListItem {
		return new AsnMgmtConfigurationManagerServerListItem({
			serverListItem: "",
			bRedisHeartbeat: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"serverListItem",
			"bRedisHeartbeat"
		];
		return p;
	}

	public static type = "AsnMgmtConfigurationManagerServerListItem";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConfigurationManagerServerListItem",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "serverListItem" }),
				new asn1ts.Boolean({ name: "bRedisHeartbeat" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Name of server */
	public serverListItem!: string;
	/** Heartbeat in Redis? (i.e. connected to Redis?) */
	public bRedisHeartbeat!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * cleanup binarytransfer files
 */
export class AsnMgmtCleanupBinaryTransferFilesArgument {
	public constructor(that: AsnMgmtCleanupBinaryTransferFilesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtCleanupBinaryTransferFilesArgument {
		return new AsnMgmtCleanupBinaryTransferFilesArgument({
			iFileAgeDays: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iFileAgeDays"
		];
		return p;
	}

	public static type = "AsnMgmtCleanupBinaryTransferFilesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtCleanupBinaryTransferFilesArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iFileAgeDays" }),
				new asn1ts.Extension()
			]
		});
	}

	/** fileage for removal */
	public iFileAgeDays!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtCleanupBinaryTransferFilesResult {
	public constructor(that: AsnMgmtCleanupBinaryTransferFilesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtCleanupBinaryTransferFilesResult {
		return new AsnMgmtCleanupBinaryTransferFilesResult({
			bSuccess: false,
			iCountRemoved: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bSuccess",
			"iCountRemoved"
		];
		return p;
	}

	public static type = "AsnMgmtCleanupBinaryTransferFilesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtCleanupBinaryTransferFilesResult",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bSuccess" }),
				new asn1ts.Integer({ name: "iCountRemoved" }),
				new asn1ts.Extension()
			]
		});
	}

	/** bool value if succeeded */
	public bSuccess!: boolean;
	/** count of removed files */
	public iCountRemoved!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetPresenceDomainArgument {
	public constructor(that: AsnMgmtSetPresenceDomainArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetPresenceDomainArgument {
		return new AsnMgmtSetPresenceDomainArgument({
			u8sPresenceDomain: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sPresenceDomain"
		];
		return p;
	}

	public static type = "AsnMgmtSetPresenceDomainArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetPresenceDomainArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sPresenceDomain" }),
				new asn1ts.Extension()
			]
		});
	}

	/**
	 * string with the new presence domain(s)
	 * format of string is like the input in ucserver server setup and as shown in ucadmin
	 * operation is only carried out in datacenter ucserver
	 * sip addresses of users will not be adapted
	 */
	public u8sPresenceDomain!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetPresenceDomainResult {
	public constructor(that: AsnMgmtSetPresenceDomainResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetPresenceDomainResult {
		return new AsnMgmtSetPresenceDomainResult({
			iResult: 0,
			u8slistOtherDatacenterServersRunning: new ENetUC_Common.UTF8StringList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iResult",
			"u8slistOtherDatacenterServersRunning"
		];
		return p;
	}

	public static type = "AsnMgmtSetPresenceDomainResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetPresenceDomainResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iResult" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistOtherDatacenterServersRunning" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnMgmtSetPresenceDomainResultEnum) */
	public iResult!: number;
	/** if iResult is eOtherDatacenterServersRunning then this list contains all datacenter servers running aside of the one that handles this op */
	public u8slistOtherDatacenterServersRunning!: ENetUC_Common.UTF8StringList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtAdminUserManagerSettings {
	public constructor(that: AsnMgmtAdminUserManagerSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAdminUserManagerSettings {
		return new AsnMgmtAdminUserManagerSettings({
			iAdminUserManagerType: 0,
			bUseUserManagerLDAPSettings: false,
			u8sHost: "",
			iPort: 0,
			u8sUsername: "",
			u8sPassword: "",
			iForceLDAPS: 0,
			u8sBaseDNUsers: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iAdminUserManagerType",
			"bUseUserManagerLDAPSettings",
			"u8sHost",
			"iPort",
			"u8sUsername",
			"u8sPassword",
			"iForceLDAPS",
			"u8sBaseDNUsers"
		];
		return p;
	}

	public static type = "AsnMgmtAdminUserManagerSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtAdminUserManagerSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iAdminUserManagerType" }),
				new asn1ts.Boolean({ name: "bUseUserManagerLDAPSettings" }),
				new asn1ts.Utf8String({ name: "u8sHost" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Utf8String({ name: "u8sUsername" }),
				new asn1ts.Utf8String({ name: "u8sPassword" }),
				new asn1ts.Integer({ name: "iForceLDAPS" }),
				new asn1ts.Utf8String({ name: "u8sBaseDNUsers" }),
				new asn1ts.Extension()
			]
		});
	}

	/** type of AdminUserManager */
	/** (see AsnMgmtAdminUserManagerType) */
	public iAdminUserManagerType!: number;
	/**
	 * if true the ldap settings of usermanagement are used
	 * (only relevant if type is eACTIVEDIRECTORY)
	 */
	public bUseUserManagerLDAPSettings!: boolean;
	/**
	 * Active Directory Server
	 * (only relevant if iAdminUserManagerType = eACTIVEDIRECTORY and bUseUserManagerLDAPSettings = false)
	 */
	public u8sHost!: string;
	/**
	 * Active Directory Server LDAP Port
	 * (only relevant if iAdminUserManagerType = eACTIVEDIRECTORY and bUseUserManagerLDAPSettings = false)
	 */
	public iPort!: number;
	/**
	 * Username for AD access (Administrator\@estos.de)
	 * (only relevant if iAdminUserManagerType = eACTIVEDIRECTORY and bUseUserManagerLDAPSettings = false)
	 */
	public u8sUsername!: string;
	/**
	 * Password for AD access
	 * (only relevant if iAdminUserManagerType = eACTIVEDIRECTORY and bUseUserManagerLDAPSettings = false)
	 */
	public u8sPassword!: string;
	/**
	 * LDAPS erzwingen
	 * (only relevant if iAdminUserManagerType = eACTIVEDIRECTORY and bUseUserManagerLDAPSettings = false)
	 */
	public iForceLDAPS!: number;
	/**
	 * User BaseDN in the AD
	 * If empty it will be automatically defined by the defaultNamingContext
	 * (only relevant if iAdminUserManagerType = eACTIVEDIRECTORY and bUseUserManagerLDAPSettings = false)
	 */
	public u8sBaseDNUsers!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAdminUserManagerSettingsArgument {
	public constructor(that?: AsnMgmtGetAdminUserManagerSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAdminUserManagerSettingsArgument {
		return new AsnMgmtGetAdminUserManagerSettingsArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetAdminUserManagerSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAdminUserManagerSettingsArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetAdminUserManagerSettingsResult {
	public constructor(that: AsnMgmtSetAdminUserManagerSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetAdminUserManagerSettingsResult {
		return new AsnMgmtSetAdminUserManagerSettingsResult({
			iLastErrorCode: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iLastErrorCode"
		];
		return p;
	}

	public static type = "AsnMgmtSetAdminUserManagerSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetAdminUserManagerSettingsResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iLastErrorCode" }),
				new asn1ts.Extension()
			]
		});
	}

	public iLastErrorCode!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * A simple read write flag
 */
export class AsnMgmtAdminUserRightStateReadWrite {
	public constructor(that: AsnMgmtAdminUserRightStateReadWrite) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAdminUserRightStateReadWrite {
		return new AsnMgmtAdminUserRightStateReadWrite({
			bWrite: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bWrite"
		];
		return p;
	}

	public static type = "AsnMgmtAdminUserRightStateReadWrite";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtAdminUserRightStateReadWrite",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bWrite" }),
				new asn1ts.Extension()
			]
		});
	}

	public bWrite!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Executing is allowed
 */
export class AsnMgmtAdminUserRightStateExecute {
	public constructor(that?: AsnMgmtAdminUserRightStateExecute) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAdminUserRightStateExecute {
		return new AsnMgmtAdminUserRightStateExecute();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtAdminUserRightStateExecute";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtAdminUserRightStateExecute",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAdminUserRightsArgument {
	public constructor(that?: AsnMgmtGetAdminUserRightsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAdminUserRightsArgument {
		return new AsnMgmtGetAdminUserRightsArgument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		return p;
	}

	public static type = "AsnMgmtGetAdminUserRightsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAdminUserRightsArgument",
			...params,
			value: [
				new asn1ts.Extension()
			]
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Represents the internal entra id replicator settings
 *
 * @added 01.07.2024
 */
export class AsnMgmtEntraIdSettings {
	public constructor(that: AsnMgmtEntraIdSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEntraIdSettings {
		return new AsnMgmtEntraIdSettings({
			u8sClientId: "",
			u8sClientSecret: "",
			u8sTenantId: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sClientId",
			"u8sClientSecret",
			"u8sTenantId"
		];
		return p;
	}

	public static type = "AsnMgmtEntraIdSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEntraIdSettings",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sClientId" }),
				new asn1ts.Utf8String({ name: "u8sClientSecret" }),
				new asn1ts.Utf8String({ name: "u8sTenantId" }),
				new asn1ts.Extension()
			]
		});
	}

	/** The client id from the entra id app */
	public u8sClientId!: string;
	/** The client secret generated for the entra id app */
	public u8sClientSecret!: string;
	/** The tenant id */
	public u8sTenantId!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnClientConnectionDescriptions extends Array<AsnClientConnectionDescription> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnClientConnectionDescription.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientConnectionInformation {
	public constructor(that: AsnMgmtClientConnectionInformation) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientConnectionInformation {
		return new AsnMgmtClientConnectionInformation({
			u8sLastLoginDeviceName: "",
			timLastLogin: new Date(),
			bOnline: false,
			bAVLineIsDND: false,
			connectionDescriptions: new AsnClientConnectionDescriptions(),
			clientCapabilities: new ENetUC_ClientCapabilities.AsnClientCapabilitiesV2ByIDList(),
			clientCapabilitiesSum: ENetUC_ClientCapabilities.AsnClientCapabilitiesV2["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLastLoginDeviceName",
			"timLastLogin",
			"bOnline",
			"bAVLineIsDND",
			"connectionDescriptions",
			"clientCapabilities",
			"clientCapabilitiesSum"
		];
		return p;
	}

	public static type = "AsnMgmtClientConnectionInformation";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientConnectionInformation",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLastLoginDeviceName" }),
				new asn1ts.Real({ name: "timLastLogin" }),
				new asn1ts.Boolean({ name: "bOnline" }),
				new asn1ts.Boolean({ name: "bAVLineIsDND" }),
				AsnClientConnectionDescriptions.getASN1Schema({ name: "connectionDescriptions" }),
				ENetUC_ClientCapabilities.AsnClientCapabilitiesV2ByIDList.getASN1Schema({ name: "clientCapabilities" }),
				ENetUC_ClientCapabilities.AsnClientCapabilitiesV2.getASN1Schema({ name: "clientCapabilitiesSum" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Letztes Gerät auf dem sich der Nutzer angemeldet hat */
	public u8sLastLoginDeviceName!: string;
	/** Letzter Anmeldezeitpunkt */
	public timLastLogin!: Date;
	/** Dieser Client ist aktuell Online */
	public bOnline!: boolean;
	/** Die AV Leitung dieses Nutzers ist DND */
	public bAVLineIsDND!: boolean;
	/** Informationen zu den Verbindungen dieses Clients (Geräteverbindungen) */
	public connectionDescriptions!: AsnClientConnectionDescriptions;
	/** Die Capabilities der verschiedenen Geräteverbindungen (aufgelöst nach der Verbindungs GUID) */
	public clientCapabilities!: ENetUC_ClientCapabilities.AsnClientCapabilitiesV2ByIDList;
	/** Die Summe der Capabilities aller Client Verbindnugen */
	public clientCapabilitiesSum!: ENetUC_ClientCapabilities.AsnClientCapabilitiesV2;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUserProfileData {
	public constructor(that: AsnMgmtUserProfileData) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUserProfileData {
		return new AsnMgmtUserProfileData({
			userProfile: ENetUC_Admin.AsnUserProfile["initEmpty"].call(0),
			clientConnectionInfo: AsnMgmtClientConnectionInformation["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"userProfile",
			"clientConnectionInfo"
		];
		return p;
	}

	public static type = "AsnMgmtUserProfileData";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUserProfileData",
			...params,
			value: [
				ENetUC_Admin.AsnUserProfile.getASN1Schema({ name: "userProfile" }),
				AsnMgmtClientConnectionInformation.getASN1Schema({ name: "clientConnectionInfo" }),
				new asn1ts.Extension()
			]
		});
	}

	public userProfile!: ENetUC_Admin.AsnUserProfile;
	public clientConnectionInfo!: AsnMgmtClientConnectionInformation;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtUserProfileDataList extends Array<AsnMgmtUserProfileData> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtUserProfileData.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUserListEventArgument {
	public constructor(that: AsnMgmtGetUserListEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserListEventArgument {
		return new AsnMgmtGetUserListEventArgument({
			userProfileDataList: new AsnMgmtUserProfileDataList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"userProfileDataList"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserListEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserListEventArgument",
			...params,
			value: [
				AsnMgmtUserProfileDataList.getASN1Schema({ name: "userProfileDataList" }),
				new asn1ts.Extension()
			]
		});
	}

	public userProfileDataList!: AsnMgmtUserProfileDataList;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtAgentPublicPresenceItemList extends Array<AsnMgmtAgentPublicPresenceItem> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtAgentPublicPresenceItem.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetGroupAgentPublicPresenceResult {
	public constructor(that: AsnMgmtGetGroupAgentPublicPresenceResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetGroupAgentPublicPresenceResult {
		return new AsnMgmtGetGroupAgentPublicPresenceResult({
			listAgentPresence: new AsnMgmtAgentPublicPresenceItemList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"listAgentPresence"
		];
		return p;
	}

	public static type = "AsnMgmtGetGroupAgentPublicPresenceResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetGroupAgentPublicPresenceResult",
			...params,
			value: [
				AsnMgmtAgentPublicPresenceItemList.getASN1Schema({ name: "listAgentPresence" }),
				new asn1ts.Extension()
			]
		});
	}

	public listAgentPresence!: AsnMgmtAgentPublicPresenceItemList;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtClientInstallProfileActionList extends Array<AsnMgmtClientInstallProfileAction> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtClientInstallProfileAction.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtClientInstallProfileData {
	public constructor(that: AsnMgmtClientInstallProfileData) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtClientInstallProfileData {
		return new AsnMgmtClientInstallProfileData({
			u8sComputerName: "",
			u8sProfileName: "",
			actionList: new AsnMgmtClientInstallProfileActionList(),
			u8sAdminName: "",
			u8sAdminPassword: "",
			bFirstInstallation: false,
			iLastServiceStatus: 0,
			iLastSoftwareStatus: 0,
			u8sLogData: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sComputerName",
			"u8sProfileName",
			"actionList",
			"u8sAdminName",
			"u8sAdminPassword",
			"bFirstInstallation",
			"iLastServiceStatus",
			"iLastSoftwareStatus",
			"u8sLogData"
		];
		return p;
	}

	public static type = "AsnMgmtClientInstallProfileData";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtClientInstallProfileData",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sComputerName" }),
				new asn1ts.Utf8String({ name: "u8sProfileName" }),
				AsnMgmtClientInstallProfileActionList.getASN1Schema({ name: "actionList" }),
				new asn1ts.Utf8String({ name: "u8sAdminName" }),
				new asn1ts.Utf8String({ name: "u8sAdminPassword" }),
				new asn1ts.Boolean({ name: "bFirstInstallation" }),
				new asn1ts.Integer({ name: "iLastServiceStatus" }),
				new asn1ts.Integer({ name: "iLastSoftwareStatus" }),
				new asn1ts.Utf8String({ name: "u8sLogData" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Computer Name auf dem die Installation durchgefuehrt werden soll */
	public u8sComputerName!: string;
	/**
	 * Profil Name.
	 * Mehrere EClientInstallProfileData, die den selben Profil Namen haben koennen
	 * im Admin zusammen bearbeitet werden.**\/
	 */
	public u8sProfileName!: string;
	/**
	 * Konfiguration der Installation.
	 * Die Aktionen fuer die Installationen \/Updates, die durchzufuehren sind **\/
	 */
	public actionList!: AsnMgmtClientInstallProfileActionList;
	public u8sAdminName!: string;
	public u8sAdminPassword!: string;
	public bFirstInstallation!: boolean;
	/** Letzter Status des Service (ACI_SERVICE_STATUS_...) */
	public iLastServiceStatus!: number;
	/** Letzter Status der laufenden Software Installation (ACU_UPDATE_STATUS_...) */
	public iLastSoftwareStatus!: number;
	public u8sLogData!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetClientInstallProfileResult {
	public constructor(that: AsnMgmtGetClientInstallProfileResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetClientInstallProfileResult {
		return new AsnMgmtGetClientInstallProfileResult({
			profileData: AsnMgmtClientInstallProfileData["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"profileData"
		];
		return p;
	}

	public static type = "AsnMgmtGetClientInstallProfileResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetClientInstallProfileResult",
			...params,
			value: [
				AsnMgmtClientInstallProfileData.getASN1Schema({ name: "profileData" }),
				new asn1ts.Extension()
			]
		});
	}

	public profileData!: AsnMgmtClientInstallProfileData;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetClientInstallProfileArgument {
	public constructor(that: AsnMgmtSetClientInstallProfileArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetClientInstallProfileArgument {
		return new AsnMgmtSetClientInstallProfileArgument({
			iACICommand: 0,
			profileData: AsnMgmtClientInstallProfileData["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iACICommand",
			"profileData"
		];
		return p;
	}

	public static type = "AsnMgmtSetClientInstallProfileArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetClientInstallProfileArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iACICommand" }),
				AsnMgmtClientInstallProfileData.getASN1Schema({ name: "profileData" }),
				new asn1ts.Extension()
			]
		});
	}

	public iACICommand!: number;
	public profileData!: AsnMgmtClientInstallProfileData;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtACUFileForUpdateDescriptionList extends Array<AsnMgmtACUFileForUpdateDescription> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtACUFileForUpdateDescription.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAvailableUpdatesResult {
	public constructor(that: AsnMgmtGetAvailableUpdatesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAvailableUpdatesResult {
		return new AsnMgmtGetAvailableUpdatesResult({
			updateDescriptionList: new AsnMgmtACUFileForUpdateDescriptionList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"updateDescriptionList"
		];
		return p;
	}

	public static type = "AsnMgmtGetAvailableUpdatesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAvailableUpdatesResult",
			...params,
			value: [
				AsnMgmtACUFileForUpdateDescriptionList.getASN1Schema({ name: "updateDescriptionList" }),
				new asn1ts.Extension()
			]
		});
	}

	public updateDescriptionList!: AsnMgmtACUFileForUpdateDescriptionList;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtClientInstallProfilePacketList extends Array<AsnMgmtClientInstallProfilePacket> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtClientInstallProfilePacket.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSoftwareStatusComputer {
	public constructor(that: AsnMgmtSoftwareStatusComputer) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSoftwareStatusComputer {
		return new AsnMgmtSoftwareStatusComputer({
			u8sComputerName: "",
			u8sUpdateServer: "",
			u8sProCallVersion: "",
			u8sProCallPacketIdentifier: "",
			timProCallLastLogin: new Date(),
			u8sUpdateServiceVersion: "",
			timUpdateServiceLastLogin: new Date(),
			iUpdateServiceStatus: 0,
			iUpdateServiceWorkingStatus: 0,
			u8slistInstallLogs: new ENetUC_Common.UTF8StringList(),
			installedSoftwareList: new AsnMgmtClientInstallProfilePacketList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sComputerName",
			"u8sUpdateServer",
			"u8sProCallVersion",
			"u8sProCallPacketIdentifier",
			"timProCallLastLogin",
			"u8sUpdateServiceVersion",
			"timUpdateServiceLastLogin",
			"iUpdateServiceStatus",
			"iUpdateServiceWorkingStatus",
			"u8slistInstallLogs",
			"installedSoftwareList"
		];
		return p;
	}

	public static type = "AsnMgmtSoftwareStatusComputer";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSoftwareStatusComputer",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sComputerName" }),
				new asn1ts.Utf8String({ name: "u8sUpdateServer" }),
				new asn1ts.Utf8String({ name: "u8sProCallVersion" }),
				new asn1ts.Utf8String({ name: "u8sProCallPacketIdentifier" }),
				new asn1ts.Real({ name: "timProCallLastLogin" }),
				new asn1ts.Utf8String({ name: "u8sUpdateServiceVersion" }),
				new asn1ts.Real({ name: "timUpdateServiceLastLogin" }),
				new asn1ts.Integer({ name: "iUpdateServiceStatus" }),
				new asn1ts.Integer({ name: "iUpdateServiceWorkingStatus" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistInstallLogs" }),
				AsnMgmtClientInstallProfilePacketList.getASN1Schema({ name: "installedSoftwareList" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sComputerName!: string;
	public u8sUpdateServer!: string;
	public u8sProCallVersion!: string;
	public u8sProCallPacketIdentifier!: string;
	public timProCallLastLogin!: Date;
	public u8sUpdateServiceVersion!: string;
	public timUpdateServiceLastLogin!: Date;
	public iUpdateServiceStatus!: number;
	public iUpdateServiceWorkingStatus!: number;
	public u8slistInstallLogs!: ENetUC_Common.UTF8StringList;
	public installedSoftwareList!: AsnMgmtClientInstallProfilePacketList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSoftwareStatusComputerChangedArgument {
	public constructor(that: AsnMgmtSoftwareStatusComputerChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSoftwareStatusComputerChangedArgument {
		return new AsnMgmtSoftwareStatusComputerChangedArgument({
			status: AsnMgmtSoftwareStatusComputer["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"status"
		];
		return p;
	}

	public static type = "AsnMgmtSoftwareStatusComputerChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSoftwareStatusComputerChangedArgument",
			...params,
			value: [
				AsnMgmtSoftwareStatusComputer.getASN1Schema({ name: "status" }),
				new asn1ts.Extension()
			]
		});
	}

	public status!: AsnMgmtSoftwareStatusComputer;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtLineStatusList extends Array<AsnMgmtLineStatus> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtLineStatus.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtLineStateChangedArgument {
	public constructor(that: AsnMgmtLineStateChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLineStateChangedArgument {
		return new AsnMgmtLineStateChangedArgument({
			u8sLineID: "",
			iOpenState: 0,
			iNumCalls: 0,
			iSipResponseCode: 0,
			u8sReasonPhrase: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineID",
			"iOpenState",
			"iNumCalls",
			"iSipResponseCode",
			"u8sReasonPhrase"
		];
		if (bIncludeOptionals) {
			p.push(
				"u8sEffectiveHomeServer",
				"lineStatusList"
			);
		}
		return p;
	}

	public static type = "AsnMgmtLineStateChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLineStateChangedArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Integer({ name: "iOpenState" }),
				new asn1ts.Integer({ name: "iNumCalls" }),
				new asn1ts.Integer({ name: "iSipResponseCode" }),
				new asn1ts.Utf8String({ name: "u8sReasonPhrase" }),
				new asn1ts.Utf8String({ name: "u8sEffectiveHomeServer", idBlock: { optionalID: 0 } }),
				AsnMgmtLineStatusList.getASN1Schema({ name: "lineStatusList", idBlock: { optionalID: 1 } }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineID!: string;
	/** (see AsnCtiLineOpenStatus) */
	public iOpenState!: number;
	public iNumCalls!: number;
	public iSipResponseCode!: number;
	public u8sReasonPhrase!: string;
	/**
	 * ProCall DataCenter only. This is the effective home server identification of the UCServer that (currently) provides this line.
	 * For SIPAV lines and TAPI lines not enabled by the \"use lines automatically\" feature, this is usually the same as the
	 * home server in the line's configuration. However, when moving a line between two servers, this may differ for a short period of time.
	 * For TAPI lines that are enabled by the \"use lines automatically\" feature this might (temporarily) contain multiple servers in the format (2)server1.domain.de;server2.domain.de
	 * Important: The format \"(count)server1;server2;servern\" is only a temporary workaround. do not try to parse!
	 * @added 10.06.2024
	 */
	public u8sEffectiveHomeServer?: string;
	/**
	 * ProCall DataCenter only: List of line status from several servers
	 * @added 15.07.2024
	 */
	public lineStatusList?: AsnMgmtLineStatusList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineRemovedEventArgument {
	public constructor(that: AsnMgmtOnLineRemovedEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineRemovedEventArgument {
		return new AsnMgmtOnLineRemovedEventArgument({
			tapiLineConfig4Admin: AsnMgmtTapiLineConfig4Admin["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"tapiLineConfig4Admin"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineRemovedEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineRemovedEventArgument",
			...params,
			value: [
				AsnMgmtTapiLineConfig4Admin.getASN1Schema({ name: "tapiLineConfig4Admin" }),
				new asn1ts.Extension()
			]
		});
	}

	public tapiLineConfig4Admin!: AsnMgmtTapiLineConfig4Admin;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineAddedEventArgument {
	public constructor(that: AsnMgmtOnLineAddedEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineAddedEventArgument {
		return new AsnMgmtOnLineAddedEventArgument({
			tapiLineConfig4Admin: AsnMgmtTapiLineConfig4Admin["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"tapiLineConfig4Admin"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineAddedEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineAddedEventArgument",
			...params,
			value: [
				AsnMgmtTapiLineConfig4Admin.getASN1Schema({ name: "tapiLineConfig4Admin" }),
				new asn1ts.Extension()
			]
		});
	}

	public tapiLineConfig4Admin!: AsnMgmtTapiLineConfig4Admin;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineConfigChangedEventArgument {
	public constructor(that: AsnMgmtOnLineConfigChangedEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineConfigChangedEventArgument {
		return new AsnMgmtOnLineConfigChangedEventArgument({
			tapiLineConfig4Admin: AsnMgmtTapiLineConfig4Admin["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"tapiLineConfig4Admin"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineConfigChangedEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineConfigChangedEventArgument",
			...params,
			value: [
				AsnMgmtTapiLineConfig4Admin.getASN1Schema({ name: "tapiLineConfig4Admin" }),
				new asn1ts.Extension()
			]
		});
	}

	public tapiLineConfig4Admin!: AsnMgmtTapiLineConfig4Admin;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineCapsChangedEventArgument {
	public constructor(that: AsnMgmtOnLineCapsChangedEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineCapsChangedEventArgument {
		return new AsnMgmtOnLineCapsChangedEventArgument({
			tapiLineConfig4Admin: AsnMgmtTapiLineConfig4Admin["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"tapiLineConfig4Admin"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineCapsChangedEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineCapsChangedEventArgument",
			...params,
			value: [
				AsnMgmtTapiLineConfig4Admin.getASN1Schema({ name: "tapiLineConfig4Admin" }),
				new asn1ts.Extension()
			]
		});
	}

	public tapiLineConfig4Admin!: AsnMgmtTapiLineConfig4Admin;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnCtiLineFoundEventArgument {
	public constructor(that: AsnMgmtOnCtiLineFoundEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnCtiLineFoundEventArgument {
		return new AsnMgmtOnCtiLineFoundEventArgument({
			tapiLineConfig4Admin: AsnMgmtTapiLineConfig4Admin["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"tapiLineConfig4Admin"
		];
		return p;
	}

	public static type = "AsnMgmtOnCtiLineFoundEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnCtiLineFoundEventArgument",
			...params,
			value: [
				AsnMgmtTapiLineConfig4Admin.getASN1Schema({ name: "tapiLineConfig4Admin" }),
				new asn1ts.Extension()
			]
		});
	}

	public tapiLineConfig4Admin!: AsnMgmtTapiLineConfig4Admin;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineConfigResult {
	public constructor(that: AsnMgmtGetLineConfigResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineConfigResult {
		return new AsnMgmtGetLineConfigResult({
			config: AsnMgmtTapiLineConfig4Admin["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"config"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineConfigResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineConfigResult",
			...params,
			value: [
				AsnMgmtTapiLineConfig4Admin.getASN1Schema({ name: "config" }),
				new asn1ts.Extension()
			]
		});
	}

	public config!: AsnMgmtTapiLineConfig4Admin;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetLineConfigArgument {
	public constructor(that: AsnMgmtSetLineConfigArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetLineConfigArgument {
		return new AsnMgmtSetLineConfigArgument({
			u8sLineSource: "",
			iDeviceID: 0,
			config: AsnMgmtTapiLineConfiguration["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSource",
			"iDeviceID",
			"config"
		];
		return p;
	}

	public static type = "AsnMgmtSetLineConfigArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetLineConfigArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSource" }),
				new asn1ts.Integer({ name: "iDeviceID" }),
				AsnMgmtTapiLineConfiguration.getASN1Schema({ name: "config" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sLineSource!: string;
	public iDeviceID!: number;
	public config!: AsnMgmtTapiLineConfiguration;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtCtiFeatureCodeList extends Array<AsnMgmtCtiFeatureCode> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtCtiFeatureCode.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtTapiLineGroupConfiguration {
	public constructor(that: AsnMgmtTapiLineGroupConfiguration) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtTapiLineGroupConfiguration {
		return new AsnMgmtTapiLineGroupConfiguration({
			u8sLineSourceName: "",
			u8sPBXGroupName: "",
			iDefaultEnabled: 0,
			iDefaultAutoActivate: 0,
			iDefaultAutoCreate: 0,
			iDefaultJournal: 0,
			iLineIDAutomatic: 0,
			iPhoneNumberAutomatic: 0,
			iUseTapiLineNames: 0,
			u8sLocationID: "",
			bAutomaticLocationFinding: false,
			iSupportedFeatures: 0,
			objFeatureCodes: new AsnMgmtCtiFeatureCodeList(),
			customProps: new ENetUC_Common.AsnStringPairList(),
			iRejectCodeSrv: 0,
			iRejectCodeClnt: 0,
			bHideRejectClnt: false,
			iLineType: 0,
			adminGroupForwarding: new ENetUC_Common_SIPCTI.AsnLineForwards(),
			iMinPort: 0,
			iMaxPort: 0,
			bNoEarlyMedia: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLineSourceName",
			"u8sPBXGroupName",
			"iDefaultEnabled",
			"iDefaultAutoActivate",
			"iDefaultAutoCreate",
			"iDefaultJournal",
			"iLineIDAutomatic",
			"iPhoneNumberAutomatic",
			"iUseTapiLineNames",
			"u8sLocationID",
			"bAutomaticLocationFinding",
			"iSupportedFeatures",
			"objFeatureCodes",
			"customProps",
			"iRejectCodeSrv",
			"iRejectCodeClnt",
			"bHideRejectClnt",
			"iLineType",
			"adminGroupForwarding",
			"iMinPort",
			"iMaxPort",
			"bNoEarlyMedia"
		];
		return p;
	}

	public static type = "AsnMgmtTapiLineGroupConfiguration";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtTapiLineGroupConfiguration",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLineSourceName" }),
				new asn1ts.Utf8String({ name: "u8sPBXGroupName" }),
				new asn1ts.Integer({ name: "iDefaultEnabled" }),
				new asn1ts.Integer({ name: "iDefaultAutoActivate" }),
				new asn1ts.Integer({ name: "iDefaultAutoCreate" }),
				new asn1ts.Integer({ name: "iDefaultJournal" }),
				new asn1ts.Integer({ name: "iLineIDAutomatic" }),
				new asn1ts.Integer({ name: "iPhoneNumberAutomatic" }),
				new asn1ts.Integer({ name: "iUseTapiLineNames" }),
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Boolean({ name: "bAutomaticLocationFinding" }),
				new asn1ts.Integer({ name: "iSupportedFeatures" }),
				AsnMgmtCtiFeatureCodeList.getASN1Schema({ name: "objFeatureCodes" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "customProps" }),
				new asn1ts.Integer({ name: "iRejectCodeSrv" }),
				new asn1ts.Integer({ name: "iRejectCodeClnt" }),
				new asn1ts.Boolean({ name: "bHideRejectClnt" }),
				new asn1ts.Integer({ name: "iLineType" }),
				ENetUC_Common_SIPCTI.AsnLineForwards.getASN1Schema({ name: "adminGroupForwarding" }),
				new asn1ts.Integer({ name: "iMinPort" }),
				new asn1ts.Integer({ name: "iMaxPort" }),
				new asn1ts.Boolean({ name: "bNoEarlyMedia" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Tapi Provider Name - identifier for the group */
	public u8sLineSourceName!: string;
	public u8sPBXGroupName!: string;
	public iDefaultEnabled!: number;
	public iDefaultAutoActivate!: number;
	public iDefaultAutoCreate!: number;
	public iDefaultJournal!: number;
	public iLineIDAutomatic!: number;
	public iPhoneNumberAutomatic!: number;
	public iUseTapiLineNames!: number;
	public u8sLocationID!: string;
	/** Wenn m_bAutomaticLocationFinding gesetzt ist versucht der Server Anhand der Rufnummer der Leitung die passende Location automatisch zu ermitteln */
	public bAutomaticLocationFinding!: boolean;
	/**
	 * In dieser BitMaske werden ETAPILINFEATURESUPPORTED_ Bits gespeichert die Aufschluss darüber geben ob ein TSP ein bestimmtes Leistungsmerkmal unterstützt
	 * Es handelt sich hierbei also nicht um ein konfiguratives Property
	 */
	public iSupportedFeatures!: number;
	public objFeatureCodes!: AsnMgmtCtiFeatureCodeList;
	/**
	 * Custom Properties for individual Line groups
	 * Property strings are defined as ELINEPROP_XXX ies **\/
	 */
	public customProps!: ENetUC_Common.AsnStringPairList;
	/** Server side SIPAV Response for rejecting calls if no client registered */
	/** (see AsnSIPAVResponseCodes) */
	public iRejectCodeSrv!: number;
	/** SIPAV Response for rejecting calls if client registered */
	/** (see AsnSIPAVResponseCodes) */
	public iRejectCodeClnt!: number;
	/** hide client side softphone reject */
	public bHideRejectClnt!: boolean;
	/** Typ der Leitung (SIP, CTI, AV, BlueTooth etc.) */
	/** (see AsnMgmtEnumLineType) */
	public iLineType!: number;
	/** Forwarding for line group when no client is registered (connected) for that line */
	public adminGroupForwarding!: ENetUC_Common_SIPCTI.AsnLineForwards;
	/** \@Cfg Media min Ports to Clients */
	public iMinPort!: number;
	/** \@Cfg Media max Ports to Clients */
	public iMaxPort!: number;
	/** \@Cfg Disable Early Media */
	public bNoEarlyMedia!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineGroupConfigResult {
	public constructor(that: AsnMgmtGetLineGroupConfigResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineGroupConfigResult {
		return new AsnMgmtGetLineGroupConfigResult({
			config: AsnMgmtTapiLineGroupConfiguration["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"config"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineGroupConfigResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineGroupConfigResult",
			...params,
			value: [
				AsnMgmtTapiLineGroupConfiguration.getASN1Schema({ name: "config" }),
				new asn1ts.Extension()
			]
		});
	}

	public config!: AsnMgmtTapiLineGroupConfiguration;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetLineGroupConfigArgument {
	public constructor(that: AsnMgmtSetLineGroupConfigArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetLineGroupConfigArgument {
		return new AsnMgmtSetLineGroupConfigArgument({
			config: AsnMgmtTapiLineGroupConfiguration["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"config"
		];
		return p;
	}

	public static type = "AsnMgmtSetLineGroupConfigArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetLineGroupConfigArgument",
			...params,
			value: [
				AsnMgmtTapiLineGroupConfiguration.getASN1Schema({ name: "config" }),
				new asn1ts.Extension()
			]
		});
	}

	public config!: AsnMgmtTapiLineGroupConfiguration;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineEvent4AdminEventArgument {
	public constructor(that: AsnMgmtOnLineEvent4AdminEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineEvent4AdminEventArgument {
		return new AsnMgmtOnLineEvent4AdminEventArgument({
			lineEvent4Admin: AsnMgmtLineEventForAdmin["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"lineEvent4Admin"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineEvent4AdminEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineEvent4AdminEventArgument",
			...params,
			value: [
				AsnMgmtLineEventForAdmin.getASN1Schema({ name: "lineEvent4Admin" }),
				new asn1ts.Extension()
			]
		});
	}

	public lineEvent4Admin!: AsnMgmtLineEventForAdmin;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnUserManagerSettings {
	public constructor(that: AsnUserManagerSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnUserManagerSettings {
		return new AsnUserManagerSettings({
			iUMSecurity: 0,
			iUMSelfInstall: 0,
			iComputerIsDomainMember: 0,
			u8sComputerDomainNT: "",
			u8sComputerDomainFQ: "",
			u8sDomainController: "",
			objGlobalUserRightDetails: ENetUC_Common_AsnContact.AsnUserDynamicRights["initEmpty"].call(0),
			iShowAllUsersInAllMonitors: 0,
			iDisableAllMonitorConfiguration: 0,
			bAllJournalEntriesVisible: false,
			iFeatures: 0,
			bDeleteJournalEntriesEnabled: false,
			bAutoBindLinesForUsersPhoneNumbers: false,
			u8slistPresenceDomains: new ENetUC_Common.UTF8StringList(),
			u8sHomeServerIdentification: "",
			bInternalChatDisabled: false,
			iDeskShareAccess: 0,
			bPresenceDisabled: false,
			bUserUserRightsDisabled: false,
			bChatDatabaseDisabled: false,
			bAVAudioDisabled: false,
			bAVVideoDisabled: false,
			bDeskshareFedDisabled: false,
			bLoginByMobile: false,
			bLoginOverInternet: false,
			bEnableForAnonymousApi: false,
			bProfilePageVisible: false,
			bEnableUserdefinedCustomFields: false,
			bEnableBinaryTransferSend: false,
			mapUserDefinedCustomFields: new ENetUC_Common.AsnStringPairList(),
			bEnableTeamsIntegration: false,
			bLoginOverInternetAllowDesktop: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iUMSecurity",
			"iUMSelfInstall",
			"iComputerIsDomainMember",
			"u8sComputerDomainNT",
			"u8sComputerDomainFQ",
			"u8sDomainController",
			"objGlobalUserRightDetails",
			"iShowAllUsersInAllMonitors",
			"iDisableAllMonitorConfiguration",
			"bAllJournalEntriesVisible",
			"iFeatures",
			"bDeleteJournalEntriesEnabled",
			"bAutoBindLinesForUsersPhoneNumbers",
			"u8slistPresenceDomains",
			"u8sHomeServerIdentification",
			"bInternalChatDisabled",
			"iDeskShareAccess",
			"bPresenceDisabled",
			"bUserUserRightsDisabled",
			"bChatDatabaseDisabled",
			"bAVAudioDisabled",
			"bAVVideoDisabled",
			"bDeskshareFedDisabled",
			"bLoginByMobile",
			"bLoginOverInternet",
			"bEnableForAnonymousApi",
			"bProfilePageVisible",
			"bEnableUserdefinedCustomFields",
			"bEnableBinaryTransferSend",
			"mapUserDefinedCustomFields",
			"bEnableTeamsIntegration",
			"bLoginOverInternetAllowDesktop"
		];
		if (bIncludeOptionals) {
			p.push(
				"objGlobalObserverGroupUserRightDetails",
				"bUseWebAppEnabled",
				"eUserReplicator"
			);
		}
		return p;
	}

	public static type = "AsnUserManagerSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnUserManagerSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iUMSecurity" }),
				new asn1ts.Integer({ name: "iUMSelfInstall" }),
				new asn1ts.Integer({ name: "iComputerIsDomainMember" }),
				new asn1ts.Utf8String({ name: "u8sComputerDomainNT" }),
				new asn1ts.Utf8String({ name: "u8sComputerDomainFQ" }),
				new asn1ts.Utf8String({ name: "u8sDomainController" }),
				ENetUC_Common_AsnContact.AsnUserDynamicRights.getASN1Schema({ name: "objGlobalUserRightDetails" }),
				new asn1ts.Integer({ name: "iShowAllUsersInAllMonitors" }),
				new asn1ts.Integer({ name: "iDisableAllMonitorConfiguration" }),
				new asn1ts.Boolean({ name: "bAllJournalEntriesVisible" }),
				new asn1ts.Integer({ name: "iFeatures" }),
				new asn1ts.Boolean({ name: "bDeleteJournalEntriesEnabled" }),
				new asn1ts.Boolean({ name: "bAutoBindLinesForUsersPhoneNumbers" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistPresenceDomains" }),
				new asn1ts.Utf8String({ name: "u8sHomeServerIdentification" }),
				new asn1ts.Boolean({ name: "bInternalChatDisabled" }),
				new asn1ts.Integer({ name: "iDeskShareAccess" }),
				new asn1ts.Boolean({ name: "bPresenceDisabled" }),
				new asn1ts.Boolean({ name: "bUserUserRightsDisabled" }),
				new asn1ts.Boolean({ name: "bChatDatabaseDisabled" }),
				new asn1ts.Boolean({ name: "bAVAudioDisabled" }),
				new asn1ts.Boolean({ name: "bAVVideoDisabled" }),
				new asn1ts.Boolean({ name: "bDeskshareFedDisabled" }),
				new asn1ts.Boolean({ name: "bLoginByMobile" }),
				new asn1ts.Boolean({ name: "bLoginOverInternet" }),
				new asn1ts.Boolean({ name: "bEnableForAnonymousApi" }),
				new asn1ts.Boolean({ name: "bProfilePageVisible" }),
				new asn1ts.Boolean({ name: "bEnableUserdefinedCustomFields" }),
				new asn1ts.Boolean({ name: "bEnableBinaryTransferSend" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "mapUserDefinedCustomFields" }),
				ENetUC_Common_AsnContact.AsnUserDynamicRights.getASN1Schema({ name: "objGlobalObserverGroupUserRightDetails", idBlock: { optionalID: 0 } }),
				new asn1ts.Boolean({ name: "bEnableTeamsIntegration" }),
				new asn1ts.Boolean({ name: "bLoginOverInternetAllowDesktop" }),
				new asn1ts.Boolean({ name: "bUseWebAppEnabled", idBlock: { optionalID: 1 } }),
				new asn1ts.Enumerated({ name: "eUserReplicator", idBlock: { optionalID: 2 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Security for User Authentication */
	/** (see AsnMgmtEnumUMSecurity) */
	public iUMSecurity!: number;
	/** Security for User Self Installation */
	/** (see AsnMgmtEnumUMSelfInstall) */
	public iUMSelfInstall!: number;
	/**
	 * Ist der Computer Mitglied einer Domain?
	 * Statische Konfiguration, die beim Start des Servers bestimmt wird.
	 * Nicht konfigurierbar
	 */
	public iComputerIsDomainMember!: number;
	/**
	 * NT Domain Name des Computers (ESTOS)
	 * Statische Konfiguration, die beim Start des Servers bestimmt wird.
	 * Nicht konfigurierbar
	 */
	public u8sComputerDomainNT!: string;
	/**
	 * Full Qualified domain name (estos.de)
	 * Statische Konfiguration, die beim Start des Servers bestimmt wird.
	 * Nicht konfigurierbar
	 */
	public u8sComputerDomainFQ!: string;
	/**
	 * Hostname des Domain controller (AVALON)
	 * Statische Konfiguration, die beim Start des Servers bestimmt wird.
	 * Nicht konfigurierbar
	 */
	public u8sDomainController!: string;
	/**
	 * Nutzerrechte die für alle Nutzer gleich gelten.
	 * Die Rechte sind additiv, d.h., wenn hier ein Recht gesetzt wird,
	 * kann es einem Nutzer nicht mehr genommen werden. Soll es keine
	 * globalen Rechte geben, einfach alle Flags auf 0 setzen.
	 */
	public objGlobalUserRightDetails!: ENetUC_Common_AsnContact.AsnUserDynamicRights;
	/**
	 * 1 Wenn alle Benutzer alle Benutzer in den Monitor eingeblendet bekommen.
	 * 0 Wenn nicht.
	 */
	public iShowAllUsersInAllMonitors!: number;
	/**
	 * 1 Wenn kein Benutzer seine Monitorkonfiguration ändern darf.
	 * 0 Wenn die Benutzer ihre Konfiguration ändern dürfen.
	 */
	public iDisableAllMonitorConfiguration!: number;
	/**
	 * true: Clients können das gesamte Journal einsehen,
	 * false (default): Clients können das Journal nicht komplett sehen
	 */
	public bAllJournalEntriesVisible!: boolean;
	/**
	 * Bitfeld für speziell unterstützte Features des UserManagers. Ermöglicht das
	 * Aktivieren und Deaktivieren von Funktionen z.B. auf Basis des Lizenzschlüssels oder
	 * Gegebenheiten, auf die nur der Server direkt Zugriff hat.
	 */
	public iFeatures!: number;
	/** true: Benutzer dürfen Journaleinträge löschen. */
	public bDeleteJournalEntriesEnabled!: boolean;
	/** true: Leitungen zu den Rufnummern des Benutzers automatisch suchen und zuweisen */
	public bAutoBindLinesForUsersPhoneNumbers!: boolean;
	/** Die LIste der Domänen, für die dieser Server auch Präsenzinformationen bereit stellt */
	public u8slistPresenceDomains!: ENetUC_Common.UTF8StringList;
	/** Server Identifikation als Homeserver für Benutzerprofile */
	public u8sHomeServerIdentification!: string;
	/** Unterbindet das Chaten im lokalen Netzwerk. Einstellung kann auch von der Registry beeinflusst werden. */
	public bInternalChatDisabled!: boolean;
	/** (see AsnMgmtDeskShareAccess) */
	public iDeskShareAccess!: number;
	/** true: Presence ist für alle Clients abgeschalten; false oder nicht existent: Presence ist an (default). */
	public bPresenceDisabled!: boolean;
	/** true: Benutzer dürfen keine Rechte über den Client vergeben; false oder nicht existent: Benutzer dürfen (default). */
	public bUserUserRightsDisabled!: boolean;
	/** true: Chats werden nicht in der Datenbank persistiert; false oder nicht existent: Chats werden in der Datenbank persistiert (default). */
	public bChatDatabaseDisabled!: boolean;
	/** true: Audio Chat ist für alle User abgeschalten; default ist an (false). */
	public bAVAudioDisabled!: boolean;
	/** true: Video Chat ist für alle User abgeschalten; default ist an (false). */
	public bAVVideoDisabled!: boolean;
	/** true: Deskshare über Federartion für alle User abgeschalten; default ist an (false). */
	public bDeskshareFedDisabled!: boolean;
	/** true: Benutzer darf sich per Mobile App anmelden */
	public bLoginByMobile!: boolean;
	/** true: Benutzer darf sich von ausserhalb des Intranets (mit Mobile) anmelden */
	public bLoginOverInternet!: boolean;
	/** true: Benutzer ist für Anonyme Benutzer sichtbar, z.B. per suche */
	public bEnableForAnonymousApi!: boolean;
	/** true: Die Profilseite des Benutzers wird dargestellt */
	public bProfilePageVisible!: boolean;
	/** userdefined customfields aktivieren */
	public bEnableUserdefinedCustomFields!: boolean;
	/** binarytransfer enabled; default ist an (true) */
	public bEnableBinaryTransferSend!: boolean;
	/** Liste der UserDefined CustomFields (Key-Value-Liste, Key=Feldbezeichner, Value=Anzeigename) */
	public mapUserDefinedCustomFields!: ENetUC_Common.AsnStringPairList;
	/** globale userrechte fuer user die ueber monitorgruppen andere user im monitor haben. optional wegen kompatibilitaet */
	public objGlobalObserverGroupUserRightDetails?: ENetUC_Common_AsnContact.AsnUserDynamicRights;
	/**
	 * Die naechsten Settings werden in GetCallParams()\/PutCallParams() nicht uebertragen
	 * -&gt; also auch nicht ueber Asn
	 * alle Properties wurden in den Settings gefunden -&gt; Seite im Admin im WizardFall nicht anzeigen
	 * bool m_bFullyConfigured,
	 * Voreinstellung zur Verwendung von Kontaktdaten d. CtiUser
	 * iDefaultPhonebookFlags,
	 * die liste der domänen, fuer die web2procall presence geleakt wird
	 * FIVE-1351
	 * mapWebPresenceDomains		AsnUserDynamicRights,
	 * use anonymous user management mit lazy initialization
	 * LC-593
	 * bUseLazyAnonymousUserManager		BOOLEAN,
	 * MS-TeamsIntegration enabled; default ist aus (false)
	 */
	public bEnableTeamsIntegration!: boolean;
	/** true: Benutzer darf sich von ausserhalb des Intranets auch mit Desktop Clients anmelden */
	public bLoginOverInternetAllowDesktop!: boolean;
	/** true: Benutzer darf sich mit der WebApp (PWA) anmelden */
	public bUseWebAppEnabled?: boolean;
	/**
	 * Wich user replicator should be used (defaults to eNONE)
	 * @added 01.07.2024
	 */
	public eUserReplicator?: AsnEUserReplicatorType;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtUserManagerLDAPAttributeList extends Array<AsnMgmtUserManagerLDAPAttribute> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtUserManagerLDAPAttribute.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUserManagerActiveDirectorySettings {
	public constructor(that: AsnMgmtUserManagerActiveDirectorySettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUserManagerActiveDirectorySettings {
		return new AsnMgmtUserManagerActiveDirectorySettings({
			u8sHost: "",
			iPort: 0,
			u8sDomain: "",
			u8sUsername: "",
			u8sPassword: "",
			iForceLDAPS: 0,
			u8sBaseDNUsers: "",
			u8sBaseDNComputers: "",
			u8sBaseDNGroups: "",
			bLDAPBaseAttributeWriteBackEnabled: false,
			objAttributeMapping: new AsnMgmtUserManagerLDAPAttributeList(),
			iPhoneNumberPreformatFormat: 0,
			iExtensionVersion: 0,
			iLastErrorCode: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sHost",
			"iPort",
			"u8sDomain",
			"u8sUsername",
			"u8sPassword",
			"iForceLDAPS",
			"u8sBaseDNUsers",
			"u8sBaseDNComputers",
			"u8sBaseDNGroups",
			"bLDAPBaseAttributeWriteBackEnabled",
			"objAttributeMapping",
			"iPhoneNumberPreformatFormat",
			"iExtensionVersion",
			"iLastErrorCode"
		];
		if (bIncludeOptionals) {
			p.push(
				"u8sLDAPFilterUsers",
				"u8sLDAPFilterGroups",
				"u8sLDAPFilterComputers"
			);
		}
		return p;
	}

	public static type = "AsnMgmtUserManagerActiveDirectorySettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUserManagerActiveDirectorySettings",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sHost" }),
				new asn1ts.Integer({ name: "iPort" }),
				new asn1ts.Utf8String({ name: "u8sDomain" }),
				new asn1ts.Utf8String({ name: "u8sUsername" }),
				new asn1ts.Utf8String({ name: "u8sPassword" }),
				new asn1ts.Integer({ name: "iForceLDAPS" }),
				new asn1ts.Utf8String({ name: "u8sBaseDNUsers" }),
				new asn1ts.Utf8String({ name: "u8sBaseDNComputers" }),
				new asn1ts.Utf8String({ name: "u8sBaseDNGroups" }),
				new asn1ts.Boolean({ name: "bLDAPBaseAttributeWriteBackEnabled" }),
				AsnMgmtUserManagerLDAPAttributeList.getASN1Schema({ name: "objAttributeMapping" }),
				new asn1ts.Integer({ name: "iPhoneNumberPreformatFormat" }),
				new asn1ts.Integer({ name: "iExtensionVersion" }),
				new asn1ts.Integer({ name: "iLastErrorCode" }),
				new asn1ts.Utf8String({ name: "u8sLDAPFilterUsers", idBlock: { optionalID: 0 } }),
				new asn1ts.Utf8String({ name: "u8sLDAPFilterGroups", idBlock: { optionalID: 1 } }),
				new asn1ts.Utf8String({ name: "u8sLDAPFilterComputers", idBlock: { optionalID: 2 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Active Directory Server */
	public u8sHost!: string;
	/** Active Directory Server LDAP Port */
	public iPort!: number;
	/** Domain */
	public u8sDomain!: string;
	/** Username (Administrator\@estos.de) */
	public u8sUsername!: string;
	/** Password */
	public u8sPassword!: string;
	/** LDAPS erzwingen */
	public iForceLDAPS!: number;
	/**
	 * User BaseDN aus der Konfiguration.
	 * Wenn dieser leer ist wird er automatisch bestimmt. (defaultNamingContext)
	 */
	public u8sBaseDNUsers!: string;
	/**
	 * Computer BaseDN aus der Konfiguration.
	 * Wenn dieser leer ist wird er automatisch bestimmt. (defaultNamingContext)
	 */
	public u8sBaseDNComputers!: string;
	/**
	 * Group BaseDN aus der Konfiguration.
	 * Wenn dieser leer ist wird er automatisch bestimmt. (defaultNamingContext)
	 */
	public u8sBaseDNGroups!: string;
	/** Zurückschreiben von LDAP Basisattributen wird unterstützt **\/ */
	public bLDAPBaseAttributeWriteBackEnabled!: boolean;
	/** Attributmapping für die CtiServer LDAP Attribute (Welches Benutzerprofilfeld wird aus welchem LDAP Feld geholt...) */
	public objAttributeMapping!: AsnMgmtUserManagerLDAPAttributeList;
	/**
	 * Rufnummernformat welches der Admin beim zuweisen von Leitungen automatisch anwendet.
	 * Unabhängig davon werden die Rufnummern genau so in die Benutzerverwaltung geschrieben
	 * wie diese im Admin im Benutzerprofil eingegeben wurden. Es ist eine reine Vorformatierung.
	 * (see AsnMgmtPhoneNumberFormats)
	 */
	public iPhoneNumberPreformatFormat!: number;
	/**
	 * Dieses Property ist kein Settings Property sondern ein Laufzeit Property.
	 * Es ist in den Settings hinterlegt da das generische Interface zu den Benutzerverwaltungen für ein Property kein weitere Methode erhält.
	 * Schema Erweiterungsversion
	 * (see AsnMgmtSchemaExtensionVersion)
	 */
	public iExtensionVersion!: number;
	/**
	 * Dieses Property ist kein Settings Property sondern ein Laufzeit Property.
	 * Es ist in den Settings hinterlegt da das generische Interface zu den Benutzerverwaltungen für ein Property kein weitere Methode erhält.
	 * Letzter Error Code
	 */
	public iLastErrorCode!: number;
	/** LDAP Filter fuer User-Objekte */
	public u8sLDAPFilterUsers?: string;
	/** LDAP Filter fuer Gruppen-Objekte */
	public u8sLDAPFilterGroups?: string;
	/** LDAP Filter fuer Computer-Objekte */
	public u8sLDAPFilterComputers?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUMInterfaceSettingsResult {
	public constructor(that: AsnMgmtGetUMInterfaceSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUMInterfaceSettingsResult {
		return new AsnMgmtGetUMInterfaceSettingsResult({
			settings: AsnMgmtUserManagerActiveDirectorySettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetUMInterfaceSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUMInterfaceSettingsResult",
			...params,
			value: [
				AsnMgmtUserManagerActiveDirectorySettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtUserManagerActiveDirectorySettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetUMInterfaceSettingsArgument {
	public constructor(that: AsnMgmtSetUMInterfaceSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetUMInterfaceSettingsArgument {
		return new AsnMgmtSetUMInterfaceSettingsArgument({
			iInterfaceType: 0,
			settings: AsnMgmtUserManagerActiveDirectorySettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iInterfaceType",
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetUMInterfaceSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetUMInterfaceSettingsArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iInterfaceType" }),
				AsnMgmtUserManagerActiveDirectorySettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnMgmtUserManagerInterfaceType) */
	public iInterfaceType!: number;
	public settings!: AsnMgmtUserManagerActiveDirectorySettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUMSettingsResult {
	public constructor(that: AsnMgmtGetUMSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUMSettingsResult {
		return new AsnMgmtGetUMSettingsResult({
			settings: AsnUserManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetUMSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUMSettingsResult",
			...params,
			value: [
				AsnUserManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnUserManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetUMSettingsArgument {
	public constructor(that: AsnMgmtSetUMSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetUMSettingsArgument {
		return new AsnMgmtSetUMSettingsArgument({
			settings: AsnUserManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetUMSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetUMSettingsArgument",
			...params,
			value: [
				AsnUserManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnUserManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtFeatureCountList extends Array<AsnMgmtFeatureCount> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtFeatureCount.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtLicenseDetails {
	public constructor(that: AsnMgmtLicenseDetails) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLicenseDetails {
		return new AsnMgmtLicenseDetails({
			featureCount: new AsnMgmtFeatureCountList(),
			iProductID: 0,
			iBaseProductIDRequired: 0,
			iLicenseVersion: 0,
			bIsTrialFeatureLicense: false,
			bIsUpgradeLicense: false,
			bIsUpgradeLicenseAnyVersion: false,
			iRequiredOldLicenseVersion: 0,
			bRequiresUpgradeLicense: false,
			bIsTestLicense: false,
			bIsNotForResale: false,
			bRequiresHWBinding: false,
			bIsHWBound: false,
			bIsDynamicLicense: false,
			u8sLicenseCode: "",
			validTo: new Date(),
			contractEnd: new Date(),
			u8sDescription: "",
			bIsExpired: false,
			iCompromiseStatus: 0,
			iLicenseSerial: 0,
			iGenuineStatus: 0,
			genuineCheckTimeStamp: new Date()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"featureCount",
			"iProductID",
			"iBaseProductIDRequired",
			"iLicenseVersion",
			"bIsTrialFeatureLicense",
			"bIsUpgradeLicense",
			"bIsUpgradeLicenseAnyVersion",
			"iRequiredOldLicenseVersion",
			"bRequiresUpgradeLicense",
			"bIsTestLicense",
			"bIsNotForResale",
			"bRequiresHWBinding",
			"bIsHWBound",
			"bIsDynamicLicense",
			"u8sLicenseCode",
			"validTo",
			"contractEnd",
			"u8sDescription",
			"bIsExpired",
			"iCompromiseStatus",
			"iLicenseSerial",
			"iGenuineStatus",
			"genuineCheckTimeStamp"
		];
		return p;
	}

	public static type = "AsnMgmtLicenseDetails";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLicenseDetails",
			...params,
			value: [
				AsnMgmtFeatureCountList.getASN1Schema({ name: "featureCount" }),
				new asn1ts.Integer({ name: "iProductID" }),
				new asn1ts.Integer({ name: "iBaseProductIDRequired" }),
				new asn1ts.Integer({ name: "iLicenseVersion" }),
				new asn1ts.Boolean({ name: "bIsTrialFeatureLicense" }),
				new asn1ts.Boolean({ name: "bIsUpgradeLicense" }),
				new asn1ts.Boolean({ name: "bIsUpgradeLicenseAnyVersion" }),
				new asn1ts.Integer({ name: "iRequiredOldLicenseVersion" }),
				new asn1ts.Boolean({ name: "bRequiresUpgradeLicense" }),
				new asn1ts.Boolean({ name: "bIsTestLicense" }),
				new asn1ts.Boolean({ name: "bIsNotForResale" }),
				new asn1ts.Boolean({ name: "bRequiresHWBinding" }),
				new asn1ts.Boolean({ name: "bIsHWBound" }),
				new asn1ts.Boolean({ name: "bIsDynamicLicense" }),
				new asn1ts.Utf8String({ name: "u8sLicenseCode" }),
				new asn1ts.Real({ name: "validTo" }),
				new asn1ts.Real({ name: "contractEnd" }),
				new asn1ts.Utf8String({ name: "u8sDescription" }),
				new asn1ts.Boolean({ name: "bIsExpired" }),
				new asn1ts.Integer({ name: "iCompromiseStatus" }),
				new asn1ts.Integer({ name: "iLicenseSerial" }),
				new asn1ts.Integer({ name: "iGenuineStatus" }),
				new asn1ts.Real({ name: "genuineCheckTimeStamp" }),
				new asn1ts.Extension()
			]
		});
	}

	public featureCount!: AsnMgmtFeatureCountList;
	public iProductID!: number;
	public iBaseProductIDRequired!: number;
	public iLicenseVersion!: number;
	public bIsTrialFeatureLicense!: boolean;
	public bIsUpgradeLicense!: boolean;
	public bIsUpgradeLicenseAnyVersion!: boolean;
	public iRequiredOldLicenseVersion!: number;
	public bRequiresUpgradeLicense!: boolean;
	public bIsTestLicense!: boolean;
	public bIsNotForResale!: boolean;
	public bRequiresHWBinding!: boolean;
	public bIsHWBound!: boolean;
	public bIsDynamicLicense!: boolean;
	public u8sLicenseCode!: string;
	public validTo!: Date;
	public contractEnd!: Date;
	public u8sDescription!: string;
	public bIsExpired!: boolean;
	/** (see AsnMgmtECOMPROMISESTATUS) */
	public iCompromiseStatus!: number;
	public iLicenseSerial!: number;
	public iGenuineStatus!: number;
	public genuineCheckTimeStamp!: Date;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLicenseResult {
	public constructor(that: AsnMgmtGetLicenseResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLicenseResult {
		return new AsnMgmtGetLicenseResult({
			details: AsnMgmtLicenseDetails["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"details"
		];
		return p;
	}

	public static type = "AsnMgmtGetLicenseResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLicenseResult",
			...params,
			value: [
				AsnMgmtLicenseDetails.getASN1Schema({ name: "details" }),
				new asn1ts.Extension()
			]
		});
	}

	public details!: AsnMgmtLicenseDetails;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtEUCWSStatus {
	public constructor(that: AsnMgmtEUCWSStatus) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEUCWSStatus {
		return new AsnMgmtEUCWSStatus({
			u8sWCSID: "",
			iStatus: 0,
			u8sURL: "",
			u8sUCSID: "",
			u8sLastError: "",
			bUCConnect: false,
			capabilities: AsnMgmtEUCWSCapabilities["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sWCSID",
			"iStatus",
			"u8sURL",
			"u8sUCSID",
			"u8sLastError",
			"bUCConnect",
			"capabilities"
		];
		return p;
	}

	public static type = "AsnMgmtEUCWSStatus";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEUCWSStatus",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sWCSID" }),
				new asn1ts.Integer({ name: "iStatus" }),
				new asn1ts.Utf8String({ name: "u8sURL" }),
				new asn1ts.Utf8String({ name: "u8sUCSID" }),
				new asn1ts.Utf8String({ name: "u8sLastError" }),
				new asn1ts.Boolean({ name: "bUCConnect" }),
				AsnMgmtEUCWSCapabilities.getASN1Schema({ name: "capabilities" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sWCSID!: string;
	public iStatus!: number;
	public u8sURL!: string;
	public u8sUCSID!: string;
	public u8sLastError!: string;
	public bUCConnect!: boolean;
	public capabilities!: AsnMgmtEUCWSCapabilities;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtEUCWSStatusList extends Array<AsnMgmtEUCWSStatus> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtEUCWSStatus.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtEUCWebServicesStatus {
	public constructor(that: AsnMgmtEUCWebServicesStatus) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEUCWebServicesStatus {
		return new AsnMgmtEUCWebServicesStatus({
			u8sUCSID: "",
			ucConnectStatus: AsnMgmtEUCWSStatus["initEmpty"].call(0),
			ucwsStatusMap: new AsnMgmtEUCWSStatusList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sUCSID",
			"ucConnectStatus",
			"ucwsStatusMap"
		];
		return p;
	}

	public static type = "AsnMgmtEUCWebServicesStatus";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEUCWebServicesStatus",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sUCSID" }),
				AsnMgmtEUCWSStatus.getASN1Schema({ name: "ucConnectStatus" }),
				AsnMgmtEUCWSStatusList.getASN1Schema({ name: "ucwsStatusMap" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sUCSID!: string;
	public ucConnectStatus!: AsnMgmtEUCWSStatus;
	public ucwsStatusMap!: AsnMgmtEUCWSStatusList;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtEUCWebServiceConfigList extends Array<AsnMgmtEUCWebServiceConfig> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtEUCWebServiceConfig.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtEUCWebServiceConfig4Admin {
	public constructor(that: AsnMgmtEUCWebServiceConfig4Admin) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtEUCWebServiceConfig4Admin {
		return new AsnMgmtEUCWebServiceConfig4Admin({
			u8sServicesUser: "",
			u8sServicesPassword: "",
			configList: new AsnMgmtEUCWebServiceConfigList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sServicesUser",
			"u8sServicesPassword",
			"configList"
		];
		return p;
	}

	public static type = "AsnMgmtEUCWebServiceConfig4Admin";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtEUCWebServiceConfig4Admin",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sServicesUser" }),
				new asn1ts.Utf8String({ name: "u8sServicesPassword" }),
				AsnMgmtEUCWebServiceConfigList.getASN1Schema({ name: "configList" }),
				new asn1ts.Extension()
			]
		});
	}

	public u8sServicesUser!: string;
	public u8sServicesPassword!: string;
	public configList!: AsnMgmtEUCWebServiceConfigList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLocalWebServiceConfig4AdminResult {
	public constructor(that: AsnMgmtGetLocalWebServiceConfig4AdminResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLocalWebServiceConfig4AdminResult {
		return new AsnMgmtGetLocalWebServiceConfig4AdminResult({
			configs: new AsnMgmtEUCWebServiceConfigList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"configs"
		];
		return p;
	}

	public static type = "AsnMgmtGetLocalWebServiceConfig4AdminResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLocalWebServiceConfig4AdminResult",
			...params,
			value: [
				AsnMgmtEUCWebServiceConfigList.getASN1Schema({ name: "configs" }),
				new asn1ts.Extension()
			]
		});
	}

	public configs!: AsnMgmtEUCWebServiceConfigList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUCConnectSettings {
	public constructor(that: AsnMgmtUCConnectSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUCConnectSettings {
		return new AsnMgmtUCConnectSettings({
			iMobileAccessOption: 0,
			u8sUCSID: "",
			u8sControllerAddress: "",
			u8sUCSPassword: "",
			u8sAccountMail: "",
			iTurnEnabled: 0,
			u8sPushServiceAddress: "",
			iPushPolicyAccepted: 0,
			u8sPortalAddress: "",
			webServiceExternalAccess: AsnMgmtWebServiceAccessParams["initEmpty"].call(0),
			bUseProxy: 0,
			u8sProxyServer: "",
			u8sProxyUser: "",
			u8sProxyPassword: "",
			u8sBypassServer: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iMobileAccessOption",
			"u8sUCSID",
			"u8sControllerAddress",
			"u8sUCSPassword",
			"u8sAccountMail",
			"iTurnEnabled",
			"u8sPushServiceAddress",
			"iPushPolicyAccepted",
			"u8sPortalAddress",
			"webServiceExternalAccess",
			"bUseProxy",
			"u8sProxyServer",
			"u8sProxyUser",
			"u8sProxyPassword",
			"u8sBypassServer"
		];
		return p;
	}

	public static type = "AsnMgmtUCConnectSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUCConnectSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iMobileAccessOption" }),
				new asn1ts.Utf8String({ name: "u8sUCSID" }),
				new asn1ts.Utf8String({ name: "u8sControllerAddress" }),
				new asn1ts.Utf8String({ name: "u8sUCSPassword" }),
				new asn1ts.Utf8String({ name: "u8sAccountMail" }),
				new asn1ts.Integer({ name: "iTurnEnabled" }),
				new asn1ts.Utf8String({ name: "u8sPushServiceAddress" }),
				new asn1ts.Integer({ name: "iPushPolicyAccepted" }),
				new asn1ts.Utf8String({ name: "u8sPortalAddress" }),
				AsnMgmtWebServiceAccessParams.getASN1Schema({ name: "webServiceExternalAccess" }),
				new asn1ts.Integer({ name: "bUseProxy" }),
				new asn1ts.Utf8String({ name: "u8sProxyServer" }),
				new asn1ts.Utf8String({ name: "u8sProxyUser" }),
				new asn1ts.Utf8String({ name: "u8sProxyPassword" }),
				new asn1ts.Utf8String({ name: "u8sBypassServer" }),
				new asn1ts.Extension()
			]
		});
	}

	/** (see AsnMgmtMobileAccessOption) */
	public iMobileAccessOption!: number;
	public u8sUCSID!: string;
	public u8sControllerAddress!: string;
	public u8sUCSPassword!: string;
	public u8sAccountMail!: string;
	public iTurnEnabled!: number;
	public u8sPushServiceAddress!: string;
	public iPushPolicyAccepted!: number;
	public u8sPortalAddress!: string;
	public webServiceExternalAccess!: AsnMgmtWebServiceAccessParams;
	public bUseProxy!: number;
	public u8sProxyServer!: string;
	public u8sProxyUser!: string;
	public u8sProxyPassword!: string;
	public u8sBypassServer!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetDatabaseManagerSettingsResult {
	public constructor(that: AsnMgmtGetDatabaseManagerSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetDatabaseManagerSettingsResult {
		return new AsnMgmtGetDatabaseManagerSettingsResult({
			settings: AsnMgmtDatabaseManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetDatabaseManagerSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetDatabaseManagerSettingsResult",
			...params,
			value: [
				AsnMgmtDatabaseManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtDatabaseManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetDatabaseManagerSettingsArgument {
	public constructor(that: AsnMgmtSetDatabaseManagerSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetDatabaseManagerSettingsArgument {
		return new AsnMgmtSetDatabaseManagerSettingsArgument({
			settings: AsnMgmtDatabaseManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetDatabaseManagerSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetDatabaseManagerSettingsArgument",
			...params,
			value: [
				AsnMgmtDatabaseManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtDatabaseManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAvailableDatabasesArgument {
	public constructor(that: AsnMgmtGetAvailableDatabasesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAvailableDatabasesArgument {
		return new AsnMgmtGetAvailableDatabasesArgument({
			settings: AsnMgmtDatabaseManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetAvailableDatabasesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAvailableDatabasesArgument",
			...params,
			value: [
				AsnMgmtDatabaseManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtDatabaseManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnListeningInterfaceList extends Array<AsnListeningInterface> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnListeningInterface.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetListeningInterfacesResult {
	public constructor(that: AsnMgmtGetListeningInterfacesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetListeningInterfacesResult {
		return new AsnMgmtGetListeningInterfacesResult({
			listeningInterfaces: new AsnListeningInterfaceList(),
			u8sServerNameFQDN: "",
			iSupportedListenInterfaceTypes: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"listeningInterfaces",
			"u8sServerNameFQDN",
			"iSupportedListenInterfaceTypes"
		];
		return p;
	}

	public static type = "AsnMgmtGetListeningInterfacesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetListeningInterfacesResult",
			...params,
			value: [
				AsnListeningInterfaceList.getASN1Schema({ name: "listeningInterfaces" }),
				new asn1ts.Utf8String({ name: "u8sServerNameFQDN" }),
				new asn1ts.Integer({ name: "iSupportedListenInterfaceTypes" }),
				new asn1ts.Extension()
			]
		});
	}

	public listeningInterfaces!: AsnListeningInterfaceList;
	public u8sServerNameFQDN!: string;
	public iSupportedListenInterfaceTypes!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetListeningInterfacesArgument {
	public constructor(that: AsnMgmtSetListeningInterfacesArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetListeningInterfacesArgument {
		return new AsnMgmtSetListeningInterfacesArgument({
			listeningInterfaces: new AsnListeningInterfaceList(),
			bDisconnectClients: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"listeningInterfaces",
			"bDisconnectClients"
		];
		return p;
	}

	public static type = "AsnMgmtSetListeningInterfacesArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetListeningInterfacesArgument",
			...params,
			value: [
				AsnListeningInterfaceList.getASN1Schema({ name: "listeningInterfaces" }),
				new asn1ts.Boolean({ name: "bDisconnectClients" }),
				new asn1ts.Extension()
			]
		});
	}

	public listeningInterfaces!: AsnListeningInterfaceList;
	public bDisconnectClients!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnListeningInterfaceStatusList extends Array<AsnListeningInterfaceStatus> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnListeningInterfaceStatus.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetListeningInterfaceStatusesResult {
	public constructor(that: AsnMgmtGetListeningInterfaceStatusesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetListeningInterfaceStatusesResult {
		return new AsnMgmtGetListeningInterfaceStatusesResult({
			listeningInterfaceStatuses: new AsnListeningInterfaceStatusList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"listeningInterfaceStatuses"
		];
		return p;
	}

	public static type = "AsnMgmtGetListeningInterfaceStatusesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetListeningInterfaceStatusesResult",
			...params,
			value: [
				AsnListeningInterfaceStatusList.getASN1Schema({ name: "listeningInterfaceStatuses" }),
				new asn1ts.Extension()
			]
		});
	}

	public listeningInterfaceStatuses!: AsnListeningInterfaceStatusList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnListenInterfaceStatusesEventArgument {
	public constructor(that: AsnMgmtOnListenInterfaceStatusesEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnListenInterfaceStatusesEventArgument {
		return new AsnMgmtOnListenInterfaceStatusesEventArgument({
			statuses: new AsnListeningInterfaceStatusList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"statuses"
		];
		return p;
	}

	public static type = "AsnMgmtOnListenInterfaceStatusesEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnListenInterfaceStatusesEventArgument",
			...params,
			value: [
				AsnListeningInterfaceStatusList.getASN1Schema({ name: "statuses" }),
				new asn1ts.Extension()
			]
		});
	}

	public statuses!: AsnListeningInterfaceStatusList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnListenInterfaceStatusesChangedEventArgument {
	public constructor(that: AsnMgmtOnListenInterfaceStatusesChangedEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnListenInterfaceStatusesChangedEventArgument {
		return new AsnMgmtOnListenInterfaceStatusesChangedEventArgument({
			statusesAdded: new AsnListeningInterfaceStatusList(),
			statusesUpdated: new AsnListeningInterfaceStatusList(),
			statusesRemoved: new AsnListeningInterfaceStatusList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"statusesAdded",
			"statusesUpdated",
			"statusesRemoved"
		];
		return p;
	}

	public static type = "AsnMgmtOnListenInterfaceStatusesChangedEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnListenInterfaceStatusesChangedEventArgument",
			...params,
			value: [
				AsnListeningInterfaceStatusList.getASN1Schema({ name: "statusesAdded" }),
				AsnListeningInterfaceStatusList.getASN1Schema({ name: "statusesUpdated" }),
				AsnListeningInterfaceStatusList.getASN1Schema({ name: "statusesRemoved" }),
				new asn1ts.Extension()
			]
		});
	}

	public statusesAdded!: AsnListeningInterfaceStatusList;
	public statusesUpdated!: AsnListeningInterfaceStatusList;
	public statusesRemoved!: AsnListeningInterfaceStatusList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtLogFileSettings {
	public constructor(that: AsnMgmtLogFileSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtLogFileSettings {
		return new AsnMgmtLogFileSettings({
			iWindowsEventLogLevel: 0,
			iLogLevel: 0,
			iNumberOfLogfilesToKeep: 0,
			iMailToAdmin: 0,
			iLogfileSize: 0,
			u8sLogFilePath: "",
			iPerformanceMonitoring: 0,
			mediaServerLogFileSettings: AsnMediaServerLogFile["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iWindowsEventLogLevel",
			"iLogLevel",
			"iNumberOfLogfilesToKeep",
			"iMailToAdmin",
			"iLogfileSize",
			"u8sLogFilePath",
			"iPerformanceMonitoring",
			"mediaServerLogFileSettings"
		];
		return p;
	}

	public static type = "AsnMgmtLogFileSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtLogFileSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iWindowsEventLogLevel" }),
				new asn1ts.Integer({ name: "iLogLevel" }),
				new asn1ts.Integer({ name: "iNumberOfLogfilesToKeep" }),
				new asn1ts.Integer({ name: "iMailToAdmin" }),
				new asn1ts.Integer({ name: "iLogfileSize" }),
				new asn1ts.Utf8String({ name: "u8sLogFilePath" }),
				new asn1ts.Integer({ name: "iPerformanceMonitoring" }),
				AsnMediaServerLogFile.getASN1Schema({ name: "mediaServerLogFileSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	public iWindowsEventLogLevel!: number;
	public iLogLevel!: number;
	public iNumberOfLogfilesToKeep!: number;
	public iMailToAdmin!: number;
	public iLogfileSize!: number;
	public u8sLogFilePath!: string;
	public iPerformanceMonitoring!: number;
	public mediaServerLogFileSettings!: AsnMediaServerLogFile;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLogFileSettingsResult {
	public constructor(that: AsnMgmtGetLogFileSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLogFileSettingsResult {
		return new AsnMgmtGetLogFileSettingsResult({
			logfileSettings: AsnMgmtLogFileSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"logfileSettings"
		];
		return p;
	}

	public static type = "AsnMgmtGetLogFileSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLogFileSettingsResult",
			...params,
			value: [
				AsnMgmtLogFileSettings.getASN1Schema({ name: "logfileSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	public logfileSettings!: AsnMgmtLogFileSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLogFileSettingsArgument {
	public constructor(that: AsnMgmtGetLogFileSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLogFileSettingsArgument {
		return new AsnMgmtGetLogFileSettingsArgument({
			logfileSettings: AsnMgmtLogFileSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"logfileSettings"
		];
		return p;
	}

	public static type = "AsnMgmtGetLogFileSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLogFileSettingsArgument",
			...params,
			value: [
				AsnMgmtLogFileSettings.getASN1Schema({ name: "logfileSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	public logfileSettings!: AsnMgmtLogFileSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnNumberFormatRegExpressListMgmt extends Array<AsnNumberFormatRegExpressionMgmt> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnNumberFormatRegExpressionMgmt.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnNumberFormatRegExpressionsMgmt {
	public constructor(that: AsnNumberFormatRegExpressionsMgmt) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnNumberFormatRegExpressionsMgmt {
		return new AsnNumberFormatRegExpressionsMgmt({
			bIsReadOnlyFromFile: false,
			formatRules: new AsnNumberFormatRegExpressListMgmt()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"bIsReadOnlyFromFile",
			"formatRules"
		];
		return p;
	}

	public static type = "AsnNumberFormatRegExpressionsMgmt";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnNumberFormatRegExpressionsMgmt",
			...params,
			value: [
				new asn1ts.Boolean({ name: "bIsReadOnlyFromFile" }),
				AsnNumberFormatRegExpressListMgmt.getASN1Schema({ name: "formatRules" }),
				new asn1ts.Extension()
			]
		});
	}

	public bIsReadOnlyFromFile!: boolean;
	public formatRules!: AsnNumberFormatRegExpressListMgmt;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnRuleSoftphoneEmergencyMgmtListMgmt extends Array<AsnRuleSoftphoneEmergencyMgmt> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnRuleSoftphoneEmergencyMgmt.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnELocalDialingRuleForeignPNALocalCallItemList extends Array<AsnELocalDialingRuleForeignPNALocalCallItem> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnELocalDialingRuleForeignPNALocalCallItem.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnELCRProviderList extends Array<AsnELCRProvider> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnELCRProvider.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnELCRZoneList extends Array<AsnELCRZone> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnELCRZone.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnLocationInformationMgmt {
	public constructor(that: AsnLocationInformationMgmt) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnLocationInformationMgmt {
		return new AsnLocationInformationMgmt({
			u8sLocationCheckSum: "",
			iCountryID: 0,
			u8sCountryCode: "",
			u8sLocalPrefix: "",
			u8sNationalPrefix: "",
			u8sInternationalPrefix: "",
			u8sLocalDialingRule: "",
			u8sNationalDialingRule: "",
			u8sInternationalDialingRule: "",
			u8sLocalDialingRuleHomePNALocal: "",
			u8sLocalDialingRuleHomePNAToll: "",
			u8sLocalDialingRuleForeignPNALocal: "",
			iLanguage: 0,
			u8sCityCodeNoPrefix: "",
			bNoLocalDialing: false,
			u8sVanityNumbers: "",
			bUseVanity: false,
			iRemoteTapiNumberFormat: 0,
			iRemoteTapiDialFormat: 0,
			iRemoteTapiLineNames: 0,
			iDialingNumberFormat: 0,
			bFixedNumberLenExtensionDTMFDialing: false,
			bMobileDeviceLocation: false,
			bShowExtendedSettings: false,
			bMultiLocationSupport: false,
			bAutoCreateOtherLocationRules: false,
			bAllowNumberSearchOtherLocations: false,
			bShortenOtherLocationSCNumbersForDialing: false,
			bUseTkSystem: false,
			u8sTKAnschlussNr: "",
			u8sDDIRangeBegin: "",
			u8sDDIRangeEnd: "",
			u8sTKLocalAccessCode: "",
			u8sTKLongDistanceAccessCode: "",
			u8sTKInternationalAccessCode: "",
			u8sTKPrivateAccessCode: "",
			u8sTKForwardingAccessCode: "",
			iTKMinLenInternalNumbers: 0,
			iTKMaxLenInternalNumbers: 0,
			u8slistTKAkzListRemoveIn: new ENetUC_Common.UTF8StringList(),
			u8slistTKAkzListRemoveOut: new ENetUC_Common.UTF8StringList(),
			u8slistTKAkzListRemoveForwarding: new ENetUC_Common.UTF8StringList(),
			iConnectedIDDealing: 0,
			u8slistTKAkzListRemoveConnectedIDIn: new ENetUC_Common.UTF8StringList(),
			u8slistTKAkzListRemoveConnectedIDOut: new ENetUC_Common.UTF8StringList(),
			numberFormatInternal: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatExternal: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatAutomaticOtherLocationsDDItoSC: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatAutomaticOtherLocationsSCtoDDI: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatRegExpressListIn: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatRegExpressListOut: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatRegExpressListDial: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatRegExpressListFinalDial: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			numberFormatRegExpressLinePhoneNumbers: AsnNumberFormatRegExpressionsMgmt["initEmpty"].call(0),
			u8sLocationID: "",
			iLocalDialingRuleHomePNAFlag: 0,
			u8slistLocalDialingRulesHomePNALocalCalls: new ENetUC_Common.UTF8StringList(),
			u8slistLocalDialingRulesHomePNATollCalls: new ENetUC_Common.UTF8StringList(),
			iLocalDialingRuleForeignPNAFlag: 0,
			localDialingRuleForeignPNALocalCallItemList: new AsnELocalDialingRuleForeignPNALocalCallItemList(),
			bUseAdvancedLCR: false,
			lCRProviderVector: new AsnELCRProviderList(),
			lCRZoneList: new AsnELCRZoneList(),
			projectPINRules: new ENetUC_Common_SIPCTI.AsnProjectPinRuleList(),
			bRulesSoftphoneEmergencyEnabled: false,
			bRulesSoftphoneEmergencyClientWarningEnabled: false,
			rulesSoftphoneEmergency: new AsnRuleSoftphoneEmergencyMgmtListMgmt()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sLocationCheckSum",
			"iCountryID",
			"u8sCountryCode",
			"u8sLocalPrefix",
			"u8sNationalPrefix",
			"u8sInternationalPrefix",
			"u8sLocalDialingRule",
			"u8sNationalDialingRule",
			"u8sInternationalDialingRule",
			"u8sLocalDialingRuleHomePNALocal",
			"u8sLocalDialingRuleHomePNAToll",
			"u8sLocalDialingRuleForeignPNALocal",
			"iLanguage",
			"u8sCityCodeNoPrefix",
			"bNoLocalDialing",
			"u8sVanityNumbers",
			"bUseVanity",
			"iRemoteTapiNumberFormat",
			"iRemoteTapiDialFormat",
			"iRemoteTapiLineNames",
			"iDialingNumberFormat",
			"bFixedNumberLenExtensionDTMFDialing",
			"bMobileDeviceLocation",
			"bShowExtendedSettings",
			"bMultiLocationSupport",
			"bAutoCreateOtherLocationRules",
			"bAllowNumberSearchOtherLocations",
			"bShortenOtherLocationSCNumbersForDialing",
			"bUseTkSystem",
			"u8sTKAnschlussNr",
			"u8sDDIRangeBegin",
			"u8sDDIRangeEnd",
			"u8sTKLocalAccessCode",
			"u8sTKLongDistanceAccessCode",
			"u8sTKInternationalAccessCode",
			"u8sTKPrivateAccessCode",
			"u8sTKForwardingAccessCode",
			"iTKMinLenInternalNumbers",
			"iTKMaxLenInternalNumbers",
			"u8slistTKAkzListRemoveIn",
			"u8slistTKAkzListRemoveOut",
			"u8slistTKAkzListRemoveForwarding",
			"iConnectedIDDealing",
			"u8slistTKAkzListRemoveConnectedIDIn",
			"u8slistTKAkzListRemoveConnectedIDOut",
			"numberFormatInternal",
			"numberFormatExternal",
			"numberFormatAutomaticOtherLocationsDDItoSC",
			"numberFormatAutomaticOtherLocationsSCtoDDI",
			"numberFormatRegExpressListIn",
			"numberFormatRegExpressListOut",
			"numberFormatRegExpressListDial",
			"numberFormatRegExpressListFinalDial",
			"numberFormatRegExpressLinePhoneNumbers",
			"u8sLocationID",
			"iLocalDialingRuleHomePNAFlag",
			"u8slistLocalDialingRulesHomePNALocalCalls",
			"u8slistLocalDialingRulesHomePNATollCalls",
			"iLocalDialingRuleForeignPNAFlag",
			"localDialingRuleForeignPNALocalCallItemList",
			"bUseAdvancedLCR",
			"lCRProviderVector",
			"lCRZoneList",
			"projectPINRules",
			"bRulesSoftphoneEmergencyEnabled",
			"bRulesSoftphoneEmergencyClientWarningEnabled",
			"rulesSoftphoneEmergency"
		];
		return p;
	}

	public static type = "AsnLocationInformationMgmt";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnLocationInformationMgmt",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sLocationCheckSum" }),
				new asn1ts.Integer({ name: "iCountryID" }),
				new asn1ts.Utf8String({ name: "u8sCountryCode" }),
				new asn1ts.Utf8String({ name: "u8sLocalPrefix" }),
				new asn1ts.Utf8String({ name: "u8sNationalPrefix" }),
				new asn1ts.Utf8String({ name: "u8sInternationalPrefix" }),
				new asn1ts.Utf8String({ name: "u8sLocalDialingRule" }),
				new asn1ts.Utf8String({ name: "u8sNationalDialingRule" }),
				new asn1ts.Utf8String({ name: "u8sInternationalDialingRule" }),
				new asn1ts.Utf8String({ name: "u8sLocalDialingRuleHomePNALocal" }),
				new asn1ts.Utf8String({ name: "u8sLocalDialingRuleHomePNAToll" }),
				new asn1ts.Utf8String({ name: "u8sLocalDialingRuleForeignPNALocal" }),
				new asn1ts.Integer({ name: "iLanguage" }),
				new asn1ts.Utf8String({ name: "u8sCityCodeNoPrefix" }),
				new asn1ts.Boolean({ name: "bNoLocalDialing" }),
				new asn1ts.Utf8String({ name: "u8sVanityNumbers" }),
				new asn1ts.Boolean({ name: "bUseVanity" }),
				new asn1ts.Integer({ name: "iRemoteTapiNumberFormat" }),
				new asn1ts.Integer({ name: "iRemoteTapiDialFormat" }),
				new asn1ts.Integer({ name: "iRemoteTapiLineNames" }),
				new asn1ts.Integer({ name: "iDialingNumberFormat" }),
				new asn1ts.Boolean({ name: "bFixedNumberLenExtensionDTMFDialing" }),
				new asn1ts.Boolean({ name: "bMobileDeviceLocation" }),
				new asn1ts.Boolean({ name: "bShowExtendedSettings" }),
				new asn1ts.Boolean({ name: "bMultiLocationSupport" }),
				new asn1ts.Boolean({ name: "bAutoCreateOtherLocationRules" }),
				new asn1ts.Boolean({ name: "bAllowNumberSearchOtherLocations" }),
				new asn1ts.Boolean({ name: "bShortenOtherLocationSCNumbersForDialing" }),
				new asn1ts.Boolean({ name: "bUseTkSystem" }),
				new asn1ts.Utf8String({ name: "u8sTKAnschlussNr" }),
				new asn1ts.Utf8String({ name: "u8sDDIRangeBegin" }),
				new asn1ts.Utf8String({ name: "u8sDDIRangeEnd" }),
				new asn1ts.Utf8String({ name: "u8sTKLocalAccessCode" }),
				new asn1ts.Utf8String({ name: "u8sTKLongDistanceAccessCode" }),
				new asn1ts.Utf8String({ name: "u8sTKInternationalAccessCode" }),
				new asn1ts.Utf8String({ name: "u8sTKPrivateAccessCode" }),
				new asn1ts.Utf8String({ name: "u8sTKForwardingAccessCode" }),
				new asn1ts.Integer({ name: "iTKMinLenInternalNumbers" }),
				new asn1ts.Integer({ name: "iTKMaxLenInternalNumbers" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistTKAkzListRemoveIn" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistTKAkzListRemoveOut" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistTKAkzListRemoveForwarding" }),
				new asn1ts.Integer({ name: "iConnectedIDDealing" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistTKAkzListRemoveConnectedIDIn" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistTKAkzListRemoveConnectedIDOut" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatInternal" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatExternal" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatAutomaticOtherLocationsDDItoSC" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatAutomaticOtherLocationsSCtoDDI" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatRegExpressListIn" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatRegExpressListOut" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatRegExpressListDial" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatRegExpressListFinalDial" }),
				AsnNumberFormatRegExpressionsMgmt.getASN1Schema({ name: "numberFormatRegExpressLinePhoneNumbers" }),
				new asn1ts.Utf8String({ name: "u8sLocationID" }),
				new asn1ts.Integer({ name: "iLocalDialingRuleHomePNAFlag" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistLocalDialingRulesHomePNALocalCalls" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistLocalDialingRulesHomePNATollCalls" }),
				new asn1ts.Integer({ name: "iLocalDialingRuleForeignPNAFlag" }),
				AsnELocalDialingRuleForeignPNALocalCallItemList.getASN1Schema({ name: "localDialingRuleForeignPNALocalCallItemList" }),
				new asn1ts.Boolean({ name: "bUseAdvancedLCR" }),
				AsnELCRProviderList.getASN1Schema({ name: "lCRProviderVector" }),
				AsnELCRZoneList.getASN1Schema({ name: "lCRZoneList" }),
				ENetUC_Common_SIPCTI.AsnProjectPinRuleList.getASN1Schema({ name: "projectPINRules" }),
				new asn1ts.Boolean({ name: "bRulesSoftphoneEmergencyEnabled" }),
				new asn1ts.Boolean({ name: "bRulesSoftphoneEmergencyClientWarningEnabled" }),
				AsnRuleSoftphoneEmergencyMgmtListMgmt.getASN1Schema({ name: "rulesSoftphoneEmergency" }),
				new asn1ts.Extension()
			]
		});
	}

	/**
	 * Checksum
	 * Prüfsumme für die Location um Änderungen ermitteln zu können
	 */
	public u8sLocationCheckSum!: string;
	/** Country */
	public iCountryID!: number;
	/** Country code */
	public u8sCountryCode!: string;
	/** Wert aus ELocationCountryList gesetzt mit SetCountry */
	public u8sLocalPrefix!: string;
	/** Wert aus ELocationCountryList gesetzt mit SetCountry */
	public u8sNationalPrefix!: string;
	/** Wert aus ELocationCountryList gesetzt mit SetCountry */
	public u8sInternationalPrefix!: string;
	/** Die Wahlregel für Ortsgespräche. Diese kann unwirksam werden, wenn LocalSpecial Dialing Rules definiert sind */
	public u8sLocalDialingRule!: string;
	/** Die Wahlregel für Ferngespräche */
	public u8sNationalDialingRule!: string;
	/** Die Wahlregel für Internetionale Gespräche */
	public u8sInternationalDialingRule!: string;
	/**
	 * WahlRegeln speziell Nord Amerika
	 * Dort existieren verschiedene Wahlregeln für kostenfreie und kostenpflichtige Gespräche
	 * Diese Wahlregeln sind in jeder Area (Vorwahl) unterschiedlich.
	 * Diese Wahlregeln werden aus den m_LocalDialingRuleMap gelesen bei der Konfiguration
	 * Selbe Vorwahl, kostenfreies Gespräch (gleiche LATA) - ELOCALDIALINGRULE_HOMEPNALOCAL
	 */
	public u8sLocalDialingRuleHomePNALocal!: string;
	/** Selbe Vorwahl, kostenpflichtiges Gespräch (andere LATA) - ELOCALDIALINGRULE_HOMEPNATOLL */
	public u8sLocalDialingRuleHomePNAToll!: string;
	/** Andere Vorwahl, kostenfreies Gespräch (gleiche LATA) - ELOCALDIALINGRULE_FOREIGNPNALOCAL */
	public u8sLocalDialingRuleForeignPNALocal!: string;
	/**
	 * Sprache als LANG_id
	 * Verwendet Primary LANGID z.B. LANG_GERMAN
	 * und SUB LangID z.B. SUBLANG_DEFAULT
	 */
	public iLanguage!: number;
	/**
	 * Vorwahl immer ohne nationalen access code.
	 * Wenn es keine m_strNationalDialingRule gibt, ist der
	 * CityCode immer leer
	 */
	public u8sCityCodeNoPrefix!: string;
	/** Flag welches ermöglicht das auch im Ortsnetz mit Vorwahl gewählt wird */
	public bNoLocalDialing!: boolean;
	/** Liste der Vanity Vorwahlen (, getrennt) */
	public u8sVanityNumbers!: string;
	/** Use Vanity? */
	public bUseVanity!: boolean;
	/** Remote Tapi Treiber Rufnummern Formatierung */
	/** (see AsnERemoteTapiNumberFormat) */
	public iRemoteTapiNumberFormat!: number;
	/** Remote Tapi Treiber Rufnummern Wahl Formatierung */
	/** (see AsnERemoteTapiDialFormat) */
	public iRemoteTapiDialFormat!: number;
	/** MultiLine TAPI Treiber - Name der Leitungen */
	/** (see AsnERemoteTapiLineNames) */
	public iRemoteTapiLineNames!: number;
	/** Dialing Number Format */
	/** (see AsnETAPIDialNumberFormat) */
	public iDialingNumberFormat!: number;
	/**
	 * Automatische Nachwahl von Nebenstellennummern bei Ländern mit fixer Rufnummernlänge
	 * Bei Ländern mit fixer Rufnummernlänge werden Nebenstellennummern nach der Verbindungsherstellung automatisch nachgewählt
	 */
	public bFixedNumberLenExtensionDTMFDialing!: boolean;
	/** Dies ist ein Mobile Device Standort */
	public bMobileDeviceLocation!: boolean;
	/**
	 * In dieser Location werden die erweiterten Einstellungen angezeigt
	 * damit sind alle Settings sichtbar, ansonsten nur elementar wichtige für 95% der Installationen
	 */
	public bShowExtendedSettings!: boolean;
	/** Dieser Standort steht für den MuliLocationSupport bereit */
	public bMultiLocationSupport!: boolean;
	/** Automatisch Regeln zum umformatieren kurzer Rufnummern in die Lange Notation erstellen */
	public bAutoCreateOtherLocationRules!: boolean;
	/** Rufnummernauflösung über die Suche Standortübergreifend erlauben */
	public bAllowNumberSearchOtherLocations!: boolean;
	/** Superkanonische Rufnummern anderer Standorte bei der Wahl entsprechend verkürzen */
	public bShortenOtherLocationSCNumbersForDialing!: boolean;
	/** Telefonanlage wird benutzt */
	public bUseTkSystem!: boolean;
	/** Anschlussnummer bei Anlagenanschluss (z.B. 36856) */
	public u8sTKAnschlussNr!: string;
	/**
	 * Gesplitetter Bereich für Anschlussnummer (36856 [0-2])
	 * In Deutschland kann ein Anlagenanschluss eingeschränkte Durchwahlbereiche haben
	 * Die folgende Variablen schänken den Bereich für die Anschlussnummer ein.
	 * Default ist leer (alle)
	 * Wir verwendet um festzustellen von welchen internen Rufnummern es externe Repräsentierungen gibt
	 */
	public u8sDDIRangeBegin!: string;
	public u8sDDIRangeEnd!: string;
	/** Amtskennziffer im Ort (z.B. 0) */
	public u8sTKLocalAccessCode!: string;
	/** Amtskennziffer National (z.B. 0) */
	public u8sTKLongDistanceAccessCode!: string;
	/** Amtskennziffer International (z.B. 0) */
	public u8sTKInternationalAccessCode!: string;
	/**
	 * Amtskennziffer Privatgespräch (z.B. 0)
	 * Kann ? und % als platzhalter für persönliche PIN enthalten.
	 * ?: eine Ziffer
	 * %: n Ziffern
	 */
	public u8sTKPrivateAccessCode!: string;
	/** Amtskennziffer für Rufumleitung setzen */
	public u8sTKForwardingAccessCode!: string;
	/** Minimale Länge interner Nummern */
	public iTKMinLenInternalNumbers!: number;
	/** Maximale Länge interner Nummern */
	public iTKMaxLenInternalNumbers!: number;
	/** Amtskennziffer(n) bei ankommend gemeldeter Nummer abschneiden */
	public u8slistTKAkzListRemoveIn!: ENetUC_Common.UTF8StringList;
	/** Amtskennziffer(n) bei abgehend gemeldeter Nummer abschneiden */
	public u8slistTKAkzListRemoveOut!: ENetUC_Common.UTF8StringList;
	/** Amtskennziffer(n) bei Meldung einer Rufumleitung abschneiden */
	public u8slistTKAkzListRemoveForwarding!: ENetUC_Common.UTF8StringList;
	/** Spezielle Behandlung der ConnectedID, normal, formatieren, ignorieren */
	/** (see AsnEConnectedIdDealing) */
	public iConnectedIDDealing!: number;
	/** Amtskennziffer(n) bei abgehend gemeldeter Nummer ConnecteID */
	public u8slistTKAkzListRemoveConnectedIDIn!: ENetUC_Common.UTF8StringList;
	/** Amtskennziffer(n) bei ankommende gemeldeter Nummer ConnecteID */
	public u8slistTKAkzListRemoveConnectedIDOut!: ENetUC_Common.UTF8StringList;
	/**
	 * Reguläre Ausdrücke zur erweiterten Erkennung interner Rufnummern
	 * Dient zur Erkennung interner Rufnummern, formatiert, sofern ein Replace Ausdruck hinterlegt ist, die Rufnummer automatisch um
	 */
	public numberFormatInternal!: AsnNumberFormatRegExpressionsMgmt;
	/**
	 * Reguläre Ausdrücke zur erweiterten Erkennung externer Rufnummern
	 * Das sind meist wohl die selben wie SpecialNumbers.
	 * Allerdings nur dann, wenn man nicht selbige auch als interne Rufnummern hat. **\/
	 * Dient zur Erkennung externer Rufnummern, formatiert, sofern ein Replace Ausdruck hinterlegt ist, die Rufnummer automatisch um
	 */
	public numberFormatExternal!: AsnNumberFormatRegExpressionsMgmt;
	/**
	 * Liste mit Ausdrücken zur automatischen Standortrufnummernmanipulation.
	 * Gefuellt wenn m_bMultiLocationEnabled && m_bAutoCreateOtherLocationRules gesetzt ist nach dem Laden aller Standorteinstellungen
	 */
	public numberFormatAutomaticOtherLocationsDDItoSC!: AsnNumberFormatRegExpressionsMgmt;
	/**
	 * Liste mit Ausdrücken zur automatischen Standortrufnummernmanipulation.
	 * Gefüllt wenn m_bMultiLocationEnabled && m_bShortenOtherLocationSCNumbersForDialing gesetzt ist nach dem Laden aller Standorteinstellungen
	 */
	public numberFormatAutomaticOtherLocationsSCtoDDI!: AsnNumberFormatRegExpressionsMgmt;
	/** Rufnummern Formatierung (Reguläre Ausdrücke oder direktes Suchen Ersetzen (abhängig von internem Flag) */
	public numberFormatRegExpressListIn!: AsnNumberFormatRegExpressionsMgmt;
	/** Rufnummern Formatierung (Reguläre Ausdrücke oder direktes Suchen Ersetzen (abhängig von internem Flag) */
	public numberFormatRegExpressListOut!: AsnNumberFormatRegExpressionsMgmt;
	/**
	 * Rufnummern Formatierung (Reguläre Ausdrücke oder direktes Suchen Ersetzen (abhängig von internem Flag)
	 * Diese Liste wird verarbeitet, nachdem die Rufnummer superkanonisch gemacht wurde.
	 * Hat das Ergebnis ein + am Anfang, wird weiterformatiert,
	 * sonst direkt gewählt
	 */
	public numberFormatRegExpressListDial!: AsnNumberFormatRegExpressionsMgmt;
	/**
	 * Rufnummern Formatierung (Reguläre Ausdrücke oder direktes Suchen Ersetzen (abhängig von internem Flag)
	 * Diese Liste wird verarbeitet, nachdem alle Formattierung abgeschlossen ist.
	 * Diese Regel wird auch für die Remote Tapi Treiber angewendet
	 */
	public numberFormatRegExpressListFinalDial!: AsnNumberFormatRegExpressionsMgmt;
	/**
	 * Reguläre Ausdrücke um eine Leitungsrufnummer zu formen.
	 * Im Admin kann man hier in den erweiterten Einstellungen reguläre Ausdrücke hinterlegen nach denen Leitungsrufnummern formatiert werden
	 * Diese Ausdrücke müssen aus der Rufnummer eine superkanonische Rufnummer machen. Sobald ein Ausdruck hinterlegt ist wird in diesem Standort
	 * nurnoch über diese Regulären Ausdrücke gearbeitet. Die Ausdrücke werden NUR für Leitungsrufnummer verwendet
	 */
	public numberFormatRegExpressLinePhoneNumbers!: AsnNumberFormatRegExpressionsMgmt;
	/** Location Identifier (z.B. Default) */
	public u8sLocationID!: string;
	/**
	 * Flag, welche Ausnahmen für die Eigene Vorwahl gilt.
	 * Alle im eigenen Ortsnetz sind kostenfrei
	 * Kostenfreie Konfigurieren (die anderen sind kostenpflichtig)
	 * Kostenpflichtige Konfigurieren (die anderen sind kostenfrei)
	 */
	public iLocalDialingRuleHomePNAFlag!: number;
	/** Liste der NXX Nummern in der eigenen Vorwahl, die als Local Call gelten */
	public u8slistLocalDialingRulesHomePNALocalCalls!: ENetUC_Common.UTF8StringList;
	/** Liste der NXX Nummern in der eigenen Vorwahl,die als Local Call gelten */
	public u8slistLocalDialingRulesHomePNATollCalls!: ENetUC_Common.UTF8StringList;
	/**
	 * Flag, welche Ausnahmen für fremde Vorwahlen gelten.
	 * Alle in anderen Ortsnetzen sind Ferngespräche
	 * Es gibt kostenfreie Gespräche
	 */
	public iLocalDialingRuleForeignPNAFlag!: number;
	/** Liste der Vorwahlen mit NXX Nummern aus anderen Vorwahlen,die als Local Call gelten */
	public localDialingRuleForeignPNALocalCallItemList!: AsnELocalDialingRuleForeignPNALocalCallItemList;
	/** LeastCostRouting verwenden */
	public bUseAdvancedLCR!: boolean;
	/** Liste der Provider */
	public lCRProviderVector!: AsnELCRProviderList;
	/** Liste der Provider */
	public lCRZoneList!: AsnELCRZoneList;
	/** Projektkennziffern */
	public projectPINRules!: ENetUC_Common_SIPCTI.AsnProjectPinRuleList;
	/** rules for emergency numbers enabled */
	public bRulesSoftphoneEmergencyEnabled!: boolean;
	/** Client Warnings enabled */
	public bRulesSoftphoneEmergencyClientWarningEnabled!: boolean;
	/** rules for emergency numbers dialed from softphone */
	public rulesSoftphoneEmergency!: AsnRuleSoftphoneEmergencyMgmtListMgmt;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLocationInformationMgmtResult {
	public constructor(that: AsnMgmtGetLocationInformationMgmtResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLocationInformationMgmtResult {
		return new AsnMgmtGetLocationInformationMgmtResult({
			asnLocationData: AsnLocationInformationMgmt["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"asnLocationData"
		];
		return p;
	}

	public static type = "AsnMgmtGetLocationInformationMgmtResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLocationInformationMgmtResult",
			...params,
			value: [
				AsnLocationInformationMgmt.getASN1Schema({ name: "asnLocationData" }),
				new asn1ts.Extension()
			]
		});
	}

	public asnLocationData!: AsnLocationInformationMgmt;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetLocationInformationMgmtArgument {
	public constructor(that: AsnMgmtSetLocationInformationMgmtArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetLocationInformationMgmtArgument {
		return new AsnMgmtSetLocationInformationMgmtArgument({
			asnLocationData: AsnLocationInformationMgmt["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"asnLocationData"
		];
		return p;
	}

	public static type = "AsnMgmtSetLocationInformationMgmtArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetLocationInformationMgmtArgument",
			...params,
			value: [
				AsnLocationInformationMgmt.getASN1Schema({ name: "asnLocationData" }),
				new asn1ts.Extension()
			]
		});
	}

	public asnLocationData!: AsnLocationInformationMgmt;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetCSTAServerSettingsResult {
	public constructor(that: AsnMgmtGetCSTAServerSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetCSTAServerSettingsResult {
		return new AsnMgmtGetCSTAServerSettingsResult({
			settings: AsnCSTAServerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetCSTAServerSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetCSTAServerSettingsResult",
			...params,
			value: [
				AsnCSTAServerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnCSTAServerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetCSTAServerSettingsArgument {
	public constructor(that: AsnMgmtSetCSTAServerSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetCSTAServerSettingsArgument {
		return new AsnMgmtSetCSTAServerSettingsArgument({
			settings: AsnCSTAServerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetCSTAServerSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetCSTAServerSettingsArgument",
			...params,
			value: [
				AsnCSTAServerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnCSTAServerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnAVStunOrTurnServerList extends Array<AsnAVStunOrTurnServer> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnAVStunOrTurnServer.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnAVStunOrTurnSettings {
	public constructor(that: AsnAVStunOrTurnSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnAVStunOrTurnSettings {
		return new AsnAVStunOrTurnSettings({
			iTurnProviderType: 0,
			listOwnServers: new AsnAVStunOrTurnServerList(),
			u8sTURNProvider: "",
			u8spairlistProviderParams: new ENetUC_Common.AsnStringPairList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iTurnProviderType",
			"listOwnServers",
			"u8sTURNProvider",
			"u8spairlistProviderParams"
		];
		return p;
	}

	public static type = "AsnAVStunOrTurnSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnAVStunOrTurnSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iTurnProviderType" }),
				AsnAVStunOrTurnServerList.getASN1Schema({ name: "listOwnServers" }),
				new asn1ts.Utf8String({ name: "u8sTURNProvider" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "u8spairlistProviderParams" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Provider Type */
	/** (see AsnAVSTUNANDTURNPROVIDERTYPE) */
	public iTurnProviderType!: number;
	/** List of own STUN and TURN Servers */
	public listOwnServers!: AsnAVStunOrTurnServerList;
	/** Selected TURN Provider */
	public u8sTURNProvider!: string;
	/** Config Params for TURN Provider */
	public u8spairlistProviderParams!: ENetUC_Common.AsnStringPairList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSTUNandTURNSettingsResult {
	public constructor(that: AsnMgmtGetSTUNandTURNSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSTUNandTURNSettingsResult {
		return new AsnMgmtGetSTUNandTURNSettingsResult({
			settings: AsnAVStunOrTurnSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetSTUNandTURNSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSTUNandTURNSettingsResult",
			...params,
			value: [
				AsnAVStunOrTurnSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnAVStunOrTurnSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetSTUNandTURNSettingsArgument {
	public constructor(that: AsnMgmtSetSTUNandTURNSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetSTUNandTURNSettingsArgument {
		return new AsnMgmtSetSTUNandTURNSettingsArgument({
			settings: AsnAVStunOrTurnSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetSTUNandTURNSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetSTUNandTURNSettingsArgument",
			...params,
			value: [
				AsnAVStunOrTurnSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnAVStunOrTurnSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSTUNandTURNConsumerConfigArgument {
	public constructor(that: AsnMgmtGetSTUNandTURNConsumerConfigArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSTUNandTURNConsumerConfigArgument {
		return new AsnMgmtGetSTUNandTURNConsumerConfigArgument({
			settings: AsnAVStunOrTurnSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetSTUNandTURNConsumerConfigArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSTUNandTURNConsumerConfigArgument",
			...params,
			value: [
				AsnAVStunOrTurnSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnAVStunOrTurnSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetDBManSettingsResult {
	public constructor(that: AsnMgmtGetDBManSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetDBManSettingsResult {
		return new AsnMgmtGetDBManSettingsResult({
			settings: AsnMgmtDBManSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetDBManSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetDBManSettingsResult",
			...params,
			value: [
				AsnMgmtDBManSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtDBManSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetDBManSettingsArgument {
	public constructor(that: AsnMgmtGetDBManSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetDBManSettingsArgument {
		return new AsnMgmtGetDBManSettingsArgument({
			settings: AsnMgmtDBManSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetDBManSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetDBManSettingsArgument",
			...params,
			value: [
				AsnMgmtDBManSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtDBManSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetXmppSettingsResult {
	public constructor(that: AsnMgmtGetXmppSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetXmppSettingsResult {
		return new AsnMgmtGetXmppSettingsResult({
			settings: AsnXMPPSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetXmppSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetXmppSettingsResult",
			...params,
			value: [
				AsnXMPPSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnXMPPSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetXmppSettingsArgument {
	public constructor(that: AsnMgmtSetXmppSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetXmppSettingsArgument {
		return new AsnMgmtSetXmppSettingsArgument({
			settings: AsnXMPPSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetXmppSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetXmppSettingsArgument",
			...params,
			value: [
				AsnXMPPSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnXMPPSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnListenInterfaceDescriptionList extends Array<AsnListenInterfaceDescription> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnListenInterfaceDescription.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnSIPFEDSettings {
	public constructor(that: AsnSIPFEDSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnSIPFEDSettings {
		return new AsnSIPFEDSettings({
			u8sFederationServiceURL: "",
			iNetworkInterfacesEnabled: 0,
			networkInterfaces: new AsnListenInterfaceDescriptionList(),
			iUsePublicIP: 0,
			iPublicPort: 0,
			u8sPublicIP: "",
			iFederationEnabled: 0,
			u8sFederationBindAddress: "",
			iProxyEnabled: 0,
			u8sProxyUsername: "",
			u8sProxyPassword: "",
			iEdgeServerEnabled: 0,
			iEdgeServerPort: 0,
			iEdgeServerProtocol: 0,
			u8sEdgeServerCertificate: "",
			u8sEdgeServerUsername: "",
			u8sEdgeServerAddress: "",
			u8sEdgeServerPassword: "",
			iOpenFederationEnabled: 0,
			iStaticRoutesEnabled: 0,
			u8slistStaticRoutes: new ENetUC_Common.UTF8StringList(),
			u8slistDomainsAllow: new ENetUC_Common.UTF8StringList(),
			iGlobalAllow: 0,
			iGlobalAllowPresenceLevel: 0,
			u8slistDomainsDeny: new ENetUC_Common.UTF8StringList(),
			iRegistrarEnabled: 0,
			u8sSipServerCertHash: "",
			bServerRestartRequiredFlag: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sFederationServiceURL",
			"iNetworkInterfacesEnabled",
			"networkInterfaces",
			"iUsePublicIP",
			"iPublicPort",
			"u8sPublicIP",
			"iFederationEnabled",
			"u8sFederationBindAddress",
			"iProxyEnabled",
			"u8sProxyUsername",
			"u8sProxyPassword",
			"iEdgeServerEnabled",
			"iEdgeServerPort",
			"iEdgeServerProtocol",
			"u8sEdgeServerCertificate",
			"u8sEdgeServerUsername",
			"u8sEdgeServerAddress",
			"u8sEdgeServerPassword",
			"iOpenFederationEnabled",
			"iStaticRoutesEnabled",
			"u8slistStaticRoutes",
			"u8slistDomainsAllow",
			"iGlobalAllow",
			"iGlobalAllowPresenceLevel",
			"u8slistDomainsDeny",
			"iRegistrarEnabled",
			"u8sSipServerCertHash",
			"bServerRestartRequiredFlag"
		];
		return p;
	}

	public static type = "AsnSIPFEDSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnSIPFEDSettings",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sFederationServiceURL" }),
				new asn1ts.Integer({ name: "iNetworkInterfacesEnabled" }),
				AsnListenInterfaceDescriptionList.getASN1Schema({ name: "networkInterfaces" }),
				new asn1ts.Integer({ name: "iUsePublicIP" }),
				new asn1ts.Integer({ name: "iPublicPort" }),
				new asn1ts.Utf8String({ name: "u8sPublicIP" }),
				new asn1ts.Integer({ name: "iFederationEnabled" }),
				new asn1ts.Utf8String({ name: "u8sFederationBindAddress" }),
				new asn1ts.Integer({ name: "iProxyEnabled" }),
				new asn1ts.Utf8String({ name: "u8sProxyUsername" }),
				new asn1ts.Utf8String({ name: "u8sProxyPassword" }),
				new asn1ts.Integer({ name: "iEdgeServerEnabled" }),
				new asn1ts.Integer({ name: "iEdgeServerPort" }),
				new asn1ts.Integer({ name: "iEdgeServerProtocol" }),
				new asn1ts.Utf8String({ name: "u8sEdgeServerCertificate" }),
				new asn1ts.Utf8String({ name: "u8sEdgeServerUsername" }),
				new asn1ts.Utf8String({ name: "u8sEdgeServerAddress" }),
				new asn1ts.Utf8String({ name: "u8sEdgeServerPassword" }),
				new asn1ts.Integer({ name: "iOpenFederationEnabled" }),
				new asn1ts.Integer({ name: "iStaticRoutesEnabled" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistStaticRoutes" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistDomainsAllow" }),
				new asn1ts.Integer({ name: "iGlobalAllow" }),
				new asn1ts.Integer({ name: "iGlobalAllowPresenceLevel" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistDomainsDeny" }),
				new asn1ts.Integer({ name: "iRegistrarEnabled" }),
				new asn1ts.Utf8String({ name: "u8sSipServerCertHash" }),
				new asn1ts.Boolean({ name: "bServerRestartRequiredFlag" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Common */
	public u8sFederationServiceURL!: string;
	/** Network listen Interfaces enabled */
	public iNetworkInterfacesEnabled!: number;
	/** Network listen Interfaces */
	public networkInterfaces!: AsnListenInterfaceDescriptionList;
	/** Public IP enabled */
	public iUsePublicIP!: number;
	/** Public Port */
	public iPublicPort!: number;
	/** Public IP */
	public u8sPublicIP!: string;
	/** Federation enabled */
	public iFederationEnabled!: number;
	/** Network bind address for federation */
	public u8sFederationBindAddress!: string;
	/** Federation proxy enabled */
	public iProxyEnabled!: number;
	/** PCE-2391: Direct federation service username */
	public u8sProxyUsername!: string;
	/** Direct federation service password */
	public u8sProxyPassword!: string;
	/** Edge server enabled */
	public iEdgeServerEnabled!: number;
	/** Edge server port */
	public iEdgeServerPort!: number;
	/** Edge server transport protocol */
	public iEdgeServerProtocol!: number;
	/** Edge server certificate hash */
	public u8sEdgeServerCertificate!: string;
	/** PCE-2391: Edge server username */
	public u8sEdgeServerUsername!: string;
	/** Edge server ip address */
	public u8sEdgeServerAddress!: string;
	/** Edge server register password */
	public u8sEdgeServerPassword!: string;
	/** Open Federation enabled */
	public iOpenFederationEnabled!: number;
	/** Static routes enabled */
	public iStaticRoutesEnabled!: number;
	/** Static routings formatted string list */
	public u8slistStaticRoutes!: ENetUC_Common.UTF8StringList;
	/** Domain allow formatted string list */
	public u8slistDomainsAllow!: ENetUC_Common.UTF8StringList;
	/** Allow global federation */
	public iGlobalAllow!: number;
	/** Allow global presence level */
	public iGlobalAllowPresenceLevel!: number;
	/** Domain deny string list */
	public u8slistDomainsDeny!: ENetUC_Common.UTF8StringList;
	/** Registrar enabled */
	public iRegistrarEnabled!: number;
	/** PCE-2361: Auswahl Zertifikat\/Hash unter 'SIP\/SIP-Server' */
	public u8sSipServerCertHash!: string;
	/** PCE-2668: Indicates whether a server restart is required or not */
	public bServerRestartRequiredFlag!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSIPFEDSettingsResult {
	public constructor(that: AsnMgmtGetSIPFEDSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSIPFEDSettingsResult {
		return new AsnMgmtGetSIPFEDSettingsResult({
			settings: AsnSIPFEDSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetSIPFEDSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSIPFEDSettingsResult",
			...params,
			value: [
				AsnSIPFEDSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnSIPFEDSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetSIPFEDSettingsArgument {
	public constructor(that: AsnMgmtSetSIPFEDSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetSIPFEDSettingsArgument {
		return new AsnMgmtSetSIPFEDSettingsArgument({
			settings: AsnSIPFEDSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetSIPFEDSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetSIPFEDSettingsArgument",
			...params,
			value: [
				AsnSIPFEDSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnSIPFEDSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnSIPGatewaySettingsRegisteredUserList extends Array<AsnSIPGatewaySettingsRegisteredUser> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnSIPGatewaySettingsRegisteredUser.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnSIPGatewayUASettings {
	public constructor(that: AsnSIPGatewayUASettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnSIPGatewayUASettings {
		return new AsnSIPGatewayUASettings({
			iGatewayModel: 0,
			iGatewayType: 0,
			registeredUsers: new AsnSIPGatewaySettingsRegisteredUserList(),
			bTrunkRegistration: false,
			u8sRegistrar: "",
			iRegistrarPort: 0,
			u8sSTUNServer: "",
			u8sDomainRealm: "",
			iRegisterInterval: 0,
			iConnectionType: 0,
			u8sLocalInterfaceGUID: "",
			u8sLineGroupName: "",
			bDoRegister: false,
			u8sMediaGatewayName: "",
			iMediaMode: 0,
			ilistAudioCodecs: new ENetUC_Common.SEQInteger(),
			iPBXProperties: 0,
			iPCAPTrace: 0,
			u8slistPCAPTraceLines: new ENetUC_Common.UTF8StringList(),
			objFeatureCodes: new AsnMgmtCtiFeatureCodeList(),
			customProps: new ENetUC_Common.AsnStringPairList(),
			iRegisterDelay: 0,
			iPBXTransferProperties: 0,
			iRegisterNatRefreshInterval: 0,
			iProvider: 0,
			iMinPorts: 0,
			iMaxPorts: 0,
			iNoEarlyMedia: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iGatewayModel",
			"iGatewayType",
			"registeredUsers",
			"bTrunkRegistration",
			"u8sRegistrar",
			"iRegistrarPort",
			"u8sSTUNServer",
			"u8sDomainRealm",
			"iRegisterInterval",
			"iConnectionType",
			"u8sLocalInterfaceGUID",
			"u8sLineGroupName",
			"bDoRegister",
			"u8sMediaGatewayName",
			"iMediaMode",
			"ilistAudioCodecs",
			"iPBXProperties",
			"iPCAPTrace",
			"u8slistPCAPTraceLines",
			"objFeatureCodes",
			"customProps",
			"iRegisterDelay",
			"iPBXTransferProperties",
			"iRegisterNatRefreshInterval",
			"iProvider",
			"iMinPorts",
			"iMaxPorts",
			"iNoEarlyMedia"
		];
		if (bIncludeOptionals) {
			p.push(
				"bRegisteredUsersSendChanges",
				"registeredUsersAdded",
				"registeredUsersChanged",
				"registeredUsersRemoved",
				"u8sLineGroupNameOld"
			);
		}
		return p;
	}

	public static type = "AsnSIPGatewayUASettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnSIPGatewayUASettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iGatewayModel" }),
				new asn1ts.Integer({ name: "iGatewayType" }),
				AsnSIPGatewaySettingsRegisteredUserList.getASN1Schema({ name: "registeredUsers" }),
				new asn1ts.Boolean({ name: "bTrunkRegistration" }),
				new asn1ts.Utf8String({ name: "u8sRegistrar" }),
				new asn1ts.Integer({ name: "iRegistrarPort" }),
				new asn1ts.Utf8String({ name: "u8sSTUNServer" }),
				new asn1ts.Utf8String({ name: "u8sDomainRealm" }),
				new asn1ts.Integer({ name: "iRegisterInterval" }),
				new asn1ts.Integer({ name: "iConnectionType" }),
				new asn1ts.Utf8String({ name: "u8sLocalInterfaceGUID" }),
				new asn1ts.Utf8String({ name: "u8sLineGroupName" }),
				new asn1ts.Boolean({ name: "bDoRegister" }),
				new asn1ts.Utf8String({ name: "u8sMediaGatewayName" }),
				new asn1ts.Integer({ name: "iMediaMode" }),
				ENetUC_Common.SEQInteger.getASN1Schema({ name: "ilistAudioCodecs" }),
				new asn1ts.Integer({ name: "iPBXProperties" }),
				new asn1ts.Integer({ name: "iPCAPTrace" }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "u8slistPCAPTraceLines" }),
				AsnMgmtCtiFeatureCodeList.getASN1Schema({ name: "objFeatureCodes" }),
				ENetUC_Common.AsnStringPairList.getASN1Schema({ name: "customProps" }),
				new asn1ts.Integer({ name: "iRegisterDelay" }),
				new asn1ts.Integer({ name: "iPBXTransferProperties" }),
				new asn1ts.Integer({ name: "iRegisterNatRefreshInterval" }),
				new asn1ts.Integer({ name: "iProvider" }),
				new asn1ts.Integer({ name: "iMinPorts" }),
				new asn1ts.Integer({ name: "iMaxPorts" }),
				new asn1ts.Integer({ name: "iNoEarlyMedia" }),
				new asn1ts.Boolean({ name: "bRegisteredUsersSendChanges", idBlock: { optionalID: 0 } }),
				AsnSIPGatewaySettingsRegisteredUserList.getASN1Schema({ name: "registeredUsersAdded", idBlock: { optionalID: 1 } }),
				AsnSIPGatewaySettingsRegisteredUserList.getASN1Schema({ name: "registeredUsersChanged", idBlock: { optionalID: 2 } }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "registeredUsersRemoved", idBlock: { optionalID: 3 } }),
				new asn1ts.Utf8String({ name: "u8sLineGroupNameOld", idBlock: { optionalID: 4 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Gateway-Model */
	/** (see AsnGatewayModelEnum) */
	public iGatewayModel!: number;
	/** Gateway-Typ */
	/** (see AsnGatewayTypesEnum) */
	public iGatewayType!: number;
	/**
	 * Map der registrierten Benutzer. Der Schlüssel ist typischerweise der Username.
	 * wird ignoriert, wenn diese Struktur mit asnMgmtSetSIPGatewaySettingsV2 gesendet wird
	 */
	public registeredUsers!: AsnSIPGatewaySettingsRegisteredUserList;
	/**
	 * TRUNK-Registrierung
	 * Wenn gesetzt, wird nur ein Register für alle Leitungen durchgeführt.
	 * Als AuthUserName und AuthPasswort wird das des \"MainTrunkUser\" verwendet.
	 */
	public bTrunkRegistration!: boolean;
	/** Registrar oder Proxy. */
	public u8sRegistrar!: string;
	/** Registrar- oder Proxy-Port. */
	public iRegistrarPort!: number;
	/** Angabe des STUN-\/TURN-Servers. Wird momentan nicht verwendet. */
	public u8sSTUNServer!: string;
	/** Domain-Part der Anmeldeadresse (entspricht i.d.R. der Registrar-Adresse). */
	public u8sDomainRealm!: string;
	/** Zeitdauer bis zum nächsten Reregister. */
	public iRegisterInterval!: number;
	/** Verbindungstyp, i.d.R. ESIP_UDP. */
	/** (see AsnSIPConnectionTypeEnum) */
	public iConnectionType!: number;
	/** Die GUID der zu verwendenden Netzwerkschnittstelle. */
	public u8sLocalInterfaceGUID!: string;
	/** Leitungsgruppenname der Konfiguration (Klartextname), wird zur Bildung der Leitungsadresse benutzt. */
	public u8sLineGroupName!: string;
	/** muss auf true gesetzt sein, sonst registriert sich nicht der User */
	public bDoRegister!: boolean;
	/** Eindeutiger Name des Gateways. Erscheint so in der UI. */
	public u8sMediaGatewayName!: string;
	/**
	 * Media Mode
	 * Im Zusammenhang mit Kurento wird zunächst immer webrtc gesprochen
	 */
	public iMediaMode!: number;
	/** Unterstützte Audio-Codecs */
	/** (see AsnAudioCodesEnum) */
	public ilistAudioCodecs!: ENetUC_Common.SEQInteger;
	/** PBX Eigenschaften */
	public iPBXProperties!: number;
	/** Gateway Trace global */
	public iPCAPTrace!: number;
	/** Gateway Trace lines */
	public u8slistPCAPTraceLines!: ENetUC_Common.UTF8StringList;
	/** Vom Admin definierte Feature Codes, die im ME Bereich der SipAV-line gezeigt werden. */
	public objFeatureCodes!: AsnMgmtCtiFeatureCodeList;
	/**
	 * Custom Properties for individual Line groups
	 * Property strings are defined as ELINEPROP_XXX ies **\/
	 */
	public customProps!: ENetUC_Common.AsnStringPairList;
	/** average delay between SIP Registrations */
	public iRegisterDelay!: number;
	/** PBX Transfer Eigenschaften */
	public iPBXTransferProperties!: number;
	/** Zeitdauer bis zum naechsten NAT Refresh. */
	public iRegisterNatRefreshInterval!: number;
	/** Handelt es sich um einen SIP-Provider? */
	public iProvider!: number;
	/** min Media Ports (e.g. Softphone) */
	public iMinPorts!: number;
	/** max Media Ports (e.g. Softphone) */
	public iMaxPorts!: number;
	/** Wurde Early Media deaktiviert? */
	public iNoEarlyMedia!: number;
	/**
	 * true: Geaenderte User in registeredUsersAdded, registeredUsersChanged, registeredUsersRemoved.
	 * false: Alle vorhandenen User in registeredUser
	 * default beim Empfaenger (falls Wert nicht gesetzt): false
	 */
	public bRegisteredUsersSendChanges?: boolean;
	/** Liste der hinzugefuegten registeredUser. Der Schlüssel ist typischerweise der Username. */
	public registeredUsersAdded?: AsnSIPGatewaySettingsRegisteredUserList;
	/** Liste der geaenderten registeredUser. Der Schlüssel ist typischerweise der Username. */
	public registeredUsersChanged?: AsnSIPGatewaySettingsRegisteredUserList;
	/** Liste der entfernten registeredUser. Aufgelistet sind die Usernamen. */
	public registeredUsersRemoved?: ENetUC_Common.UTF8StringList;
	/**
	 * Leitungsgruppenname vor dem Umbenennen der Leitungsgruppe.
	 * @added 27.05.2024
	 */
	public u8sLineGroupNameOld?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnSIPGatewayUASettingsList extends Array<AsnSIPGatewayUASettings> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnSIPGatewayUASettings.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetSIPGatewaySettingsResult {
	public constructor(that: AsnMgmtGetSIPGatewaySettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetSIPGatewaySettingsResult {
		return new AsnMgmtGetSIPGatewaySettingsResult({
			settings: new AsnSIPGatewayUASettingsList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		if (bIncludeOptionals) {
			p.push(
				"iNetworkInterfacesEnabled",
				"networkInterfaces",
				"iUsePublicIP",
				"iPublicPort",
				"u8sPublicIP",
				"iRegistrarEnabled",
				"u8sSipServerCertHash"
			);
		}
		return p;
	}

	public static type = "AsnMgmtGetSIPGatewaySettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetSIPGatewaySettingsResult",
			...params,
			value: [
				AsnSIPGatewayUASettingsList.getASN1Schema({ name: "settings" }),
				new asn1ts.Integer({ name: "iNetworkInterfacesEnabled", idBlock: { optionalID: 0 } }),
				AsnListenInterfaceDescriptionList.getASN1Schema({ name: "networkInterfaces", idBlock: { optionalID: 1 } }),
				new asn1ts.Integer({ name: "iUsePublicIP", idBlock: { optionalID: 2 } }),
				new asn1ts.Integer({ name: "iPublicPort", idBlock: { optionalID: 3 } }),
				new asn1ts.Utf8String({ name: "u8sPublicIP", idBlock: { optionalID: 4 } }),
				new asn1ts.Integer({ name: "iRegistrarEnabled", idBlock: { optionalID: 5 } }),
				new asn1ts.Utf8String({ name: "u8sSipServerCertHash", idBlock: { optionalID: 6 } }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnSIPGatewayUASettingsList;
	/** Network listen Interfaces enabled */
	public iNetworkInterfacesEnabled?: number;
	/** Network listen Interfaces */
	public networkInterfaces?: AsnListenInterfaceDescriptionList;
	/** Public IP enabled */
	public iUsePublicIP?: number;
	/** Public Port */
	public iPublicPort?: number;
	/** Public IP */
	public u8sPublicIP?: string;
	/** Registrar enabled */
	public iRegistrarEnabled?: number;
	/** Auswahl Zertifikat\/Hash */
	public u8sSipServerCertHash?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * falls settingsOld gesetzt ist, wird das Delta von settingsNew gegenueber settingsOld in die im Server aktuellen settings uebernommen.
 * sonst werden die aktuellen settings durch settingsNew komplett ersetzt.
 */
export class AsnMgmtSetSIPGatewaySettingsArgument {
	public constructor(that: AsnMgmtSetSIPGatewaySettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetSIPGatewaySettingsArgument {
		return new AsnMgmtSetSIPGatewaySettingsArgument({
			settingsNew: new AsnSIPGatewayUASettingsList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settingsNew"
		];
		if (bIncludeOptionals) {
			p.push(
				"settingsOld",
				"iNetworkInterfacesEnabled",
				"networkInterfaces",
				"iUsePublicIP",
				"iPublicPort",
				"u8sPublicIP",
				"iRegistrarEnabled",
				"u8sSipServerCertHash"
			);
		}
		return p;
	}

	public static type = "AsnMgmtSetSIPGatewaySettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetSIPGatewaySettingsArgument",
			...params,
			value: [
				AsnSIPGatewayUASettingsList.getASN1Schema({ name: "settingsNew" }),
				AsnSIPGatewayUASettingsList.getASN1Schema({ name: "settingsOld", idBlock: { optionalID: 0 } }),
				new asn1ts.Integer({ name: "iNetworkInterfacesEnabled", idBlock: { optionalID: 1 } }),
				AsnListenInterfaceDescriptionList.getASN1Schema({ name: "networkInterfaces", idBlock: { optionalID: 2 } }),
				new asn1ts.Integer({ name: "iUsePublicIP", idBlock: { optionalID: 3 } }),
				new asn1ts.Integer({ name: "iPublicPort", idBlock: { optionalID: 4 } }),
				new asn1ts.Utf8String({ name: "u8sPublicIP", idBlock: { optionalID: 5 } }),
				new asn1ts.Integer({ name: "iRegistrarEnabled", idBlock: { optionalID: 6 } }),
				new asn1ts.Utf8String({ name: "u8sSipServerCertHash", idBlock: { optionalID: 7 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** die Liste nach den Aenderungen */
	public settingsNew!: AsnSIPGatewayUASettingsList;
	/** die Liste vor den Aenderungen */
	public settingsOld?: AsnSIPGatewayUASettingsList;
	/** Network listen Interfaces enabled */
	public iNetworkInterfacesEnabled?: number;
	/** Network listen Interfaces */
	public networkInterfaces?: AsnListenInterfaceDescriptionList;
	/** Public IP enabled */
	public iUsePublicIP?: number;
	/** Public Port */
	public iPublicPort?: number;
	/** Public IP */
	public u8sPublicIP?: string;
	/** Registrar enabled */
	public iRegistrarEnabled?: number;
	/** Auswahl Zertifikat\/Hash */
	public u8sSipServerCertHash?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * in contrast to AsnMgmtSetSIPGatewaySettingsArgument only the changes are sent
 */
export class AsnMgmtSetSIPGatewaySettingsV2Argument {
	public constructor(that?: AsnMgmtSetSIPGatewaySettingsV2Argument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetSIPGatewaySettingsV2Argument {
		return new AsnMgmtSetSIPGatewaySettingsV2Argument();
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p: string[] = [];
		if (bIncludeOptionals) {
			p.push(
				"uaSettingsAdded",
				"uaSettingsChanged",
				"uaSettingsRemoved",
				"iNetworkInterfacesEnabled",
				"networkInterfaces",
				"iUsePublicIP",
				"iPublicPort",
				"u8sPublicIP",
				"iRegistrarEnabled",
				"u8sSipServerCertHash"
			);
		}
		return p;
	}

	public static type = "AsnMgmtSetSIPGatewaySettingsV2Argument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetSIPGatewaySettingsV2Argument",
			...params,
			value: [
				AsnSIPGatewayUASettingsList.getASN1Schema({ name: "uaSettingsAdded", idBlock: { optionalID: 0 } }),
				AsnSIPGatewayUASettingsList.getASN1Schema({ name: "uaSettingsChanged", idBlock: { optionalID: 1 } }),
				ENetUC_Common.UTF8StringList.getASN1Schema({ name: "uaSettingsRemoved", idBlock: { optionalID: 2 } }),
				new asn1ts.Integer({ name: "iNetworkInterfacesEnabled", idBlock: { optionalID: 3 } }),
				AsnListenInterfaceDescriptionList.getASN1Schema({ name: "networkInterfaces", idBlock: { optionalID: 4 } }),
				new asn1ts.Integer({ name: "iUsePublicIP", idBlock: { optionalID: 5 } }),
				new asn1ts.Integer({ name: "iPublicPort", idBlock: { optionalID: 6 } }),
				new asn1ts.Utf8String({ name: "u8sPublicIP", idBlock: { optionalID: 7 } }),
				new asn1ts.Integer({ name: "iRegistrarEnabled", idBlock: { optionalID: 8 } }),
				new asn1ts.Utf8String({ name: "u8sSipServerCertHash", idBlock: { optionalID: 9 } }),
				new asn1ts.Extension()
			]
		});
	}

	/** Liste der hinzugeügten SIP Gateways inkl. Registered User */
	public uaSettingsAdded?: AsnSIPGatewayUASettingsList;
	/** Liste der geänderten SIP Gateways inkl. Änderungen an Registered Users */
	public uaSettingsChanged?: AsnSIPGatewayUASettingsList;
	/** Liste der Namen (u8sLineGroupName) der gelöschten SIP Gateways */
	public uaSettingsRemoved?: ENetUC_Common.UTF8StringList;
	/** Network listen Interfaces enabled */
	public iNetworkInterfacesEnabled?: number;
	/** Network listen Interfaces */
	public networkInterfaces?: AsnListenInterfaceDescriptionList;
	/** Public IP enabled */
	public iUsePublicIP?: number;
	/** Public Port */
	public iPublicPort?: number;
	/** Public IP */
	public u8sPublicIP?: string;
	/** Registrar enabled */
	public iRegistrarEnabled?: number;
	/** Auswahl Zertifikat\/Hash */
	public u8sSipServerCertHash?: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetCallRecorderSettingsArgument {
	public constructor(that: AsnMgmtSetCallRecorderSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetCallRecorderSettingsArgument {
		return new AsnMgmtSetCallRecorderSettingsArgument({
			settings: AsnCallRecorderSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetCallRecorderSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetCallRecorderSettingsArgument",
			...params,
			value: [
				AsnCallRecorderSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnCallRecorderSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetCallRecorderSettingsResult {
	public constructor(that: AsnMgmtGetCallRecorderSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetCallRecorderSettingsResult {
		return new AsnMgmtGetCallRecorderSettingsResult({
			settings: AsnCallRecorderSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetCallRecorderSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetCallRecorderSettingsResult",
			...params,
			value: [
				AsnCallRecorderSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnCallRecorderSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtServerStatistics4AdminList extends Array<AsnMgmtServerStatistics4Admin> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtServerStatistics4Admin.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtMonGetServerStatisticsResult {
	public constructor(that: AsnMgmtMonGetServerStatisticsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtMonGetServerStatisticsResult {
		return new AsnMgmtMonGetServerStatisticsResult({
			serverStatistics: new AsnMgmtServerStatistics4AdminList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"serverStatistics"
		];
		return p;
	}

	public static type = "AsnMgmtMonGetServerStatisticsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtMonGetServerStatisticsResult",
			...params,
			value: [
				AsnMgmtServerStatistics4AdminList.getASN1Schema({ name: "serverStatistics" }),
				new asn1ts.Extension()
			]
		});
	}

	public serverStatistics!: AsnMgmtServerStatistics4AdminList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetCtiServerTypeResult {
	public constructor(that: AsnMgmtGetCtiServerTypeResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetCtiServerTypeResult {
		return new AsnMgmtGetCtiServerTypeResult({
			iServerType: AsnMgmtUCServerType.enterprise,
			iServerFeatures: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iServerType",
			"iServerFeatures"
		];
		return p;
	}

	public static type = "AsnMgmtGetCtiServerTypeResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetCtiServerTypeResult",
			...params,
			value: [
				new asn1ts.Enumerated({ name: "iServerType" }),
				new asn1ts.Integer({ name: "iServerFeatures" }),
				new asn1ts.Extension()
			]
		});
	}

	/** The type of server we are connected to */
	public iServerType!: AsnMgmtUCServerType;
	/** The features this server is offering as bitmask */
	/** (see AsnMgmtUCServerFeatures) */
	public iServerFeatures!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtNotificationSettings {
	public constructor(that: AsnMgmtNotificationSettings) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtNotificationSettings {
		return new AsnMgmtNotificationSettings({
			iUnansweredCallEMailNotification: 0,
			bEMailNotificationUseCallerMailAddress: false,
			bEMailNotificationSendEMailsClientSide: false,
			bEMailNotificationAttacheVCard: false,
			bEMailNotificationSendEMailsThirdPartyPickup: false,
			bEMailNotificationUseTelephonyLinkPrefix: false,
			emailNotificationExclusions: AsnMgmtNotificationSettingsExclusions["initEmpty"].call(0),
			iUnansweredCallSMSNotification: 0,
			bSMSNotificationUseCallerNumberAsOriginator: false,
			objSMSNotificationExclusions: AsnMgmtNotificationSettingsExclusions["initEmpty"].call(0),
			iLanguage: 0,
			u8sUserDefinedTelephonyLinkPrefix: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iUnansweredCallEMailNotification",
			"bEMailNotificationUseCallerMailAddress",
			"bEMailNotificationSendEMailsClientSide",
			"bEMailNotificationAttacheVCard",
			"bEMailNotificationSendEMailsThirdPartyPickup",
			"bEMailNotificationUseTelephonyLinkPrefix",
			"emailNotificationExclusions",
			"iUnansweredCallSMSNotification",
			"bSMSNotificationUseCallerNumberAsOriginator",
			"objSMSNotificationExclusions",
			"iLanguage",
			"u8sUserDefinedTelephonyLinkPrefix"
		];
		return p;
	}

	public static type = "AsnMgmtNotificationSettings";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtNotificationSettings",
			...params,
			value: [
				new asn1ts.Integer({ name: "iUnansweredCallEMailNotification" }),
				new asn1ts.Boolean({ name: "bEMailNotificationUseCallerMailAddress" }),
				new asn1ts.Boolean({ name: "bEMailNotificationSendEMailsClientSide" }),
				new asn1ts.Boolean({ name: "bEMailNotificationAttacheVCard" }),
				new asn1ts.Boolean({ name: "bEMailNotificationSendEMailsThirdPartyPickup" }),
				new asn1ts.Boolean({ name: "bEMailNotificationUseTelephonyLinkPrefix" }),
				AsnMgmtNotificationSettingsExclusions.getASN1Schema({ name: "emailNotificationExclusions" }),
				new asn1ts.Integer({ name: "iUnansweredCallSMSNotification" }),
				new asn1ts.Boolean({ name: "bSMSNotificationUseCallerNumberAsOriginator" }),
				AsnMgmtNotificationSettingsExclusions.getASN1Schema({ name: "objSMSNotificationExclusions" }),
				new asn1ts.Integer({ name: "iLanguage" }),
				new asn1ts.Utf8String({ name: "u8sUserDefinedTelephonyLinkPrefix" }),
				new asn1ts.Extension()
			]
		});
	}

	/** Optionen für unbeantwortete Rufe als E-Mail verschicken */
	public iUnansweredCallEMailNotification!: number;
	public bEMailNotificationUseCallerMailAddress!: boolean;
	public bEMailNotificationSendEMailsClientSide!: boolean;
	public bEMailNotificationAttacheVCard!: boolean;
	/** PCE-2378 */
	public bEMailNotificationSendEMailsThirdPartyPickup!: boolean;
	public bEMailNotificationUseTelephonyLinkPrefix!: boolean;
	public emailNotificationExclusions!: AsnMgmtNotificationSettingsExclusions;
	/** Optionen für unbeantwortete Rufe als SMS verschicken */
	public iUnansweredCallSMSNotification!: number;
	public bSMSNotificationUseCallerNumberAsOriginator!: boolean;
	public objSMSNotificationExclusions!: AsnMgmtNotificationSettingsExclusions;
	/** Sprache für die Nachrichten */
	public iLanguage!: number;
	/** PCE-2378 */
	public u8sUserDefinedTelephonyLinkPrefix!: string;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetNotificationSettingsResult {
	public constructor(that: AsnMgmtGetNotificationSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetNotificationSettingsResult {
		return new AsnMgmtGetNotificationSettingsResult({
			settings: AsnMgmtNotificationSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetNotificationSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetNotificationSettingsResult",
			...params,
			value: [
				AsnMgmtNotificationSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtNotificationSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetNotificationSettingsArgument {
	public constructor(that: AsnMgmtSetNotificationSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetNotificationSettingsArgument {
		return new AsnMgmtSetNotificationSettingsArgument({
			settings: AsnMgmtNotificationSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetNotificationSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetNotificationSettingsArgument",
			...params,
			value: [
				AsnMgmtNotificationSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtNotificationSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnSSLCertificateDetailsList extends Array<AsnSSLCertificateDetails> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnSSLCertificateDetails.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAvailableCertificatesResult {
	public constructor(that: AsnMgmtGetAvailableCertificatesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAvailableCertificatesResult {
		return new AsnMgmtGetAvailableCertificatesResult({
			certificateDetailsList: new AsnSSLCertificateDetailsList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"certificateDetailsList"
		];
		return p;
	}

	public static type = "AsnMgmtGetAvailableCertificatesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAvailableCertificatesResult",
			...params,
			value: [
				AsnSSLCertificateDetailsList.getASN1Schema({ name: "certificateDetailsList" }),
				new asn1ts.Extension()
			]
		});
	}

	public certificateDetailsList!: AsnSSLCertificateDetailsList;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtCtiForwardEntryList extends Array<AsnMgmtCtiForwardEntry> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtCtiForwardEntry.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineForwardingResult {
	public constructor(that: AsnMgmtGetLineForwardingResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineForwardingResult {
		return new AsnMgmtGetLineForwardingResult({
			iEnabled: 0,
			entryList: new AsnMgmtCtiForwardEntryList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iEnabled",
			"entryList"
		];
		return p;
	}

	public static type = "AsnMgmtGetLineForwardingResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineForwardingResult",
			...params,
			value: [
				new asn1ts.Integer({ name: "iEnabled" }),
				AsnMgmtCtiForwardEntryList.getASN1Schema({ name: "entryList" }),
				new asn1ts.Extension()
			]
		});
	}

	public iEnabled!: number;
	public entryList!: AsnMgmtCtiForwardEntryList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetLineForwardingArgument {
	public constructor(that: AsnMgmtSetLineForwardingArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetLineForwardingArgument {
		return new AsnMgmtSetLineForwardingArgument({
			iFWController: 0,
			u8sLineID: "",
			iEnabled: 0,
			entryList: new AsnMgmtCtiForwardEntryList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iFWController",
			"u8sLineID",
			"iEnabled",
			"entryList"
		];
		return p;
	}

	public static type = "AsnMgmtSetLineForwardingArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetLineForwardingArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iFWController" }),
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Integer({ name: "iEnabled" }),
				AsnMgmtCtiForwardEntryList.getASN1Schema({ name: "entryList" }),
				new asn1ts.Extension()
			]
		});
	}

	public iFWController!: number;
	public u8sLineID!: string;
	public iEnabled!: number;
	public entryList!: AsnMgmtCtiForwardEntryList;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtAvailableLanguageList extends Array<AsnMgmtAvailableLanguage> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtAvailableLanguage.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetXMLAvailableLanguagesResult {
	public constructor(that: AsnMgmtGetXMLAvailableLanguagesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetXMLAvailableLanguagesResult {
		return new AsnMgmtGetXMLAvailableLanguagesResult({
			availLanguages: new AsnMgmtAvailableLanguageList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"availLanguages"
		];
		return p;
	}

	public static type = "AsnMgmtGetXMLAvailableLanguagesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetXMLAvailableLanguagesResult",
			...params,
			value: [
				AsnMgmtAvailableLanguageList.getASN1Schema({ name: "availLanguages" }),
				new asn1ts.Extension()
			]
		});
	}

	public availLanguages!: AsnMgmtAvailableLanguageList;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtPushServiceDevicePropsList extends Array<AsnMgmtPushServiceDeviceProps> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtPushServiceDeviceProps.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtPushServiceDevicesResultArgument {
	public constructor(that: AsnMgmtPushServiceDevicesResultArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtPushServiceDevicesResultArgument {
		return new AsnMgmtPushServiceDevicesResultArgument({
			listPushDevices: new AsnMgmtPushServiceDevicePropsList(),
			u8sCrossRefID: "",
			bLastSegment: false
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"listPushDevices",
			"u8sCrossRefID",
			"bLastSegment"
		];
		return p;
	}

	public static type = "AsnMgmtPushServiceDevicesResultArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtPushServiceDevicesResultArgument",
			...params,
			value: [
				AsnMgmtPushServiceDevicePropsList.getASN1Schema({ name: "listPushDevices" }),
				new asn1ts.Utf8String({ name: "u8sCrossRefID" }),
				new asn1ts.Boolean({ name: "bLastSegment" }),
				new asn1ts.Extension()
			]
		});
	}

	/** List of Devices (max 50 in one segment) */
	public listPushDevices!: AsnMgmtPushServiceDevicePropsList;
	/** CrossrefID from AsnMgmtGetPushServiceDevicesResult. */
	public u8sCrossRefID!: string;
	/** last Segment for this u8sCrossRefID, TRUE, wenn dieses Segment das Ende der Liste ist. */
	public bLastSegment!: boolean;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtPushServiceDeviceChangedArgument {
	public constructor(that: AsnMgmtPushServiceDeviceChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtPushServiceDeviceChangedArgument {
		return new AsnMgmtPushServiceDeviceChangedArgument({
			iWhat: 0,
			deviceProps: AsnMgmtPushServiceDeviceProps["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iWhat",
			"deviceProps"
		];
		return p;
	}

	public static type = "AsnMgmtPushServiceDeviceChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtPushServiceDeviceChangedArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iWhat" }),
				AsnMgmtPushServiceDeviceProps.getASN1Schema({ name: "deviceProps" }),
				new asn1ts.Extension()
			]
		});
	}

	/** What about the list */
	/** (see AsnMgmtPushServiceDeviceChangedArgumentEnum) */
	public iWhat!: number;
	/** List of Devices (max 50 in one segment) */
	public deviceProps!: AsnMgmtPushServiceDeviceProps;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetPhoneJournalSettingsResult {
	public constructor(that: AsnMgmtGetPhoneJournalSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetPhoneJournalSettingsResult {
		return new AsnMgmtGetPhoneJournalSettingsResult({
			phoneJournalSettings: AsnMgmtPhoneJournalSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"phoneJournalSettings"
		];
		return p;
	}

	public static type = "AsnMgmtGetPhoneJournalSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetPhoneJournalSettingsResult",
			...params,
			value: [
				AsnMgmtPhoneJournalSettings.getASN1Schema({ name: "phoneJournalSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	public phoneJournalSettings!: AsnMgmtPhoneJournalSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetPhoneJournalSettingsArgument {
	public constructor(that: AsnMgmtSetPhoneJournalSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetPhoneJournalSettingsArgument {
		return new AsnMgmtSetPhoneJournalSettingsArgument({
			phoneJournalSettings: AsnMgmtPhoneJournalSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"phoneJournalSettings"
		];
		return p;
	}

	public static type = "AsnMgmtSetPhoneJournalSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetPhoneJournalSettingsArgument",
			...params,
			value: [
				AsnMgmtPhoneJournalSettings.getASN1Schema({ name: "phoneJournalSettings" }),
				new asn1ts.Extension()
			]
		});
	}

	public phoneJournalSettings!: AsnMgmtPhoneJournalSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtMeshNodeConfigs extends Array<AsnMgmtMeshNodeConfig> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtMeshNodeConfig.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetMeshNodeConfigsArgument {
	public constructor(that: AsnMgmtSetMeshNodeConfigsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetMeshNodeConfigsArgument {
		return new AsnMgmtSetMeshNodeConfigsArgument({
			configs: new AsnMgmtMeshNodeConfigs()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"configs"
		];
		return p;
	}

	public static type = "AsnMgmtSetMeshNodeConfigsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetMeshNodeConfigsArgument",
			...params,
			value: [
				AsnMgmtMeshNodeConfigs.getASN1Schema({ name: "configs" }),
				new asn1ts.Extension()
			]
		});
	}

	public configs!: AsnMgmtMeshNodeConfigs;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetMeshNodeConfigsResult {
	public constructor(that: AsnMgmtGetMeshNodeConfigsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetMeshNodeConfigsResult {
		return new AsnMgmtGetMeshNodeConfigsResult({
			configs: new AsnMgmtMeshNodeConfigs()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"configs"
		];
		return p;
	}

	public static type = "AsnMgmtGetMeshNodeConfigsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetMeshNodeConfigsResult",
			...params,
			value: [
				AsnMgmtMeshNodeConfigs.getASN1Schema({ name: "configs" }),
				new asn1ts.Extension()
			]
		});
	}

	public configs!: AsnMgmtMeshNodeConfigs;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * Status of a node
 */
export class AsnMgmtMeshNodeStatus {
	public constructor(that: AsnMgmtMeshNodeStatus) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtMeshNodeStatus {
		return new AsnMgmtMeshNodeStatus({
			u8sMeshNodeID: "",
			iStatus: 0,
			timeLastConnected: new Date(),
			timeLastStatusUpdate: new Date(),
			u8sServerVersion: "",
			u8sIPAddress: "",
			bOutbound: false,
			tlsStatus: AsnMgmtMeshNodeStatusTLS["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sMeshNodeID",
			"iStatus",
			"timeLastConnected",
			"timeLastStatusUpdate",
			"u8sServerVersion",
			"u8sIPAddress",
			"bOutbound",
			"tlsStatus"
		];
		return p;
	}

	public static type = "AsnMgmtMeshNodeStatus";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtMeshNodeStatus",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sMeshNodeID" }),
				new asn1ts.Integer({ name: "iStatus" }),
				new asn1ts.Real({ name: "timeLastConnected" }),
				new asn1ts.Real({ name: "timeLastStatusUpdate" }),
				new asn1ts.Utf8String({ name: "u8sServerVersion" }),
				new asn1ts.Utf8String({ name: "u8sIPAddress" }),
				new asn1ts.Boolean({ name: "bOutbound" }),
				AsnMgmtMeshNodeStatusTLS.getASN1Schema({ name: "tlsStatus" }),
				new asn1ts.Extension()
			]
		});
	}

	/** The mesh node id */
	public u8sMeshNodeID!: string;
	/** (see AsnMgmtMeshNodeConnectionStatusEnum) */
	public iStatus!: number;
	/** time_t last successful connect */
	public timeLastConnected!: Date;
	/** time_t last status change */
	public timeLastStatusUpdate!: Date;
	/** ucserver version of the node */
	public u8sServerVersion!: string;
	/** IP Adress of the server */
	public u8sIPAddress!: string;
	/** true if connection outbound */
	public bOutbound!: boolean;
	/** details of the tls status of the connection */
	public tlsStatus!: AsnMgmtMeshNodeStatusTLS;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtMeshNodeStatuses extends Array<AsnMgmtMeshNodeStatus> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtMeshNodeStatus.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetMeshNodeStatusesResult {
	public constructor(that: AsnMgmtGetMeshNodeStatusesResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetMeshNodeStatusesResult {
		return new AsnMgmtGetMeshNodeStatusesResult({
			statuses: new AsnMgmtMeshNodeStatuses()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"statuses"
		];
		return p;
	}

	public static type = "AsnMgmtGetMeshNodeStatusesResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetMeshNodeStatusesResult",
			...params,
			value: [
				AsnMgmtMeshNodeStatuses.getASN1Schema({ name: "statuses" }),
				new asn1ts.Extension()
			]
		});
	}

	public statuses!: AsnMgmtMeshNodeStatuses;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtConnectionInformationChangedArgument {
	public constructor(that: AsnMgmtConnectionInformationChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConnectionInformationChangedArgument {
		return new AsnMgmtConnectionInformationChangedArgument({
			u8sContactID: "",
			conInfo: AsnMgmtClientConnectionInformation["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"u8sContactID",
			"conInfo"
		];
		return p;
	}

	public static type = "AsnMgmtConnectionInformationChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConnectionInformationChangedArgument",
			...params,
			value: [
				new asn1ts.Utf8String({ name: "u8sContactID" }),
				AsnMgmtClientConnectionInformation.getASN1Schema({ name: "conInfo" }),
				new asn1ts.Extension()
			]
		});
	}

	/** ContactID this information belongs to */
	public u8sContactID!: string;
	/** Connection info (always contains the full list of connections, (no dedicated add remove notify) */
	public conInfo!: AsnMgmtClientConnectionInformation;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtConnectionOptions extends Array<AsnMgmtConnectionOption> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtConnectionOption.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetConnectionOptionsDNSResult {
	public constructor(that: AsnMgmtGetConnectionOptionsDNSResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetConnectionOptionsDNSResult {
		return new AsnMgmtGetConnectionOptionsDNSResult({
			listConnectionOptions: new AsnMgmtConnectionOptions()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"listConnectionOptions"
		];
		return p;
	}

	public static type = "AsnMgmtGetConnectionOptionsDNSResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetConnectionOptionsDNSResult",
			...params,
			value: [
				AsnMgmtConnectionOptions.getASN1Schema({ name: "listConnectionOptions" }),
				new asn1ts.Extension()
			]
		});
	}

	public listConnectionOptions!: AsnMgmtConnectionOptions;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetConfigurationManagerSettingsResult {
	public constructor(that: AsnMgmtGetConfigurationManagerSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetConfigurationManagerSettingsResult {
		return new AsnMgmtGetConfigurationManagerSettingsResult({
			settings: AsnMgmtConfigurationManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtGetConfigurationManagerSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetConfigurationManagerSettingsResult",
			...params,
			value: [
				AsnMgmtConfigurationManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtConfigurationManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetConfigurationManagerSettingsArgument {
	public constructor(that: AsnMgmtSetConfigurationManagerSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetConfigurationManagerSettingsArgument {
		return new AsnMgmtSetConfigurationManagerSettingsArgument({
			settings: AsnMgmtConfigurationManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetConfigurationManagerSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetConfigurationManagerSettingsArgument",
			...params,
			value: [
				AsnMgmtConfigurationManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtConfigurationManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUserManagerConnectionStatusResult {
	public constructor(that: AsnMgmtGetUserManagerConnectionStatusResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUserManagerConnectionStatusResult {
		return new AsnMgmtGetUserManagerConnectionStatusResult({
			status: AsnMgmtUserManagerConnectionStatus["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"status"
		];
		return p;
	}

	public static type = "AsnMgmtGetUserManagerConnectionStatusResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUserManagerConnectionStatusResult",
			...params,
			value: [
				AsnMgmtUserManagerConnectionStatus.getASN1Schema({ name: "status" }),
				new asn1ts.Extension()
			]
		});
	}

	public status!: AsnMgmtUserManagerConnectionStatus;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtUserManagerConnectionStatusChangedArgument {
	public constructor(that: AsnMgmtUserManagerConnectionStatusChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtUserManagerConnectionStatusChangedArgument {
		return new AsnMgmtUserManagerConnectionStatusChangedArgument({
			status: AsnMgmtUserManagerConnectionStatus["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"status"
		];
		return p;
	}

	public static type = "AsnMgmtUserManagerConnectionStatusChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtUserManagerConnectionStatusChangedArgument",
			...params,
			value: [
				AsnMgmtUserManagerConnectionStatus.getASN1Schema({ name: "status" }),
				new asn1ts.Extension()
			]
		});
	}

	public status!: AsnMgmtUserManagerConnectionStatus;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetConfigurationManagerStatusResult {
	public constructor(that: AsnMgmtGetConfigurationManagerStatusResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetConfigurationManagerStatusResult {
		return new AsnMgmtGetConfigurationManagerStatusResult({
			status: AsnMgmtConfigurationManagerStatus["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"status"
		];
		return p;
	}

	public static type = "AsnMgmtGetConfigurationManagerStatusResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetConfigurationManagerStatusResult",
			...params,
			value: [
				AsnMgmtConfigurationManagerStatus.getASN1Schema({ name: "status" }),
				new asn1ts.Extension()
			]
		});
	}

	public status!: AsnMgmtConfigurationManagerStatus;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtConfigurationManagerStatusChangedArgument {
	public constructor(that: AsnMgmtConfigurationManagerStatusChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConfigurationManagerStatusChangedArgument {
		return new AsnMgmtConfigurationManagerStatusChangedArgument({
			status: AsnMgmtConfigurationManagerStatus["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"status"
		];
		return p;
	}

	public static type = "AsnMgmtConfigurationManagerStatusChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConfigurationManagerStatusChangedArgument",
			...params,
			value: [
				AsnMgmtConfigurationManagerStatus.getASN1Schema({ name: "status" }),
				new asn1ts.Extension()
			]
		});
	}

	public status!: AsnMgmtConfigurationManagerStatus;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtConfigurationManagerServerList extends Array<AsnMgmtConfigurationManagerServerListItem> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtConfigurationManagerServerListItem.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetConfigurationManagerServerListResult {
	public constructor(that: AsnMgmtGetConfigurationManagerServerListResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetConfigurationManagerServerListResult {
		return new AsnMgmtGetConfigurationManagerServerListResult({
			serverList: new AsnMgmtConfigurationManagerServerList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"serverList"
		];
		return p;
	}

	public static type = "AsnMgmtGetConfigurationManagerServerListResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetConfigurationManagerServerListResult",
			...params,
			value: [
				AsnMgmtConfigurationManagerServerList.getASN1Schema({ name: "serverList" }),
				new asn1ts.Extension()
			]
		});
	}

	public serverList!: AsnMgmtConfigurationManagerServerList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtConfigurationManagerServerListChangedArgument {
	public constructor(that: AsnMgmtConfigurationManagerServerListChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtConfigurationManagerServerListChangedArgument {
		return new AsnMgmtConfigurationManagerServerListChangedArgument({
			serverList: new AsnMgmtConfigurationManagerServerList()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"serverList"
		];
		return p;
	}

	public static type = "AsnMgmtConfigurationManagerServerListChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtConfigurationManagerServerListChangedArgument",
			...params,
			value: [
				AsnMgmtConfigurationManagerServerList.getASN1Schema({ name: "serverList" }),
				new asn1ts.Extension()
			]
		});
	}

	public serverList!: AsnMgmtConfigurationManagerServerList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAdminUserManagerSettingsResult {
	public constructor(that: AsnMgmtGetAdminUserManagerSettingsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAdminUserManagerSettingsResult {
		return new AsnMgmtGetAdminUserManagerSettingsResult({
			settings: AsnMgmtAdminUserManagerSettings["initEmpty"].call(0),
			iLastErrorCode: 0
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings",
			"iLastErrorCode"
		];
		return p;
	}

	public static type = "AsnMgmtGetAdminUserManagerSettingsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAdminUserManagerSettingsResult",
			...params,
			value: [
				AsnMgmtAdminUserManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Integer({ name: "iLastErrorCode" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtAdminUserManagerSettings;
	public iLastErrorCode!: number;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtSetAdminUserManagerSettingsArgument {
	public constructor(that: AsnMgmtSetAdminUserManagerSettingsArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtSetAdminUserManagerSettingsArgument {
		return new AsnMgmtSetAdminUserManagerSettingsArgument({
			settings: AsnMgmtAdminUserManagerSettings["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"settings"
		];
		return p;
	}

	public static type = "AsnMgmtSetAdminUserManagerSettingsArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtSetAdminUserManagerSettingsArgument",
			...params,
			value: [
				AsnMgmtAdminUserManagerSettings.getASN1Schema({ name: "settings" }),
				new asn1ts.Extension()
			]
		});
	}

	public settings!: AsnMgmtAdminUserManagerSettings;
}

// [PrintTSTypeDefCode]
// [PrintTSChoiceDefCode]
export class AsnMgmtAdminUserRightChoice {
	public constructor(that?: AsnMgmtAdminUserRightChoice) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAdminUserRightChoice {
		return new AsnMgmtAdminUserRightChoice();
	}

	public static type = "AsnMgmtAdminUserRightChoice";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Choice {
		return new asn1ts.Choice({
			name: "AsnMgmtAdminUserRightChoice",
			...params,
			value: [
				AsnMgmtAdminUserRightStateReadWrite.getASN1Schema({ name: "readwrite", idBlock: { optionalID: 0 } }),
				AsnMgmtAdminUserRightStateExecute.getASN1Schema({ name: "execute", idBlock: { optionalID: 1 } })
			]
		});
	}

	public readwrite?: AsnMgmtAdminUserRightStateReadWrite;
	public execute?: AsnMgmtAdminUserRightStateExecute;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
/**
 * The mapping right enum to details what i am allowed to do
 */
export class AsnMgmtAdminUserRight {
	public constructor(that: AsnMgmtAdminUserRight) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtAdminUserRight {
		return new AsnMgmtAdminUserRight({
			right: AsnMgmtAdminUserRightEnum.common_DataImport,
			state: AsnMgmtAdminUserRightChoice["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"right",
			"state"
		];
		return p;
	}

	public static type = "AsnMgmtAdminUserRight";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtAdminUserRight",
			...params,
			value: [
				new asn1ts.Enumerated({ name: "right" }),
				AsnMgmtAdminUserRightChoice.getASN1Schema({ name: "state" }),
				new asn1ts.Extension()
			]
		});
	}

	public right!: AsnMgmtAdminUserRightEnum;
	public state!: AsnMgmtAdminUserRightChoice;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtAdminUserRights extends Array<AsnMgmtAdminUserRight> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtAdminUserRight.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetAdminUserRightsResult {
	public constructor(that: AsnMgmtGetAdminUserRightsResult) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetAdminUserRightsResult {
		return new AsnMgmtGetAdminUserRightsResult({
			rights: new AsnMgmtAdminUserRights()
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"rights"
		];
		return p;
	}

	public static type = "AsnMgmtGetAdminUserRightsResult";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetAdminUserRightsResult",
			...params,
			value: [
				AsnMgmtAdminUserRights.getASN1Schema({ name: "rights" }),
				new asn1ts.Extension()
			]
		});
	}

	public rights!: AsnMgmtAdminUserRights;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtComputerFoundEventArgument {
	public constructor(that: AsnMgmtComputerFoundEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtComputerFoundEventArgument {
		return new AsnMgmtComputerFoundEventArgument({
			computerProfile: ENetUC_Admin.AsnComputerProfile["initEmpty"].call(0),
			softwareStatusComputer: AsnMgmtSoftwareStatusComputer["initEmpty"].call(0),
			clientInstallProfileData: AsnMgmtClientInstallProfileData["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"computerProfile",
			"softwareStatusComputer",
			"clientInstallProfileData"
		];
		return p;
	}

	public static type = "AsnMgmtComputerFoundEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtComputerFoundEventArgument",
			...params,
			value: [
				ENetUC_Admin.AsnComputerProfile.getASN1Schema({ name: "computerProfile" }),
				AsnMgmtSoftwareStatusComputer.getASN1Schema({ name: "softwareStatusComputer" }),
				AsnMgmtClientInstallProfileData.getASN1Schema({ name: "clientInstallProfileData" }),
				new asn1ts.Extension()
			]
		});
	}

	public computerProfile!: ENetUC_Admin.AsnComputerProfile;
	public softwareStatusComputer!: AsnMgmtSoftwareStatusComputer;
	public clientInstallProfileData!: AsnMgmtClientInstallProfileData;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetLineStatesEventArgument {
	public constructor(that: AsnMgmtGetLineStatesEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetLineStatesEventArgument {
		return new AsnMgmtGetLineStatesEventArgument({
			iDumpMessage: 0,
			iDumpType: 0,
			u8sLineID: "",
			iOpenState: 0,
			iNumCalls: 0,
			iSipResponseCode: 0,
			u8sReasonPhrase: ""
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"iDumpMessage",
			"iDumpType",
			"u8sLineID",
			"iOpenState",
			"iNumCalls",
			"iSipResponseCode",
			"u8sReasonPhrase"
		];
		if (bIncludeOptionals) {
			p.push(
				"u8sEffectiveHomeServer",
				"lineStatusList"
			);
		}
		return p;
	}

	public static type = "AsnMgmtGetLineStatesEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetLineStatesEventArgument",
			...params,
			value: [
				new asn1ts.Integer({ name: "iDumpMessage" }),
				new asn1ts.Integer({ name: "iDumpType" }),
				new asn1ts.Utf8String({ name: "u8sLineID" }),
				new asn1ts.Integer({ name: "iOpenState" }),
				new asn1ts.Integer({ name: "iNumCalls" }),
				new asn1ts.Integer({ name: "iSipResponseCode" }),
				new asn1ts.Utf8String({ name: "u8sReasonPhrase" }),
				new asn1ts.Utf8String({ name: "u8sEffectiveHomeServer", idBlock: { optionalID: 0 } }),
				AsnMgmtLineStatusList.getASN1Schema({ name: "lineStatusList", idBlock: { optionalID: 1 } }),
				new asn1ts.Extension()
			]
		});
	}

	public iDumpMessage!: number;
	public iDumpType!: number;
	public u8sLineID!: string;
	/** (see AsnCtiLineOpenStatus) */
	public iOpenState!: number;
	public iNumCalls!: number;
	public iSipResponseCode!: number;
	public u8sReasonPhrase!: string;
	/**
	 * ProCall DataCenter only. This is the effective home server identification of the UCServer that (currently) provides this line.
	 * For SIPAV lines and TAPI lines not enabled by the \"use lines automatically\" feature, this is usually the same as the
	 * home server in the line's configuration. However, when moving a line between two servers, this may differ for a short period of time.
	 * For TAPI lines that are enabled by the \"use lines automatically\" feature this might (temporarily) contain multiple servers in the format (2)server1.domain.de;server2.domain.de
	 * Important: The format \"(count)server1;server2;servern\" is only a temporary workaround. do not try to parse!
	 * @added 28.05.2024
	 */
	public u8sEffectiveHomeServer?: string;
	/**
	 * ProCall DataCenter only: List of line status from several servers
	 * @added 15.07.2024
	 */
	public lineStatusList?: AsnMgmtLineStatusList;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineGroupAddedArgument {
	public constructor(that: AsnMgmtOnLineGroupAddedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineGroupAddedArgument {
		return new AsnMgmtOnLineGroupAddedArgument({
			config: AsnMgmtTapiLineGroupConfiguration["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"config"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineGroupAddedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineGroupAddedArgument",
			...params,
			value: [
				AsnMgmtTapiLineGroupConfiguration.getASN1Schema({ name: "config" }),
				new asn1ts.Extension()
			]
		});
	}

	public config!: AsnMgmtTapiLineGroupConfiguration;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtOnLineGroupChangedArgument {
	public constructor(that: AsnMgmtOnLineGroupChangedArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtOnLineGroupChangedArgument {
		return new AsnMgmtOnLineGroupChangedArgument({
			config: AsnMgmtTapiLineGroupConfiguration["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"config"
		];
		return p;
	}

	public static type = "AsnMgmtOnLineGroupChangedArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtOnLineGroupChangedArgument",
			...params,
			value: [
				AsnMgmtTapiLineGroupConfiguration.getASN1Schema({ name: "config" }),
				new asn1ts.Extension()
			]
		});
	}

	public config!: AsnMgmtTapiLineGroupConfiguration;
}

// [PrintTSTypeDefCode]
// [PrintTSSeqDefCode]
export class AsnMgmtGetUsersEventArgument {
	public constructor(that: AsnMgmtGetUsersEventArgument) {
		Object.assign(this, that);
	}

	private static initEmpty(): AsnMgmtGetUsersEventArgument {
		return new AsnMgmtGetUsersEventArgument({
			userProfile: ENetUC_Admin.AsnUserProfile["initEmpty"].call(0),
			clientConnectionInfo: AsnMgmtClientConnectionInformation["initEmpty"].call(0)
		});
	}

	public static getOwnPropertyNames(bIncludeOptionals: boolean = true): string[] {
		const p = [
			"userProfile",
			"clientConnectionInfo"
		];
		return p;
	}

	public static type = "AsnMgmtGetUsersEventArgument";

	public static getASN1Schema(params?: asn1ts.ConstructedParams): asn1ts.Sequence {
		return new asn1ts.Sequence({
			name: "AsnMgmtGetUsersEventArgument",
			...params,
			value: [
				ENetUC_Admin.AsnUserProfile.getASN1Schema({ name: "userProfile" }),
				AsnMgmtClientConnectionInformation.getASN1Schema({ name: "clientConnectionInfo" }),
				new asn1ts.Extension()
			]
		});
	}

	public userProfile!: ENetUC_Admin.AsnUserProfile;
	public clientConnectionInfo!: AsnMgmtClientConnectionInformation;
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtUserManagerConnectionStatusList extends Array<AsnMgmtUserManagerConnectionStatus> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtUserManagerConnectionStatus.getASN1Schema()
		});
	}
}

// [PrintTSTypeDefCode]
// [PrintTSSetOfDefCode]
// [PrintTSListClass]
export class AsnMgmtConfigurationManagerStatusList extends Array<AsnMgmtConfigurationManagerStatus> {
	public static getASN1Schema(params?: asn1ts.SequenceOfParams): asn1ts.SequenceOf {
		return new asn1ts.SequenceOf({
			...params,
			value: AsnMgmtConfigurationManagerStatus.getASN1Schema()
		});
	}
}
