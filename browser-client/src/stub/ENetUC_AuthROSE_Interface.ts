// [PrintTSROSEInterfaceCode]
// [PrintTSROSEHeader]
/**
 * ENetUC_AuthROSE_Interface
 * "UC-Server-Access-Protocol-Auth" ASN.1 interfaces.
 * This file was generated by estos esnacc (V6.0.19, 20.09.2024)
 * based on Coral WinSnacc written by Deepak Gupta
 * NOTE: This is a machine generated file - editing not recommended
 */

// prettier-ignore
/* eslint-disable */
// [PrintTSROSEImport]
import { IReceiveInvokeContext, AsnInvokeProblem } from "./TSROSEBase";
import { ISendInvokeContextParams } from "./TSInvokeContext";
// Local imports
import * as ENetUC_Auth from "./ENetUC_Auth";
// [PrintTSImports]
import * as ENetUC_Common from "./ENetUC_Common";
import * as ENetUC_Common_SIPCTI from "./ENetUC_Common_SIPCTI";
import * as ENetUC_Common_AsnContact from "./ENetUC_Common_AsnContact";
import * as ENetUC_Common_Auth from "./ENetUC_Common_Auth";
// [PrintTSRootTypes]
export const MODULE_NAME = "ENetUC_AuthROSEInterface";
export const MODULE_LASTCHANGE = "2024-08-21T00:00:00Z";
export const MODULE_MAJOR_VERSION = 8;
export const MODULE_MINOR_VERSION = 20240821;
export const MODULE_VERSION = "8.0.20240821";

// [PrintTSROSEInterface]
export interface IENetUC_AuthROSE {
	invoke_asnNegotiateServerConnectionV2(argument: ENetUC_Auth.AsnNegotiateServerConnectionV2Argument, invokeContext?: ISendInvokeContextParams): Promise<ENetUC_Auth.AsnNegotiateServerConnectionV2ResultChoice | ENetUC_Common.AsnRequestError | AsnInvokeProblem>;
	invoke_asnLoginV2(argument: ENetUC_Common_Auth.AsnLoginV2Argument, invokeContext?: ISendInvokeContextParams): Promise<ENetUC_Common_Auth.AsnLoginV2Result | ENetUC_Common.AsnRequestError | AsnInvokeProblem>;
	event_asnLogoff(argument: ENetUC_Auth.AsnLogoffArgument, invokeContext?: ISendInvokeContextParams): void;
	invoke_asnGetUserTokenV2(argument: ENetUC_Auth.AsnGetUserTokenArgument, invokeContext?: ISendInvokeContextParams): Promise<ENetUC_Auth.AsnGetUserTokenV2Result | ENetUC_Common.AsnRequestError | AsnInvokeProblem>;
	invoke_asnGetLoggedInContactV2(argument: ENetUC_Auth.AsnGetLoggedInContactArgument, invokeContext?: ISendInvokeContextParams): Promise<ENetUC_Auth.AsnGetLoggedInContactV2Result | ENetUC_Common.AsnRequestError | AsnInvokeProblem>;
}

// [PrintTSROSEHandlerInterface]
// Contains all invokes of the interface (normally the server side)
export interface IENetUC_AuthROSE_Invoke_Handler {
	// Allows the implementer to (globally) implement an async local storage (thread local storage) for calls inside the called environment)
	setLogContext?(argument: unknown, invokeContext: IReceiveInvokeContext): void;
	onInvoke_asnNegotiateServerConnectionV2(argument: ENetUC_Auth.AsnNegotiateServerConnectionV2Argument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Auth.AsnNegotiateServerConnectionV2ResultChoice | ENetUC_Common.AsnRequestError | undefined>;
	onInvoke_asnLoginV2(argument: ENetUC_Common_Auth.AsnLoginV2Argument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Common_Auth.AsnLoginV2Result | ENetUC_Common.AsnRequestError | undefined>;
	onInvoke_asnGetUserTokenV2(argument: ENetUC_Auth.AsnGetUserTokenArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Auth.AsnGetUserTokenV2Result | ENetUC_Common.AsnRequestError | undefined>;
	onInvoke_asnGetLoggedInContactV2(argument: ENetUC_Auth.AsnGetLoggedInContactArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Auth.AsnGetLoggedInContactV2Result | ENetUC_Common.AsnRequestError | undefined>;
}

// Contains all events of the interface (normally the client side)
export interface IENetUC_AuthROSE_Event_Handler {
	// Allows the implementer to (globally) implement an async local storage (thread local storage) for calls inside the called environment)
	setLogContext?(argument: unknown, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnLogoff(argument: ENetUC_Auth.AsnLogoffArgument, invokeContext: IReceiveInvokeContext): void;
}

// Contains all invokes and events of the interface
export type IENetUC_AuthROSE_Handler = IENetUC_AuthROSE_Invoke_Handler & IENetUC_AuthROSE_Event_Handler;

// [PrintTSROSEServerCopyPasteInterface]
/* Copy paste code for the import statement
import { IReceiveInvokeContext } from "./TSROSEBase";
import * as ENetUC_Common from "./ENetUC_Common";
import { ENetUC_Auth } from "./ENetUC_Auth";
*/

/**
 * Allows to set the log context for an invoke.
 * This method is called in advanced of methods handled inside this handler
 * The idea is to implement a async local storage based on the provided data from the argument or invokeContext
 *
 * @param argument - the snacc rose argument
 * @param invokeContext - the invoke context
 */
/*
public setLogContext(argument: unknown, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * Negotiate server and client versions (current version)
 *
 * Handshaking the core details for the client and the server
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 * @returns - AsnNegotiateServerConnectionV2ResultChoice on success, AsnRequestError on error or undefined if the function is not implemented
 */
/*
public async onInvoke_asnNegotiateServerConnectionV2(argument: ENetUC_Auth.AsnNegotiateServerConnectionV2Argument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Auth.AsnNegotiateServerConnectionV2ResultChoice | ENetUC_Common.AsnRequestError | undefined> {
	return undefined;
}
*/

/**
 * Used to login to the UCServer
 *
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 * @returns - AsnLoginV2Result on success, AsnRequestError on error or undefined if the function is not implemented
 */
/*
public async onInvoke_asnLoginV2(argument: ENetUC_Common_Auth.AsnLoginV2Argument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Common_Auth.AsnLoginV2Result | ENetUC_Common.AsnRequestError | undefined> {
	return undefined;
}
*/

/**
 * Request a user token to identify the user for other services.
 *
 * @param argument - Argument for asnGetUserToken.
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 * @returns - AsnGetUserTokenV2Result on success, AsnRequestError on error or undefined if the function is not implemented
 */
/*
public async onInvoke_asnGetUserTokenV2(argument: ENetUC_Auth.AsnGetUserTokenArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Auth.AsnGetUserTokenV2Result | ENetUC_Common.AsnRequestError | undefined> {
	return undefined;
}
*/

/**
 * Get Properties of Loggedin User
 *
 * A Client may use this function to get information about himself.
 * The User Profile will be returned.
 *
 * @param argument - Argument for asnGetLoggedInContact.
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 * @returns - AsnGetLoggedInContactV2Result on success, AsnRequestError on error or undefined if the function is not implemented
 */
/*
public async onInvoke_asnGetLoggedInContactV2(argument: ENetUC_Auth.AsnGetLoggedInContactArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_Auth.AsnGetLoggedInContactV2Result | ENetUC_Common.AsnRequestError | undefined> {
	return undefined;
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnLogoff(argument: ENetUC_Auth.AsnLogoffArgument, invokeContext: IReceiveInvokeContext): void {
}
*/
