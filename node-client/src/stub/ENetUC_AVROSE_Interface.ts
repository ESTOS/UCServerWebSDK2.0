// [PrintTSROSEInterfaceCode]
// [PrintTSROSEHeader]
/**
 * ENetUC_AVROSE_Interface
 * "UC-Server-Access-Protocol-AV" ASN.1 interfaces.
 * This file was generated by estos esnacc (V6.0.19, 20.09.2024)
 * based on Coral WinSnacc written by Deepak Gupta
 * NOTE: This is a machine generated file - editing not recommended
 */

// prettier-ignore
/* eslint-disable */
// [PrintTSROSEImport]
import { IReceiveInvokeContext, AsnInvokeProblem } from "./TSROSEBase";
import { ISendInvokeContextParams } from "./TSInvokeContext";
// Local imports
import * as ENetUC_AV from "./ENetUC_AV";
// [PrintTSImports]
import * as ENetUC_Common from "./ENetUC_Common";
import * as ENetUC_Common_SIPCTI from "./ENetUC_Common_SIPCTI";
// [PrintTSRootTypes]
export const MODULE_NAME = "ENetUC_AVROSEInterface";
export const MODULE_LASTCHANGE = "1970-01-01T00:00:00Z";
export const MODULE_MAJOR_VERSION = 8;
export const MODULE_MINOR_VERSION = 0;
export const MODULE_VERSION = "8.0.0";

// [PrintTSROSEInterface]
export interface IENetUC_AVROSE {
	event_asnAVDropCall(argument: ENetUC_AV.AsnAVDropCallArgument, invokeContext?: ISendInvokeContextParams): void;
	invoke_asnAVMakeCallV2(argument: ENetUC_AV.AsnAVMakeCallV2Argument, invokeContext?: ISendInvokeContextParams): Promise<ENetUC_AV.AsnAVMakeCallResult | ENetUC_Common.AsnRequestError | AsnInvokeProblem>;
	event_asnAVNewCallV2(argument: ENetUC_AV.AsnAVNewCallV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVCallStateChanged(argument: ENetUC_AV.AsnAVCallStateChangedArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVCallMessageV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVConnectV2(argument: ENetUC_AV.AsnAVConnectV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVAlertV2(argument: ENetUC_AV.AsnAVAlertV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnRequestSTUNandTURN(argument: ENetUC_AV.AsnRequestSTUNandTURNArgument, invokeContext?: ISendInvokeContextParams): void;
	invoke_asnGetSTUNandTURN(argument: ENetUC_AV.AsnGetSTUNandTURNArgument, invokeContext?: ISendInvokeContextParams): Promise<ENetUC_AV.AsnGetSTUNandTURNResult | ENetUC_Common.AsnRequestError | AsnInvokeProblem>;
	event_asnSTUNandTURNConfigChanged(argument: ENetUC_AV.AsnSTUNandTURNConfigChangedArgument, invokeContext?: ISendInvokeContextParams): void;
	invoke_asnAVGetIceServers(argument: ENetUC_AV.AsnAVGetIceServersArgument, invokeContext?: ISendInvokeContextParams): Promise<ENetUC_AV.AsnAVGetIceServersResult | ENetUC_Common.AsnRequestError | AsnInvokeProblem>;
	event_asnAVMakeMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVNewMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVConnectMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVAlertMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVDropMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVCallHoldV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVCallHoldAckV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVCallRetrieveV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVCallRetrieveAckV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVTransferGetID(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVTransferGetIDResult(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVTransferStart(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext?: ISendInvokeContextParams): void;
	event_asnAVTransferStartResult(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext?: ISendInvokeContextParams): void;
}

// [PrintTSROSEHandlerInterface]
// Contains all invokes of the interface (normally the server side)
export interface IENetUC_AVROSE_Invoke_Handler {
	// Allows the implementer to (globally) implement an async local storage (thread local storage) for calls inside the called environment)
	setLogContext?(argument: unknown, invokeContext: IReceiveInvokeContext): void;
	onInvoke_asnAVMakeCallV2(argument: ENetUC_AV.AsnAVMakeCallV2Argument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_AV.AsnAVMakeCallResult | ENetUC_Common.AsnRequestError | undefined>;
	onInvoke_asnGetSTUNandTURN(argument: ENetUC_AV.AsnGetSTUNandTURNArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_AV.AsnGetSTUNandTURNResult | ENetUC_Common.AsnRequestError | undefined>;
	onInvoke_asnAVGetIceServers(argument: ENetUC_AV.AsnAVGetIceServersArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_AV.AsnAVGetIceServersResult | ENetUC_Common.AsnRequestError | undefined>;
}

// Contains all events of the interface (normally the client side)
export interface IENetUC_AVROSE_Event_Handler {
	// Allows the implementer to (globally) implement an async local storage (thread local storage) for calls inside the called environment)
	setLogContext?(argument: unknown, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVDropCall(argument: ENetUC_AV.AsnAVDropCallArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVNewCallV2(argument: ENetUC_AV.AsnAVNewCallV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVCallStateChanged(argument: ENetUC_AV.AsnAVCallStateChangedArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVCallMessageV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVConnectV2(argument: ENetUC_AV.AsnAVConnectV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVAlertV2(argument: ENetUC_AV.AsnAVAlertV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnRequestSTUNandTURN(argument: ENetUC_AV.AsnRequestSTUNandTURNArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnSTUNandTURNConfigChanged(argument: ENetUC_AV.AsnSTUNandTURNConfigChangedArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVMakeMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVNewMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVConnectMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVAlertMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVDropMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVCallHoldV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVCallHoldAckV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVCallRetrieveV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVCallRetrieveAckV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVTransferGetID(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVTransferGetIDResult(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVTransferStart(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void;
	onEvent_asnAVTransferStartResult(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void;
}

// Contains all invokes and events of the interface
export type IENetUC_AVROSE_Handler = IENetUC_AVROSE_Invoke_Handler & IENetUC_AVROSE_Event_Handler;

// [PrintTSROSEServerCopyPasteInterface]
/* Copy paste code for the import statement
import { IReceiveInvokeContext } from "./TSROSEBase";
import * as ENetUC_Common from "./ENetUC_Common";
import { ENetUC_AV } from "./ENetUC_AV";
*/

/**
 * Allows to set the log context for an invoke.
 * This method is called in advanced of methods handled inside this handler
 * The idea is to implement a async local storage based on the provided data from the argument or invokeContext
 *
 * @param argument - the snacc rose argument
 * @param invokeContext - the invoke context
 */
/*
public setLogContext(argument: unknown, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 * @returns - AsnAVMakeCallResult on success, AsnRequestError on error or undefined if the function is not implemented
 */
/*
public async onInvoke_asnAVMakeCallV2(argument: ENetUC_AV.AsnAVMakeCallV2Argument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_AV.AsnAVMakeCallResult | ENetUC_Common.AsnRequestError | undefined> {
	return undefined;
}
*/

/**
 * Konfiguration von STUN und TURN abholen (als operation)
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 * @returns - AsnGetSTUNandTURNResult on success, AsnRequestError on error or undefined if the function is not implemented
 */
/*
public async onInvoke_asnGetSTUNandTURN(argument: ENetUC_AV.AsnGetSTUNandTURNArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_AV.AsnGetSTUNandTURNResult | ENetUC_Common.AsnRequestError | undefined> {
	return undefined;
}
*/

/**
 * Konfiguration von STUN und TURN abholen (als operation) - Result browser kompatibel
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 * @returns - AsnAVGetIceServersResult on success, AsnRequestError on error or undefined if the function is not implemented
 */
/*
public async onInvoke_asnAVGetIceServers(argument: ENetUC_AV.AsnAVGetIceServersArgument, invokeContext: IReceiveInvokeContext): Promise<ENetUC_AV.AsnAVGetIceServersResult | ENetUC_Common.AsnRequestError | undefined> {
	return undefined;
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVDropCall(argument: ENetUC_AV.AsnAVDropCallArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVNewCallV2(argument: ENetUC_AV.AsnAVNewCallV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * Invoked (Event) if CallState \/ Information has changed
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVCallStateChanged(argument: ENetUC_AV.AsnAVCallStateChangedArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * Invoked (Event) if CallState \/ Information has changed
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVCallMessageV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVConnectV2(argument: ENetUC_AV.AsnAVConnectV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVAlertV2(argument: ENetUC_AV.AsnAVAlertV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * Event von Client zum Server um die Konfiguration von STUN und TURN zu bekommen
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnRequestSTUNandTURN(argument: ENetUC_AV.AsnRequestSTUNandTURNArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * Event von Server zum Client wenn entweder vom Client angefordert durch
 * asnRequestSTUNandTURN oder wenn Konfiguration am Server geändert wurde.
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnSTUNandTURNConfigChanged(argument: ENetUC_AV.AsnSTUNandTURNConfigChangedArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVMakeMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVNewMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVConnectMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVAlertMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * -
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVDropMedia(argument: ENetUC_AV.AsnAVMediaChangeArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Call Hold Request
 * \@addded 22.08.2024
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVCallHoldV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Call Hold Request Acknowledgement
 * \@addded 22.08.2024
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVCallHoldAckV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Call Retrieve Request
 * \@addded 22.08.2024
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVCallRetrieveV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Call Retrieve Request Acknowledgement
 * \@addded 22.08.2024
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVCallRetrieveAckV2(argument: ENetUC_AV.AsnAVCallMessageV2Argument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Transfer Get ID Request
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVTransferGetID(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Transfer Get ID Acknowledgement
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVTransferGetIDResult(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Transfer Start Request
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVTransferStart(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void {
}
*/

/**
 * ** AV Transfer Start Acknowledgement
 *
 * @param argument -
 * @param invokeContext - Invokecontext from the asn.1 lib (containing invoke related data)
 */
/*
public onEvent_asnAVTransferStartResult(argument: ENetUC_AV.AsnAVTransferArgument, invokeContext: IReceiveInvokeContext): void {
}
*/
